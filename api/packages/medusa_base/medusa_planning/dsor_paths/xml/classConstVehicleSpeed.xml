<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classConstVehicleSpeed" kind="class" language="C++" prot="public">
    <compoundname>ConstVehicleSpeed</compoundname>
    <basecompoundref refid="classSpeed" prot="public" virt="non-virtual">Speed</basecompoundref>
    <includes refid="ConstVehicleSpeed_8h" local="no">ConstVehicleSpeed.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classConstVehicleSpeed_1a6164b48f67b8984e831fa4af0dbfc310" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ConstVehicleSpeed::vehicle_speed_</definition>
        <argsstring></argsstring>
        <name>vehicle_speed_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Attribute used to store the desired vehicle speed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="73" column="12" bodyfile="include/algorithms/speed_profiles/ConstVehicleSpeed.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classConstVehicleSpeed_1a735574216f8c6e0a03549b7a14069eeb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ConstVehicleSpeed::default_speed_</definition>
        <argsstring></argsstring>
        <name>default_speed_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>The default speed to be used if we have less speed sections then path sections in the path. This is the value that will be used for the other path sections (the paths that do not have a corresponding speed sections) and if this is the last speed section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="81" column="12" bodyfile="include/algorithms/speed_profiles/ConstVehicleSpeed.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classConstVehicleSpeed_1a1a7255da5b0a4cc709cb14539b19964d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ConstVehicleSpeed::ConstVehicleSpeed</definition>
        <argsstring>(double vehicle_speed, double default_val)</argsstring>
        <name>ConstVehicleSpeed</name>
        <param>
          <type>double</type>
          <declname>vehicle_speed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classConstVehicleSpeed" kindref="compound">ConstVehicleSpeed</ref> class. Receives as a parameter a double which represents the desired speed of the vehicle in the inertial frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vehicle_speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired speed for the vehicle in m/s </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired default_value when the vehicle is outside the gamma range </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="31" column="5" bodyfile="src/algorithms/speed_profiles/ConstVehicleSpeed.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classConstVehicleSpeed_1aac81ee1a32179f281ed69bd693825a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ConstVehicleSpeed::getVd</definition>
        <argsstring>(double gamma, double tangent_norm) override</argsstring>
        <name>getVd</name>
        <reimplements refid="classSpeed_1a3de51bdd958cfc92e939441d6e6de268">getVd</reimplements>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tangent_norm</declname>
        </param>
        <briefdescription>
<para>Method to get the desired velocity for the virtual target on the path given the path parameter (given by the value of gamma) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>The path parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tangent_norm</parametername>
</parameternamelist>
<parameterdescription>
<para>The norm of the tangent to the path</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double with the desired speed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="42" column="12" bodyfile="src/algorithms/speed_profiles/ConstVehicleSpeed.cpp" bodystart="10" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classConstVehicleSpeed_1abe43b77b6647396792fdbc1587e79dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ConstVehicleSpeed::get_d_Vd</definition>
        <argsstring>(double gamma, double tangent_norm) override</argsstring>
        <name>get_d_Vd</name>
        <reimplements refid="classSpeed_1a4937f3061c322c0bf804f3d1248dab08">get_d_Vd</reimplements>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tangent_norm</declname>
        </param>
        <briefdescription>
<para>Method to get the desired acceleration for the virtual target on the path given the path parameter (given by the value of gamma) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the path parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tangent_norm</parametername>
</parameternamelist>
<parameterdescription>
<para>The norm of the tangent to the path</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double with the desired acceleration </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="53" column="12" bodyfile="src/algorithms/speed_profiles/ConstVehicleSpeed.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classConstVehicleSpeed_1a164ee6184451deeaf754c2d6466e3969" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double ConstVehicleSpeed::getDefaultVd</definition>
        <argsstring>(double gamma, double tangent_norm) override</argsstring>
        <name>getDefaultVd</name>
        <reimplements refid="classSpeed_1a8d0c9eaca96107cd1ed8d13d2a117e64">getDefaultVd</reimplements>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tangent_norm</declname>
        </param>
        <briefdescription>
<para>Method to get the default desired velocity for safety when we are doing path following and want to have a backup value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the path parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tangent_norm</parametername>
</parameternamelist>
<parameterdescription>
<para>The norm of the tangent to the path in gamma</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double with the default desired speed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="65" column="12" bodyfile="src/algorithms/speed_profiles/ConstVehicleSpeed.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that implements a constant speed value requirement. This class will receive in its constructor the desired velocity for the speed in the inertial frame and will implement the corresponding speed in the path frame. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is used as a part of the speeds library <simplesect kind="author"><para>Marcelo Jacinto </para>
</simplesect>
<simplesect kind="author"><para>Joao Quintas </para>
</simplesect>
<simplesect kind="author"><para>Joao Cruz </para>
</simplesect>
<simplesect kind="author"><para>Hung Tuan </para>
</simplesect>
<simplesect kind="version"><para>1.0a </para>
</simplesect>
<simplesect kind="date"><para>2021 </para>
</simplesect>
<simplesect kind="copyright"><para>MIT </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ConstVehicleSpeed</label>
        <link refid="classConstVehicleSpeed"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Speed</label>
        <link refid="classSpeed"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ConstVehicleSpeed</label>
        <link refid="classConstVehicleSpeed"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Speed</label>
        <link refid="classSpeed"/>
      </node>
    </collaborationgraph>
    <location file="include/algorithms/speed_profiles/ConstVehicleSpeed.h" line="19" column="37" bodyfile="include/algorithms/speed_profiles/ConstVehicleSpeed.h" bodystart="19" bodyend="82"/>
    <listofallmembers>
      <member refid="classConstVehicleSpeed_1a1a7255da5b0a4cc709cb14539b19964d" prot="public" virt="non-virtual"><scope>ConstVehicleSpeed</scope><name>ConstVehicleSpeed</name></member>
      <member refid="classConstVehicleSpeed_1a735574216f8c6e0a03549b7a14069eeb" prot="private" virt="non-virtual"><scope>ConstVehicleSpeed</scope><name>default_speed_</name></member>
      <member refid="classConstVehicleSpeed_1abe43b77b6647396792fdbc1587e79dba" prot="public" virt="virtual"><scope>ConstVehicleSpeed</scope><name>get_d_Vd</name></member>
      <member refid="classConstVehicleSpeed_1a164ee6184451deeaf754c2d6466e3969" prot="public" virt="virtual"><scope>ConstVehicleSpeed</scope><name>getDefaultVd</name></member>
      <member refid="classConstVehicleSpeed_1aac81ee1a32179f281ed69bd693825a58" prot="public" virt="virtual"><scope>ConstVehicleSpeed</scope><name>getVd</name></member>
      <member refid="classConstVehicleSpeed_1a6164b48f67b8984e831fa4af0dbfc310" prot="private" virt="non-virtual"><scope>ConstVehicleSpeed</scope><name>vehicle_speed_</name></member>
      <member refid="classSpeed_1a47ac1336c636f4dc4fb1d288dea76e3c" prot="public" virt="virtual"><scope>ConstVehicleSpeed</scope><name>~Speed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
