<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Path_8h" kind="file" language="C++">
    <compoundname>Path.h</compoundname>
    <includes refid="PathSection_8h" local="yes">PathSection.h</includes>
    <includes refid="Speed_8h" local="yes">Speed.h</includes>
    <includes local="no">array</includes>
    <includes local="no">optional</includes>
    <includes local="no">tuple</includes>
    <includes local="no">utility</includes>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="PathNode_8h" local="yes">include/ros/PathNode.h</includedby>
    <includedby refid="Path_8cpp" local="yes">src/algorithms/Path.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="3">
        <label>Eigen/Core</label>
      </node>
      <node id="1">
        <label>include/algorithms/Path.h</label>
        <link refid="Path_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>PathSection.h</label>
        <link refid="PathSection_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Speed.h</label>
        <link refid="Speed_8h_source"/>
      </node>
      <node id="9">
        <label>tuple</label>
      </node>
      <node id="8">
        <label>optional</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="7">
        <label>array</label>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/algorithms/Path.h</label>
        <link refid="Path_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/ros/PathNode.h</label>
        <link refid="PathNode_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classPath" prot="public">Path</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="Path_8h_1a5bf95b59427bb068a9998b02b2e2723a" prot="public" static="no" strong="no">
        <type></type>
        <name>TypePath_t</name>
        <enumvalue id="Path_8h_1a5bf95b59427bb068a9998b02b2e2723aa892292571176aa7df3c47b3c9d29eab3" prot="public">
          <name>SIMPLE_PATH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Path_8h_1a5bf95b59427bb068a9998b02b2e2723aa5f1fb58caa55309a33550351daed4b51" prot="public">
          <name>COMPLEX_PATH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum to define 2 types of path: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Complex - can be used to make compositions of multiple sections)</para>
</listitem><listitem><para>Simple - only contains one section </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Path.h" line="17" column="14" bodyfile="include/algorithms/Path.h" bodystart="17" bodyend="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PathSection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Speed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{SIMPLE_PATH,<sp/>COMPLEX_PATH}<sp/>TypePath_t;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classPath" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPath" kindref="compound">Path</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classPath_1af26cfab021ddf49af73da3b2beca85ac" kindref="member">Path</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPath_1a141da9ff89c85e0ba410b5a73864c267" kindref="member">~Path</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPath_1ab1a8e985c909ab25bc5a570482fdc496" kindref="member">isEmpty</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPath_1a4e669479c9ea6049ef5d4656ddc90444" kindref="member">addPathSection</ref>(<ref refid="classPathSection" kindref="compound">PathSection</ref><sp/>*<sp/>path_section);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPath_1aa1d5d6fa713b10ad5eb953da97183a6f" kindref="member">addSpeedSection</ref>(<ref refid="classSpeed" kindref="compound">Speed</ref><sp/>*<sp/>speed_section);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;PathSection*,<sp/>double&gt;<sp/><ref refid="classPath_1a2b93975e199423d840cac7de366588bb" kindref="member">getPathSection</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Eigen::Vector3d&gt;<sp/><ref refid="classPath_1aee6359127227c488a886276f67e0820c" kindref="member">eq_pd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Eigen::Vector3d&gt;<sp/><ref refid="classPath_1ada92795b8c4bb976e4fd4a6de8f31771" kindref="member">eq_d_pd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Eigen::Vector3d&gt;<sp/><ref refid="classPath_1abb8121d90ae9a4df05fb8b6818631af6" kindref="member">eq_dd_pd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="classPath_1a9c7755eaf564386d52391bc42aac43e4" kindref="member">tangent</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="classPath_1a5c31f062b70f4304385d72b7865895a2" kindref="member">curvature</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="classPath_1a72b33276dc06a28e590fe29c774cce14" kindref="member">derivative_norm</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="classPath_1a420f53aa7ecb807b2e004556ff35a26f" kindref="member">eq_vd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="classPath_1a7494a3bf59001a8db017d65e8d012470" kindref="member">eq_d_vd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="classPath_1a44594e858ab8b922a9e7055b5d008ea1" kindref="member">getMinMaxGamma</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="classPath_1a3efe44f1d0c2b1b70538bc7b5d1797b4" kindref="member">getClosestGamma</ref>(Eigen::Vector3d<sp/>&amp;coordinate);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classPath_1af78fdfd568415c2dd81b31611f513675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PathSection*&gt;<sp/><ref refid="classPath_1af78fdfd568415c2dd81b31611f513675" kindref="member">sections_</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>TypePath_t<sp/>type_of_path_{COMPLEX_PATH};<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;double,<sp/>double&gt;&gt;<sp/>sections_limits_;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Speed*&gt;<sp/>speeds_;<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getIndexOfSection(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_closest_point_{0.0};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_check_on_closest_point_{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_section_smallest_error_{0};</highlight></codeline>
<codeline lineno="249"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="include/algorithms/Path.h"/>
  </compounddef>
</doxygen>
