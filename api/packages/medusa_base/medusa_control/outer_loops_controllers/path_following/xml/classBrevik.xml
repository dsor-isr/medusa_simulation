<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classBrevik" kind="class" language="C++" prot="public">
    <compoundname>Brevik</compoundname>
    <basecompoundref refid="classPathFollowing" prot="public" virt="non-virtual">PathFollowing</basecompoundref>
    <includes refid="Brevik_8h" local="no">Brevik.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBrevik_1aff0c3ed2db9059e10398bf89064a1853" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::desired_surge_</definition>
        <argsstring></argsstring>
        <name>desired_surge_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>The desired references to publish. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="93" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a1e41954cbc02c79772a3284e7882f705" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::desired_yaw_</definition>
        <argsstring></argsstring>
        <name>desired_yaw_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="94" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a6ef2a04b61cc4f068bdbbd7b69eae113" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::yaw_out_</definition>
        <argsstring></argsstring>
        <name>yaw_out_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Auxiliar variables used to have continuous angles, since this algorithm requires that the angles are differentiable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="100" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a5d61d6ff225fb7a8316160e4fd43b118" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::yaw_out_old_</definition>
        <argsstring></argsstring>
        <name>yaw_out_old_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="101" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a92f7aa1290ee095cacfcbd232b588cad" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::yaw_old_</definition>
        <argsstring></argsstring>
        <name>yaw_old_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="102" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a4901f8854df1158101a9379e4e56bcca" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::psi_out_</definition>
        <argsstring></argsstring>
        <name>psi_out_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="104" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a1058a2d5ed0f7251087faf7af2117ce0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::psi_out_old_</definition>
        <argsstring></argsstring>
        <name>psi_out_old_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="105" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a266c654cb3cd94fda1d67fff13c6a6d3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::psi_old_</definition>
        <argsstring></argsstring>
        <name>psi_old_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="106" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a7324ae7ef9e4888232a807a5bc3fb52e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::gamma_dot_</definition>
        <argsstring></argsstring>
        <name>gamma_dot_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>The values for the dynamics of the gamma (virtual rabbit) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="114" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1ab445f2388b68bfd5761a3987a6c3ee7b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Brevik::gamma_</definition>
        <argsstring></argsstring>
        <name>gamma_</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="115" column="12" bodyfile="include/algorithms/Brevik.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1ac7064617a7b2c528977d70db23b0b83c" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher Brevik::surge_pub_</definition>
        <argsstring></argsstring>
        <name>surge_pub_</name>
        <briefdescription>
<para>ROS publishers to publish the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="120" column="20" bodyfile="include/algorithms/Brevik.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a088e644b5595f70a6a3768c64305dfee" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher Brevik::yaw_pub_</definition>
        <argsstring></argsstring>
        <name>yaw_pub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="121" column="20" bodyfile="include/algorithms/Brevik.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBrevik_1a4ef3752b9c88e189dc718ec0d26ae1ff" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher Brevik::rabbit_pub_</definition>
        <argsstring></argsstring>
        <name>rabbit_pub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="122" column="20" bodyfile="include/algorithms/Brevik.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBrevik_1ac841624393966798324ad0194cf994d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Brevik::Brevik</definition>
        <argsstring>(ros::Publisher surge_pub, ros::Publisher yaw_pub, ros::Publisher rabbit_pub)</argsstring>
        <name>Brevik</name>
        <param>
          <type>ros::Publisher</type>
          <declname>surge_pub</declname>
        </param>
        <param>
          <type>ros::Publisher</type>
          <declname>yaw_pub</declname>
        </param>
        <param>
          <type>ros::Publisher</type>
          <declname>rabbit_pub</declname>
        </param>
        <briefdescription>
<para>Constructor method for the Path Following class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surge_pub</parametername>
</parameternamelist>
<parameterdescription>
<para>The ROS surge publisher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yaw_pub</parametername>
</parameternamelist>
<parameterdescription>
<para>The ROS yaw publisher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rabbit_pub</parametername>
</parameternamelist>
<parameterdescription>
<para>The ROS rabbit publisher </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="34" column="5" bodyfile="src/algorithms/Brevik.cpp" bodystart="4" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1a13a11e919bbc74abaae3d054dbde6830" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Brevik::setPFGains</definition>
        <argsstring>(std::vector&lt; double &gt; gains) override</argsstring>
        <name>setPFGains</name>
        <reimplements refid="classPathFollowing_1a7b7d88fa30828c55bd0818da689b01e8">setPFGains</reimplements>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>gains</declname>
        </param>
        <briefdescription>
<para>Method to update the gains, given a vector of doubles. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gains</parametername>
</parameternamelist>
<parameterdescription>
<para>The gains for the controller</para>
</parameterdescription>
</parameteritem>
</parameterlist>
NOTE: In this class the setPFGains method does nothing to the controller as all the gains are fixed</para>
<para><simplesect kind="return"><para>By default just returns false for this algorithm </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="46" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1ade9cf2ff8e0fd66de96e9092b7efff43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Brevik::callPFController</definition>
        <argsstring>(double dt) override</argsstring>
        <name>callPFController</name>
        <reimplements refid="classPathFollowing_1a86a30b18ed168ea903dfd0264fe4b5d1">callPFController</reimplements>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Method that implements the path following control law. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time difference between last call and current call (in seconds) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="53" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="19" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1a71f6d807a88c73bd1158f7beea8b79ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Brevik::publish_private</definition>
        <argsstring>() override</argsstring>
        <name>publish_private</name>
        <reimplements refid="classPathFollowing_1aeecd5c2d6985b204f27321784d99c292">publish_private</reimplements>
        <briefdescription>
<para>Method to publish the data from the path following. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="58" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1a351c87315b5ed60c9ce57ccdf16633e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Brevik::start</definition>
        <argsstring>() override</argsstring>
        <name>start</name>
        <reimplements refid="classPathFollowing_1a29c973b4bb0bb105cc20272aa0067a3f">start</reimplements>
        <briefdescription>
<para>Method used in the first run to do initial setup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="63" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1aa707b7da34dab13fc0bdb4241091289b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Brevik::stop</definition>
        <argsstring>() override</argsstring>
        <name>stop</name>
        <reimplements refid="classPathFollowing_1a8ec7c82e205a82a1e2f3b0d895d702ba">stop</reimplements>
        <briefdescription>
<para>Method used to check whether we reached the end of the algorithm or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The success of the operation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Check if the gamma is greater then the gamma max of the path If so, we have reached the end</para>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="70" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="123" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1a42009e150fee33a5bbbf22c761c8d70f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Brevik::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <reimplements refid="classPathFollowing_1a05b2c36ff066b2eec99cbdd0c10a0dfe">reset</reimplements>
        <briefdescription>
<para>Method used to reset the algorithm control parameters when running the algorithm more than once. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the reset was made successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="78" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="135" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1aea01199e76dcacc2be914896b0600100" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Brevik::resetVirtualTarget</definition>
        <argsstring>(float value) override</argsstring>
        <name>resetVirtualTarget</name>
        <reimplements refid="classPathFollowing_1afe73524a5ae2fb0c51497de2a245c429">resetVirtualTarget</reimplements>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Method to reset the virtual target of the vehicle (gamma) to a pre-specified value. Not all controllers need this (example: <ref refid="classSamson" kindref="compound">Samson</ref>, <ref refid="classFossen" kindref="compound">Fossen</ref> which use the closest point) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the reset was made successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="86" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="158" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBrevik_1a0e9d058eda7fe9b221b121537d0d48e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brevik::smoothVehicleYaw</definition>
        <argsstring>()</argsstring>
        <name>smoothVehicleYaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="108" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="85" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classBrevik_1a900ff60cdda9546585cf6f34727d2328" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brevik::smoothPathYaw</definition>
        <argsstring>()</argsstring>
        <name>smoothPathYaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/Brevik.h" line="109" column="10" bodyfile="src/algorithms/Brevik.cpp" bodystart="95" bodyend="102"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Path following using <ref refid="classBrevik" kindref="compound">Brevik</ref>&apos;s algorithm for path following Method4: based on the work of <ref refid="classBrevik" kindref="compound">Brevik</ref> and <ref refid="classFossen" kindref="compound">Fossen</ref> (2005) This algorithm support: Controls: </para>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>yaw</para>
</listitem><listitem><para>surge</para>
</listitem><listitem><para>virtual-target (gamma) Supports Cooperative Path Following - True Contains Currents Observers - False</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="author"><para><ref refid="classMarcelo" kindref="compound">Marcelo</ref> Jacinto </para>
</simplesect>
<simplesect kind="author"><para>Joao Quintas </para>
</simplesect>
<simplesect kind="author"><para>Joao Cruz </para>
</simplesect>
<simplesect kind="author"><para>Hung Tuan </para>
</simplesect>
<simplesect kind="version"><para>1.0a </para>
</simplesect>
<simplesect kind="date"><para>2021 </para>
</simplesect>
<simplesect kind="copyright"><para>MIT </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>PathFollowing</label>
        <link refid="classPathFollowing"/>
      </node>
      <node id="1">
        <label>Brevik</label>
        <link refid="classBrevik"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>PFollowingDebug</label>
        <link refid="structPFollowingDebug"/>
      </node>
      <node id="4">
        <label>VehicleState</label>
        <link refid="structVehicleState"/>
      </node>
      <node id="3">
        <label>PathState</label>
        <link refid="structPathState"/>
      </node>
      <node id="2">
        <label>PathFollowing</label>
        <link refid="classPathFollowing"/>
        <childnode refid="3" relation="usage">
          <edgelabel>path_state_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>vehicle_state_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pfollowing_debug_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Brevik</label>
        <link refid="classBrevik"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/algorithms/Brevik.h" line="23" column="34" bodyfile="include/algorithms/Brevik.h" bodystart="23" bodyend="123"/>
    <listofallmembers>
      <member refid="classPathFollowing_1ad51234c36158b9124cfe4110df0e80d9" prot="protected" virt="non-virtual"><scope>Brevik</scope><name>algConvert</name></member>
      <member refid="classBrevik_1ac841624393966798324ad0194cf994d7" prot="public" virt="non-virtual"><scope>Brevik</scope><name>Brevik</name></member>
      <member refid="classBrevik_1ade9cf2ff8e0fd66de96e9092b7efff43" prot="public" virt="virtual"><scope>Brevik</scope><name>callPFController</name></member>
      <member refid="classBrevik_1aff0c3ed2db9059e10398bf89064a1853" prot="private" virt="non-virtual"><scope>Brevik</scope><name>desired_surge_</name></member>
      <member refid="classBrevik_1a1e41954cbc02c79772a3284e7882f705" prot="private" virt="non-virtual"><scope>Brevik</scope><name>desired_yaw_</name></member>
      <member refid="classBrevik_1ab445f2388b68bfd5761a3987a6c3ee7b" prot="private" virt="non-virtual"><scope>Brevik</scope><name>gamma_</name></member>
      <member refid="classBrevik_1a7324ae7ef9e4888232a807a5bc3fb52e" prot="private" virt="non-virtual"><scope>Brevik</scope><name>gamma_dot_</name></member>
      <member refid="classPathFollowing_1a3c97955c38b4dc1394438776bfe08ef0" prot="protected" virt="non-virtual"><scope>Brevik</scope><name>path_state_</name></member>
      <member refid="classPathFollowing_1a9a8fc2330c7b512a3dac2fd6d6158aee" prot="protected" virt="non-virtual"><scope>Brevik</scope><name>pfollowing_debug_</name></member>
      <member refid="classPathFollowing_1ad93c0aaf0ae878d8eac2b018cd0f87d9" prot="protected" virt="non-virtual"><scope>Brevik</scope><name>pfollowing_debug_pub_</name></member>
      <member refid="classBrevik_1a266c654cb3cd94fda1d67fff13c6a6d3" prot="private" virt="non-virtual"><scope>Brevik</scope><name>psi_old_</name></member>
      <member refid="classBrevik_1a4901f8854df1158101a9379e4e56bcca" prot="private" virt="non-virtual"><scope>Brevik</scope><name>psi_out_</name></member>
      <member refid="classBrevik_1a1058a2d5ed0f7251087faf7af2117ce0" prot="private" virt="non-virtual"><scope>Brevik</scope><name>psi_out_old_</name></member>
      <member refid="classPathFollowing_1a5a23d424af178c88cd97fb3e68f45841" prot="public" virt="non-virtual"><scope>Brevik</scope><name>publish</name></member>
      <member refid="classBrevik_1a71f6d807a88c73bd1158f7beea8b79ca" prot="public" virt="virtual"><scope>Brevik</scope><name>publish_private</name></member>
      <member refid="classBrevik_1a4ef3752b9c88e189dc718ec0d26ae1ff" prot="private" virt="non-virtual"><scope>Brevik</scope><name>rabbit_pub_</name></member>
      <member refid="classBrevik_1a42009e150fee33a5bbbf22c761c8d70f" prot="public" virt="virtual"><scope>Brevik</scope><name>reset</name></member>
      <member refid="classBrevik_1aea01199e76dcacc2be914896b0600100" prot="public" virt="virtual"><scope>Brevik</scope><name>resetVirtualTarget</name></member>
      <member refid="classPathFollowing_1a4993180700d33d7002a0f3b55ec61a01" prot="public" virt="non-virtual" ambiguityscope="PathFollowing::"><scope>Brevik</scope><name>resetVirtualTarget</name></member>
      <member refid="classBrevik_1a13a11e919bbc74abaae3d054dbde6830" prot="public" virt="virtual"><scope>Brevik</scope><name>setPFGains</name></member>
      <member refid="classPathFollowing_1a6ee4ab94a9a42b81eacd550bc89954a8" prot="public" virt="non-virtual"><scope>Brevik</scope><name>setPFollowingDebugPublisher</name></member>
      <member refid="classBrevik_1a900ff60cdda9546585cf6f34727d2328" prot="private" virt="non-virtual"><scope>Brevik</scope><name>smoothPathYaw</name></member>
      <member refid="classBrevik_1a0e9d058eda7fe9b221b121537d0d48e0" prot="private" virt="non-virtual"><scope>Brevik</scope><name>smoothVehicleYaw</name></member>
      <member refid="classBrevik_1a351c87315b5ed60c9ce57ccdf16633e7" prot="public" virt="virtual"><scope>Brevik</scope><name>start</name></member>
      <member refid="classBrevik_1aa707b7da34dab13fc0bdb4241091289b" prot="public" virt="virtual"><scope>Brevik</scope><name>stop</name></member>
      <member refid="classBrevik_1ac7064617a7b2c528977d70db23b0b83c" prot="private" virt="non-virtual"><scope>Brevik</scope><name>surge_pub_</name></member>
      <member refid="classPathFollowing_1aaa12dbafa972045c2c2c1fc9d871d2f7" prot="public" virt="non-virtual"><scope>Brevik</scope><name>UpdatePathState</name></member>
      <member refid="classPathFollowing_1a00f71ae3ea5e4997037849caab6b49c9" prot="public" virt="non-virtual"><scope>Brevik</scope><name>UpdateVehicleState</name></member>
      <member refid="classPathFollowing_1ae375fe2c8098e68e7f3a90de60d6978e" prot="protected" virt="non-virtual"><scope>Brevik</scope><name>vehicle_state_</name></member>
      <member refid="classBrevik_1a92f7aa1290ee095cacfcbd232b588cad" prot="private" virt="non-virtual"><scope>Brevik</scope><name>yaw_old_</name></member>
      <member refid="classBrevik_1a6ef2a04b61cc4f068bdbbd7b69eae113" prot="private" virt="non-virtual"><scope>Brevik</scope><name>yaw_out_</name></member>
      <member refid="classBrevik_1a5d61d6ff225fb7a8316160e4fd43b118" prot="private" virt="non-virtual"><scope>Brevik</scope><name>yaw_out_old_</name></member>
      <member refid="classBrevik_1a088e644b5595f70a6a3768c64305dfee" prot="private" virt="non-virtual"><scope>Brevik</scope><name>yaw_pub_</name></member>
      <member refid="classPathFollowing_1a07c1e827227b1b14dff2df69aa9438b2" prot="public" virt="virtual"><scope>Brevik</scope><name>~PathFollowing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
