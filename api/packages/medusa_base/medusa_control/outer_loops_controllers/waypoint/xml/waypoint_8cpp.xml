<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="waypoint_8cpp" kind="file" language="C++">
    <compoundname>waypoint.cpp</compoundname>
    <includes refid="waypoint_8h" local="yes">waypoint.h</includes>
    <incdepgraph>
      <node id="10">
        <label>geometry_msgs/PointStamped.h</label>
      </node>
      <node id="11">
        <label>medusa_gimmicks_library/MedusaGimmicks.h</label>
      </node>
      <node id="14">
        <label>wp_heading.h</label>
        <link refid="wp__heading_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/waypoint_ros/waypoint.cpp</label>
        <link refid="waypoint_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>auv_msgs/NavigationStatus.h</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="8">
        <label>waypoint/sendWpType1.h</label>
      </node>
      <node id="12">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="15">
        <label>wp_controller.h</label>
        <link refid="wp__controller_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ros/ros.h</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="18">
        <label>wp_standard.h</label>
        <link refid="wp__standard_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>wp_loose.h</label>
        <link refid="wp__loose_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>waypoint.h</label>
        <link refid="waypoint_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>std_msgs/Int8.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Developers:<sp/>DSOR<sp/>Team<sp/>-&gt;<sp/>@irt.ist.pt<sp/>Instituto<sp/>Superior<sp/>Tecnico</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Description:<sp/>Please<sp/>check<sp/>the<sp/>documentation<sp/>of<sp/>this<sp/>package<sp/>for<sp/>more<sp/>info.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;waypoint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">WaypointNode::WaypointNode(ros::NodeHandle<sp/>*nodehandle,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>*nodehandle_private)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>nh_(*nodehandle),<sp/>nh_p_(*nodehandle_private)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;in<sp/>class<sp/>constructor<sp/>of<sp/>WaypointNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>loadParams();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>initializeSubscribers();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>initializeServices();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>initializePublishers();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>initializeTimer();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">WaypointNode::~WaypointNode()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutdown<sp/>subsctribers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>flag_sub_.shutdown();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>state_sub_.shutdown();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutdown<sp/>publishers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>u_ref_pub_.shutdown();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>yaw_ref_pub_.shutdown();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>flag_pub_.shutdown();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shutdown<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>nh_.shutdown();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>nh_p_.shutdown();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::loadParams()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Load<sp/>the<sp/>WaypointNode<sp/>parameters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>cdist_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;cdist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>delta_t_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;delta_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>waypoint<sp/>type<sp/>1<sp/>gains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>ku_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;type1/gains/ku&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>ks_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;type1/gains/ks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>speed_turn_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;type1/gains/speed_turn&quot;</highlight><highlight class="normal">,<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>loose<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>waypoint<sp/>type<sp/>2<sp/>(with<sp/>heading)<sp/>gains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>k1_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;type2/gains/k1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>k2_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;type2/gains/k2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>k3_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;type2/gains/k3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>yaw_ref_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/yaw_ref&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;YawRef&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>u_ref_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/u_ref&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;URef&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>v_ref_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/v_ref&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/ref/sway&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>yaw_rate_ref_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/yaw_rate_ref&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/ref/yaw_rate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>flag_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/flag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Flag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>state_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/state&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;State&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>wp_standard_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/wp_standard&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/controls/send_wp_standard&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>wp_loose_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/wp_loose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/controls/send_wp_loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>wp_heading_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/wp_heading&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/controls/send_wp_heading&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::initializeSubscribers()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Subscribers<sp/>for<sp/>WaypointNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>flag_sub_<sp/>=</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_.subscribe(flag_topic_,<sp/>10,<sp/>&amp;WaypointNode::flagCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>state_sub_<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_.subscribe(state_topic_,<sp/>10,<sp/>&amp;WaypointNode::updateCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::initializePublishers()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Publishers<sp/>for<sp/>WaypointNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>yaw_ref_pub_<sp/>=<sp/>nh_.advertise&lt;std_msgs::Float64&gt;(yaw_ref_topic_,<sp/>10);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>yaw_rate_ref_pub_<sp/>=<sp/>nh_.advertise&lt;std_msgs::Float64&gt;(yaw_rate_ref_topic_,<sp/>10);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>u_ref_pub_<sp/>=<sp/>nh_.advertise&lt;std_msgs::Float64&gt;(u_ref_topic_,<sp/>10);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>v_ref_pub_<sp/>=<sp/>nh_.advertise&lt;std_msgs::Float64&gt;(v_ref_topic_,<sp/>10);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>flag_pub_<sp/>=<sp/>nh_.advertise&lt;std_msgs::Int8&gt;(flag_topic_,<sp/>10);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::initializeServices()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Services<sp/>for<sp/>WaypointNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>wp_standard_srv_<sp/>=<sp/>nh_.advertiseService(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp_standard_topic_,<sp/>&amp;WaypointNode::sendWpStandardService,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>wp_loose_srv_<sp/>=<sp/>nh_.advertiseService(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp_loose_topic_,<sp/>&amp;WaypointNode::sendWpLooseService,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>wp_heading_srv_<sp/>=<sp/>nh_.advertiseService(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp_heading_topic_,<sp/>&amp;WaypointNode::sendWpHeadingService,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::initializeTimer()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>timer_<sp/>=<sp/>nh_.createTimer(ros::Duration(1.0<sp/>/<sp/>WaypointNode::nodeFrequency()),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;WaypointNode::timerCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WaypointNode::nodeFrequency()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>node_frequency_<sp/>=</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MedusaGimmicks::getParameters&lt;double&gt;(nh_p_,<sp/></highlight><highlight class="stringliteral">&quot;node_frequency&quot;</highlight><highlight class="normal">,<sp/>10.0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Node<sp/>will<sp/>run<sp/>at<sp/>:<sp/>%lf<sp/>[hz]&quot;</highlight><highlight class="normal">,<sp/>node_frequency_);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node_frequency_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::timerCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::TimerEvent<sp/>&amp;event)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>waypoint<sp/>controller<sp/>and<sp/>publish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>wp_controller_-&gt;<ref refid="classWaypointController_1a9c186c62531a8cdf524de44097fcb9fe" kindref="member">compute</ref>(veh_state_,<sp/>wp_ref_);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::updateCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>auv_msgs::NavigationStatus<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>vehicle<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>veh_state_.eta1[0]<sp/>=<sp/>msg.position.north;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>veh_state_.eta1[1]<sp/>=<sp/>msg.position.east;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>veh_state_.eta2[2]<sp/>=<sp/>msg.orientation.z;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>veh_state_.v1[0]<sp/>=<sp/>msg.body_velocity.x;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>veh_state_.v1[1]<sp/>=<sp/>msg.body_velocity.y;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>message<sp/>if<sp/>error<sp/>and<sp/>stop<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(msg.status<sp/>&amp;<sp/>msg.STATUS_ALL_OK)<sp/>&amp;&amp;<sp/>timer_.hasPending())<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;The<sp/>filter<sp/>estimate<sp/>is<sp/>not<sp/>good,<sp/>disabling<sp/>WayPoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::flagCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::Int8<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>the<sp/>waypoint<sp/>controller<sp/>if<sp/>the<sp/>flag<sp/>has<sp/>been<sp/>changed<sp/>to<sp/>other<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer_.hasStarted()<sp/>&amp;&amp;<sp/>msg.data<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Some<sp/>Process<sp/>changed<sp/>the<sp/>flag<sp/>to<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>msg.data);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaypointNode::createWaypoint(<ref refid="classWaypointController" kindref="compound">WaypointController</ref><sp/>*new_wp)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>memory<sp/>from<sp/>waypoint<sp/>controller<sp/>pointer<sp/>and<sp/>point<sp/>it<sp/>to<sp/>new<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(wp_controller_)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>free(wp_controller_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>wp_controller_<sp/>=<sp/>new_wp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WaypointNode::decodeWaypoint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>Eigen::Vector2d<sp/>ref_return;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>wp_ref_.eta1[0]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>wp_ref_.eta1[1]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>-1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hold<sp/>in<sp/>the<sp/>same<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_ref_.eta1[0]<sp/>=<sp/>veh_state_.eta1[0];<sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>GPS<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_ref_.eta1[1]<sp/>=<sp/>veh_state_.eta1[1];<sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>GPS<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>-3<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>-3)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_ref_.eta1[0]<sp/>=<sp/>veh_state_.eta1[0]<sp/>+</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>veh_state_.v1[0]<sp/>*</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cos(veh_state_.eta2[2]<sp/>*<sp/>(MedusaGimmicks::PI<sp/>/<sp/>180))<sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_t_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_ref_.eta1[1]<sp/>=<sp/>veh_state_.eta1[1]<sp/>+</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>veh_state_.v1[0]<sp/>*</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin(veh_state_.eta2[2]<sp/>*<sp/>(MedusaGimmicks::PI<sp/>/<sp/>180))<sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_t_;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>stop<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>-2<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WaypointNode::sendWpStandardService(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint::sendWpType1::Request<sp/>&amp;req,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint::sendWpType1::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Sending<sp/>Waypoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>pointer<sp/>to<sp/>new<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="classWaypointController" kindref="compound">WaypointController</ref><sp/>*aux_wp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classWpStandard" kindref="compound">WpStandard</ref>(u_ref_pub_,<sp/>yaw_ref_pub_);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>gains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>aux_wp-&gt;<ref refid="classWaypointController_1a0eb110f9001223cf7388f0f42a56a826" kindref="member">setGains</ref>(std::vector&lt;double&gt;{cdist_,<sp/>ku_,<sp/>ks_});</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>substitute<sp/>node<sp/>pointer<sp/>of<sp/>the<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>createWaypoint(aux_wp);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>new<sp/>waypoint<sp/>reference,<sp/>change<sp/>the<sp/>flag<sp/>value<sp/>and<sp/>start<sp/>the<sp/>main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decodeWaypoint(req.x,<sp/>req.y))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Stop<sp/>signal<sp/>sent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>MedusaGimmicks::publishValue&lt;std_msgs::Int8,<sp/>const<sp/>int&gt;(flag_pub_,<sp/>0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>waypoint<sp/>reference:<sp/>(&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(wp_ref_.eta1[0])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(wp_ref_.eta1[1])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>MedusaGimmicks::publishValue&lt;std_msgs::Int8,<sp/>const<sp/>int&gt;(flag_pub_,<sp/>4);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timer_.hasStarted())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_.start();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WaypointNode::sendWpLooseService(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint::sendWpType1::Request<sp/>&amp;req,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint::sendWpType1::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Sending<sp/>Waypoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>pointer<sp/>to<sp/>new<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classWaypointController" kindref="compound">WaypointController</ref><sp/>*aux_wp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classWpLoose" kindref="compound">WpLoose</ref>(u_ref_pub_,<sp/>yaw_ref_pub_);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>gains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>aux_wp-&gt;<ref refid="classWaypointController_1a0eb110f9001223cf7388f0f42a56a826" kindref="member">setGains</ref>(std::vector&lt;double&gt;{cdist_,<sp/>ku_,<sp/>ks_,<sp/>speed_turn_});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>aux_wp-&gt;<ref refid="classWaypointController_1a1ae265657274a4c2e1bd49b3ba5a5d9c" kindref="member">setFrequency</ref>(node_frequency_);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>substitute<sp/>node<sp/>pointer<sp/>of<sp/>the<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>createWaypoint(aux_wp);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>new<sp/>waypoint<sp/>reference,<sp/>change<sp/>the<sp/>flag<sp/>value<sp/>and<sp/>start<sp/>the<sp/>main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decodeWaypoint(req.x,<sp/>req.y))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Stop<sp/>signal<sp/>sent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>MedusaGimmicks::publishValue&lt;std_msgs::Int8,<sp/>const<sp/>int&gt;(flag_pub_,<sp/>0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>waypoint<sp/>reference:<sp/>(&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(wp_ref_.eta1[0])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(wp_ref_.eta1[1])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>MedusaGimmicks::publishValue&lt;std_msgs::Int8,<sp/>const<sp/>int&gt;(flag_pub_,<sp/>4);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timer_.hasStarted())<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_.start();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WaypointNode::sendWpHeadingService(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint::sendWpType1::Request<sp/>&amp;req,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoint::sendWpType1::Response<sp/>&amp;res)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Sending<sp/>Waypoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>pointer<sp/>to<sp/>new<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="classWaypointController" kindref="compound">WaypointController</ref><sp/>*aux_wp<sp/>=</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classWpHeading" kindref="compound">WpHeading</ref>(u_ref_pub_,<sp/>v_ref_pub_,<sp/>yaw_rate_ref_pub_);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>gains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>aux_wp-&gt;<ref refid="classWaypointController_1a0eb110f9001223cf7388f0f42a56a826" kindref="member">setGains</ref>(std::vector&lt;double&gt;{cdist_,<sp/>k1_,<sp/>k2_,<sp/>k3_});</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>aux_wp-&gt;<ref refid="classWaypointController_1a1ae265657274a4c2e1bd49b3ba5a5d9c" kindref="member">setFrequency</ref>(node_frequency_);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>substitute<sp/>node<sp/>pointer<sp/>of<sp/>the<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>createWaypoint(aux_wp);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>new<sp/>waypoint<sp/>reference,<sp/>change<sp/>the<sp/>flag<sp/>value<sp/>and<sp/>start<sp/>the<sp/>main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decodeWaypoint(req.x,<sp/>req.y))<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Stop<sp/>signal<sp/>sent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>MedusaGimmicks::publishValue&lt;std_msgs::Int8,<sp/>const<sp/>int&gt;(flag_pub_,<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>yaw<sp/>reference<sp/>here<sp/>since<sp/>the<sp/>wp<sp/>logic<sp/>(decodeWaypoint)<sp/>doesnt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>include<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>wp_ref_.eta2[2]<sp/>=<sp/>req.yaw;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>res.success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>res.message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>waypoint<sp/>reference:<sp/>(&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(wp_ref_.eta1[0])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(wp_ref_.eta1[1])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(wp_ref_.eta2[2])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>MedusaGimmicks::publishValue&lt;std_msgs::Int8,<sp/>const<sp/>int&gt;(flag_pub_,<sp/>4);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!timer_.hasStarted())<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_.start();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/waypoint_ros/waypoint.cpp"/>
  </compounddef>
</doxygen>
