<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCPFControl" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>CPFControl</compoundname>
    <derivedcompoundref refid="classEventTriggered" prot="public" virt="non-virtual">EventTriggered</derivedcompoundref>
    <includes refid="CPFControl_8h" local="no">CPFControl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCPFControl_1a569fdbc5aef0d04cc69bd50fa9d60618" prot="private" static="no" mutable="no">
        <type>Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>Eigen::Matrix&lt;int, Eigen::Dynamic, Eigen::Dynamic&gt; CPFControl::adjency_matrix_</definition>
        <argsstring></argsstring>
        <name>adjency_matrix_</name>
        <briefdescription>
<para>Stores the adjency matrix with the topology of the network. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="119" column="19" bodyfile="include/algorithms/CPFControl.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCPFControl_1a0e46beb8984f659451a2974cfa6dbdda" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXi</type>
        <definition>Eigen::VectorXi CPFControl::neighbors_</definition>
        <argsstring></argsstring>
        <name>neighbors_</name>
        <briefdescription>
<para>Stores the neighbours of the current vehicle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="124" column="21" bodyfile="include/algorithms/CPFControl.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCPFControl_1ac379ca878fd5583c13fa549dcaa3c431" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CPFControl::num_vehicles_</definition>
        <argsstring></argsstring>
        <name>num_vehicles_</name>
        <briefdescription>
<para>Stores the size of the network. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="129" column="18" bodyfile="include/algorithms/CPFControl.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCPFControl_1ae1427903020b781bba75f1a5751521ba" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CPFControl::vehicle_id_</definition>
        <argsstring></argsstring>
        <name>vehicle_id_</name>
        <briefdescription>
<para>Stores the current vehicle ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="134" column="18" bodyfile="include/algorithms/CPFControl.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCPFControl_1a3b3fe82e9904b76e4ce5a958b4e994e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double CPFControl::coordinationController</definition>
        <argsstring>(double time)=0</argsstring>
        <name>coordinationController</name>
        <reimplementedby refid="classEventTriggered_1a46f8c45a317e4f25750f2973ed712b53">coordinationController</reimplementedby>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Method to that updated the coordination control law and returns the correction speed vc to be used by the virtual target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>An int with the current time expressed in seconds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A double with the speed correction term vc </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="32" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a7cba3d9edc57f3b3b221e1d9e41f33ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CPFControl::updateVehiclesInformation</definition>
        <argsstring>(double time, unsigned int ID, double gamma, double vd)=0</argsstring>
        <name>updateVehiclesInformation</name>
        <reimplementedby refid="classEventTriggered_1aac2bf06030dd8d47ee769f7acf4f8dd9">updateVehiclesInformation</reimplementedby>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>ID</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vd</declname>
        </param>
        <briefdescription>
<para>Method to update each individual vehicle information given an int with the ID of the vehicle and the new virtual target value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>An int with the current time expressed in seconds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ID</parametername>
</parameternamelist>
<parameterdescription>
<para>An int with the ID of the vehicle which to update information </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gamma</parametername>
</parameternamelist>
<parameterdescription>
<para>A double with the new information of the virtual target position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>A double with the desired velocity of the virtual target of that particular vehicle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean with the information whether the information was used with success or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="45" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a144e56d1ae80b050c5861029b96038fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CPFControl::publishCurrentGamma</definition>
        <argsstring>(double time)=0</argsstring>
        <name>publishCurrentGamma</name>
        <reimplementedby refid="classEventTriggered_1abfadcab13af9890ac2ffcd12c78d4b1c">publishCurrentGamma</reimplementedby>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Method to inform the user if the current gamma should be published or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The current time expressed in seconds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean that is true if the current gamma should be published </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="54" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a406bda171c3ca7a11ca9367819f21688" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool CPFControl::reset</definition>
        <argsstring>()=0</argsstring>
        <name>reset</name>
        <reimplementedby refid="classEventTriggered_1a87665678c35d20f3387293675eeb8cde">reset</reimplementedby>
        <briefdescription>
<para>Method to reset the current CPF controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean whether it was reset correctly or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="61" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a14421e28a0cbaae016c406f04ef4b8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXi</type>
        <definition>Eigen::MatrixXi CPFControl::getAdjencyMatrix</definition>
        <argsstring>()</argsstring>
        <name>getAdjencyMatrix</name>
        <briefdescription>
<para>Method to get the Adjency Matrix that represents the network topology. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An eigen adjecy matrix of ints</para>
</simplesect>
<simplesect kind="return"><para>An eigen adjecy matrix of doubles </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="68" column="21" bodyfile="src/algorithms/CPFControl.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a52c5a204c6ef07878e1db7073252d55d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXi</type>
        <definition>Eigen::VectorXi CPFControl::getNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNeighbors</name>
        <briefdescription>
<para>Method to get a vector with the neighbors of the current vehicle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An eigen vector with ints </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="75" column="21" bodyfile="src/algorithms/CPFControl.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a69fd47672868a3712154d38c26c9a847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CPFControl::updateAdjencyMatrix</definition>
        <argsstring>(Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;adjency_matrix)</argsstring>
        <name>updateAdjencyMatrix</name>
        <param>
          <type>Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>adjency_matrix</declname>
        </param>
        <briefdescription>
<para>Method to update the Adjency Matrix that represents the network topology. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A boolean informing if update was done successfully or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="82" column="10" bodyfile="src/algorithms/CPFControl.cpp" bodystart="51" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a15ff71544fb418576d1a041d294f25fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CPFControl::getNetworkSize</definition>
        <argsstring>()</argsstring>
        <name>getNetworkSize</name>
        <briefdescription>
<para>Method to get the number of vehicles used in the network. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An int with the number of vehicles in the network </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="89" column="18" bodyfile="src/algorithms/CPFControl.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a9338bd882af5eece8f5e480f3b2bfd9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int CPFControl::getCurrentVehicleID</definition>
        <argsstring>()</argsstring>
        <name>getCurrentVehicleID</name>
        <briefdescription>
<para>Method to get the current vehicle ID in the network. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An int with the current vehicle ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="96" column="18" bodyfile="src/algorithms/CPFControl.cpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classCPFControl_1a98053c7bf5fdb54d82b8789fa845889b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>CPFControl::~CPFControl</definition>
        <argsstring>()</argsstring>
        <name>~CPFControl</name>
        <briefdescription>
<para>Virtual destructor for the abstract class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="101" column="13" bodyfile="src/algorithms/CPFControl.cpp" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classCPFControl_1a5081b3021c3c1aafdf2562b97d562c15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CPFControl::CPFControl</definition>
        <argsstring>(Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;adjency_matrix, unsigned int vehicle_ID)</argsstring>
        <name>CPFControl</name>
        <param>
          <type>Eigen::Matrix&lt; int, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;</type>
          <declname>adjency_matrix</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vehicle_ID</declname>
        </param>
        <briefdescription>
<para>Constructor for the abstract class. Receive the adjency matrix as a parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adjency_matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>An Eigen adjency matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vehicle_ID</parametername>
</parameternamelist>
<parameterdescription>
<para>The current vehicle ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/CPFControl.h" line="112" column="5" bodyfile="src/algorithms/CPFControl.cpp" bodystart="5" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract class to implement the cooperative path following synchronization controller. </para>
    </briefdescription>
    <detaileddescription>
<para>In this class it is assumed that each vehicle has an ID which corresponds to each position in the adjency matrix that describes the topology of the network. The first ID is assumed to be 0. <simplesect kind="author"><para>Marcelo Jacinto </para>
</simplesect>
<simplesect kind="author"><para>Joao Quintas </para>
</simplesect>
<simplesect kind="author"><para>Joao Cruz </para>
</simplesect>
<simplesect kind="author"><para>Hung Tuan </para>
</simplesect>
<simplesect kind="version"><para>1.0a </para>
</simplesect>
<simplesect kind="date"><para>2021 </para>
</simplesect>
<simplesect kind="copyright"><para>MIT </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CPFControl</label>
        <link refid="classCPFControl"/>
      </node>
      <node id="2">
        <label>EventTriggered</label>
        <link refid="classEventTriggered"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/algorithms/CPFControl.h" line="20" column="17" bodyfile="include/algorithms/CPFControl.h" bodystart="20" bodyend="135"/>
    <listofallmembers>
      <member refid="classCPFControl_1a569fdbc5aef0d04cc69bd50fa9d60618" prot="private" virt="non-virtual"><scope>CPFControl</scope><name>adjency_matrix_</name></member>
      <member refid="classCPFControl_1a3b3fe82e9904b76e4ce5a958b4e994e7" prot="public" virt="pure-virtual"><scope>CPFControl</scope><name>coordinationController</name></member>
      <member refid="classCPFControl_1a5081b3021c3c1aafdf2562b97d562c15" prot="protected" virt="non-virtual"><scope>CPFControl</scope><name>CPFControl</name></member>
      <member refid="classCPFControl_1a14421e28a0cbaae016c406f04ef4b8a4" prot="public" virt="non-virtual"><scope>CPFControl</scope><name>getAdjencyMatrix</name></member>
      <member refid="classCPFControl_1a9338bd882af5eece8f5e480f3b2bfd9d" prot="public" virt="non-virtual"><scope>CPFControl</scope><name>getCurrentVehicleID</name></member>
      <member refid="classCPFControl_1a52c5a204c6ef07878e1db7073252d55d" prot="public" virt="non-virtual"><scope>CPFControl</scope><name>getNeighbors</name></member>
      <member refid="classCPFControl_1a15ff71544fb418576d1a041d294f25fd" prot="public" virt="non-virtual"><scope>CPFControl</scope><name>getNetworkSize</name></member>
      <member refid="classCPFControl_1a0e46beb8984f659451a2974cfa6dbdda" prot="private" virt="non-virtual"><scope>CPFControl</scope><name>neighbors_</name></member>
      <member refid="classCPFControl_1ac379ca878fd5583c13fa549dcaa3c431" prot="private" virt="non-virtual"><scope>CPFControl</scope><name>num_vehicles_</name></member>
      <member refid="classCPFControl_1a144e56d1ae80b050c5861029b96038fe" prot="public" virt="pure-virtual"><scope>CPFControl</scope><name>publishCurrentGamma</name></member>
      <member refid="classCPFControl_1a406bda171c3ca7a11ca9367819f21688" prot="public" virt="pure-virtual"><scope>CPFControl</scope><name>reset</name></member>
      <member refid="classCPFControl_1a69fd47672868a3712154d38c26c9a847" prot="public" virt="non-virtual"><scope>CPFControl</scope><name>updateAdjencyMatrix</name></member>
      <member refid="classCPFControl_1a7cba3d9edc57f3b3b221e1d9e41f33ff" prot="public" virt="pure-virtual"><scope>CPFControl</scope><name>updateVehiclesInformation</name></member>
      <member refid="classCPFControl_1ae1427903020b781bba75f1a5751521ba" prot="private" virt="non-virtual"><scope>CPFControl</scope><name>vehicle_id_</name></member>
      <member refid="classCPFControl_1a98053c7bf5fdb54d82b8789fa845889b" prot="public" virt="virtual"><scope>CPFControl</scope><name>~CPFControl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
