<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ros__controller_8cpp" kind="file" language="C++">
    <compoundname>ros_controller.cpp</compoundname>
    <includes refid="ros__controller_8h" local="yes">ros_controller.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/controllers/ros_controller.cpp</label>
        <link refid="ros__controller_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>medusa_gimmicks_library/MedusaGimmicks.h</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>pid_controller.h</label>
        <link refid="pid__controller_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="9">
        <label>medusa_msgs/mPidDebug.h</label>
      </node>
      <node id="11">
        <label>ros/ros.h</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>ros_controller.h</label>
        <link refid="ros__controller_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>dsor_utils/filters/lowpass_filter.hpp</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ros_controller.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="classRosController_1ae27eab505df99d6333095b8936257381" kindref="member">RosController::RosController</ref>(ros::NodeHandle<sp/>&amp;nh,<sp/>std::string<sp/>controller_name,</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>refCallback_topic,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*state,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*force_or_torque,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>state_ptr_(state),<sp/>controller_name_(controller_name),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>force_or_torque_ptr_(force_or_torque),<sp/><sp/>frequency_(frequency)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>init(nh,<sp/>controller_name,<sp/>refCallback_topic);</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRosController_1af7be9fc16c6889d00652fb7d839cb51c" kindref="member">RosController::init</ref>(ros::NodeHandle<sp/>&amp;nh,<sp/>std::string<sp/>controller_name,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>refCallback_topic)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>state<sp/>not<sp/>angle<sp/>units</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="classRosController_1a0901e130893758f6153ff2928b3bda78" kindref="member">setCircularUnits</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>positive<sp/>output<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classRosController_1a96cbee01e7e62dea807d8c00d072b312" kindref="member">setPositiveOutput</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timout<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;timout_ref&quot;</highlight><highlight class="normal">,<sp/>1.5);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kp<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/kp&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ki<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/ki&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kd<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/kd&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kff<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/kff&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kff_d<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/kff_d&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kff_lin_drag<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/kff_lin_drag&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kff_quad_drag<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/kff_quad_drag&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_out<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/max_out&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_out<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/min_out&quot;</highlight><highlight class="normal">,<sp/>-max_out);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_error<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/max_err&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_error<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/min_err&quot;</highlight><highlight class="normal">,<sp/>-max_error);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>max_ref_value_<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/max_ref&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>min_ref_value_<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/min_ref&quot;</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>debug_<sp/>=<sp/>nh.param(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/debug&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>create<sp/>the<sp/>controller<sp/>if<sp/>no<sp/>gains<sp/>were<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kp<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>ki<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>kd<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>kff<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>kff_d<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>kff_lin_drag<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>kff_quad_drag<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN_STREAM(</highlight><highlight class="stringliteral">&quot;No<sp/>PID<sp/>and<sp/>Feedfoward<sp/>gains<sp/>were<sp/>specified<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>controller.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_c_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>debugging,<sp/>create<sp/>a<sp/>publisher<sp/>for<sp/>debug<sp/>data<sp/>related<sp/>to<sp/>this<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN_STREAM(</highlight><highlight class="stringliteral">&quot;Debugging<sp/>extra<sp/>info<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>controller.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_pub_<sp/>=<sp/>nh.advertise&lt;medusa_msgs::mPidDebug&gt;(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nh,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/debug/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name,<sp/></highlight><highlight class="stringliteral">&quot;/debug/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name),<sp/>1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>subscribe<sp/>to<sp/>relevant<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>ros_sub_<sp/>=<sp/>nh.subscribe(refCallback_topic.c_str(),<sp/>10,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classRosController_1ac4ec0c37e0bead0adb9844be25bb9e74" kindref="member">RosController::refCallback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>PID<sp/>controller<sp/>with/without<sp/>low<sp/>pass<sp/>filter<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nh.hasParam(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/lpf_fc&quot;</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lpf_dt,<sp/>lpf_fc;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>lpf_dt<sp/>=<sp/>1.0<sp/>/<sp/>frequency_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>nh.getParam(</highlight><highlight class="stringliteral">&quot;controllers/&quot;</highlight><highlight class="normal"><sp/>+<sp/>controller_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/lpf_fc&quot;</highlight><highlight class="normal">,<sp/>lpf_fc);<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpf_fc<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN_STREAM(</highlight><highlight class="stringliteral">&quot;Low<sp/>pass<sp/>filter<sp/>cutoff<sp/>frequency<sp/>must<sp/>be<sp/>higher<sp/>than<sp/>0.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid_c_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_c_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classPID__Controller" kindref="compound">PID_Controller</ref>(kp,<sp/>ki,<sp/>kd,<sp/>kff,<sp/>kff_d,<sp/>kff_lin_drag,<sp/>kff_quad_drag,<sp/>max_error,<sp/>max_out,<sp/>min_error,<sp/>min_out,<sp/>lpf_dt,<sp/>lpf_fc);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_c_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classPID__Controller" kindref="compound">PID_Controller</ref>(kp,<sp/>ki,<sp/>kd,<sp/>kff,<sp/>kff_d,<sp/>kff_lin_drag,<sp/>kff_quad_drag,<sp/>max_error,<sp/>max_out,<sp/>min_error,<sp/>min_out);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>ref_value_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ref_time_<sp/>=<sp/>ros::Time(0.0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>timeout_ref_<sp/>=<sp/>ros::Duration(timout);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>last_cmd_<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRosController_1ac4ec0c37e0bead0adb9844be25bb9e74" kindref="member">RosController::refCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::Float64<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>ref_time_<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_ref_value_<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>min_ref_value_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_value_<sp/>=<sp/>msg.data;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>saturate<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ref_value_<sp/>=<sp/>fmin(fmax(msg.data,<sp/>min_ref_value_),<sp/>max_ref_value_);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classRosController_1a8193292ddc96349fce5e52706462e0c5" kindref="member">RosController::computeCommand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRosController_1a5bdfbf66b3ad946e0b7b49cdc0e3a5e3" kindref="member">validRef</ref>())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.ref<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.ref_d<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.ref_d_filtered<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.state<sp/>=<sp/>*state_ptr_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.error<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.error_saturated<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.ffTerm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.ffDTerm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.ffDragTerm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.pTerm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.iTerm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.dTerm<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.output<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(circular_units_)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_msg_.state<sp/>&gt;<sp/>180)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.state<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_msg_.state<sp/>&lt;<sp/>-180)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.state<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.controller<sp/>=<sp/>controller_name_;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug_pub_.publish(debug_msg_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>ref_value_<sp/>-<sp/>*state_ptr_;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isnan(ref_value_))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;getting<sp/>NaN<sp/>in<sp/>%s<sp/>controller&quot;</highlight><highlight class="normal">,<sp/>controller_name_.c_str());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>the<sp/>error<sp/>between<sp/>[-180,180]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(circular_units_)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&gt;<sp/>180)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&lt;<sp/>-180)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>ros::Time<sp/>tnow<sp/>=<sp/>ros::Time::now();<sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>*force_or_torque_ptr_<sp/>+=<sp/>(positive_output_<sp/>?<sp/>1<sp/>:<sp/>-1)<sp/>*<sp/>pid_c_-&gt;<ref refid="classPID__Controller_1aded3238aaad181a57f25ca6c50455be9" kindref="member">computeCommand</ref>(error,<sp/>ref_value_,<sp/>(tnow<sp/>-<sp/>last_cmd_).toSec(),<sp/>debug_);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>last_cmd_<sp/>=<sp/>tnow;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>debugging<sp/>info,<sp/>publish<sp/>the<sp/>internal<sp/>controller<sp/>variables<sp/>for<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_msg_<sp/>=<sp/>pid_c_-&gt;<ref refid="classPID__Controller_1a618afbbff4d9edc948a4e5db9700957f" kindref="member">getDebugInfo</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_msg_.state<sp/>=<sp/>*state_ptr_;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(circular_units_)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_msg_.state<sp/>&gt;<sp/>180)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.state<sp/>-=<sp/>360;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_msg_.state<sp/>&lt;<sp/>-180)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug_msg_.state<sp/>+=<sp/>360;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_msg_.header.stamp<sp/>=<sp/>tnow;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_msg_.controller<sp/>=<sp/>controller_name_;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_pub_.publish(debug_msg_);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*force_or_torque_ptr_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRosController_1a5bdfbf66b3ad946e0b7b49cdc0e3a5e3" kindref="member">RosController::validRef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid_c_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ros::Time::now()<sp/>-<sp/>ref_time_)<sp/>&lt;<sp/>timeout_ref_)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reactivate<sp/>the<sp/>controller<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid_c_-&gt;disable)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_cmd_<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid_c_-&gt;<ref refid="classPID__Controller_1aff0c75ab6d99d57c489050f7ef326d67" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pid_c_-&gt;disable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>pid_c_-&gt;disable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>disable<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/controllers/ros_controller.cpp"/>
  </compounddef>
</doxygen>
