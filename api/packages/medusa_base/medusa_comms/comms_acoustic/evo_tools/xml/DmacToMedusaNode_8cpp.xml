<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="DmacToMedusaNode_8cpp" kind="file" language="C++">
    <compoundname>DmacToMedusaNode.cpp</compoundname>
    <includes refid="DmacToMedusaNode_8h" local="yes">DmacToMedusaNode.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/DmacToMedusaNode.cpp</label>
        <link refid="DmacToMedusaNode_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>medusa_gimmicks_library/MedusaGimmicks.h</label>
      </node>
      <node id="11">
        <label>dmac/mUSBLFix.h</label>
      </node>
      <node id="15">
        <label>Eigen/Eigen</label>
      </node>
      <node id="10">
        <label>auv_msgs/NavigationStatus.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="16">
        <label>Eigen/Dense</label>
      </node>
      <node id="9">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="8">
        <label>tf2/LinearMath/Vector3.h</label>
      </node>
      <node id="2">
        <label>DmacToMedusaNode.h</label>
        <link refid="DmacToMedusaNode_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ros/ros.h</label>
      </node>
      <node id="6">
        <label>tf2/transform_datatypes.h</label>
      </node>
      <node id="17">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>tf2_ros/transform_listener.h</label>
      </node>
      <node id="7">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="12">
        <label>medusa_msgs/mUSBLFix.h</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="DmacToMedusaNode_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/DmacToMedusaNode.cpp" line="208" column="5" bodyfile="src/DmacToMedusaNode.cpp" bodystart="208" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Developers:<sp/>DSOR<sp/>Team<sp/>-&gt;<sp/>@irt.ist.pt<sp/>Instituto<sp/>Superior<sp/>Tecnico</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Description:<sp/>Please<sp/>check<sp/>the<sp/>documentation<sp/>of<sp/>this<sp/>package<sp/>for<sp/>more<sp/>info.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>header<sp/>incorporates<sp/>all<sp/>the<sp/>necessary<sp/>#include<sp/>files<sp/>and<sp/>defines<sp/>the<sp/>class<sp/>&quot;DmacToMedusaNode&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DmacToMedusaNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="9"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="10"><highlight class="comment">@.@<sp/>CONSTRUCTOR:<sp/>put<sp/>all<sp/>dirty<sp/>work<sp/>of<sp/>initializations<sp/>here</highlight></codeline>
<codeline lineno="11"><highlight class="comment">Note<sp/>the<sp/>odd<sp/>syntax:<sp/>have<sp/>to<sp/>pass<sp/>nodehandle<sp/>pointer<sp/>into<sp/>constructor<sp/>for<sp/>constructor<sp/>to<sp/>build<sp/>subscribers,<sp/>etc</highlight></codeline>
<codeline lineno="12"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">DmacToMedusaNode::DmacToMedusaNode(ros::NodeHandle<sp/>*nodehandle,<sp/>ros::NodeHandle<sp/>*nodehandle_private)<sp/>:<sp/>nh_(*nodehandle),<sp/>nh_private_(*nodehandle_private)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;in<sp/>class<sp/>constructor<sp/>of<sp/>DmacToMedusaNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>loadParams();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>buildUSBLRotationMatrix();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>initializeSubscribers();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>initializePublishers();</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="25"><highlight class="comment">@.@<sp/>Destructor</highlight></codeline>
<codeline lineno="26"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">DmacToMedusaNode::~DmacToMedusaNode()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>shutdown<sp/>publishers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---&gt;<sp/>add<sp/>publishers<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>uref_pub.shutdown();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>usbl_fix_medusa_pub_.shutdown();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>shutdown<sp/>subscribers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---&gt;<sp/>add<sp/>subscribers<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>state_sub.shutdown();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>usbl_fix_dmac_sub_.shutdown();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>shutdown<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>nh_.shutdown();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>nh_private_.shutdown();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>@.@<sp/>Member<sp/>Helper<sp/>function<sp/>to<sp/>set<sp/>up<sp/>subscribers;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>note<sp/>odd<sp/>syntax:<sp/>&amp;DmacToMedusaNode::subscriberCallback<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>member<sp/>function<sp/>of<sp/>DmacToMedusaNode</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>&quot;this&quot;<sp/>keyword<sp/>is<sp/>required,<sp/>to<sp/>refer<sp/>to<sp/>the<sp/>current<sp/>instance<sp/>of<sp/>DmacToMedusaNode</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>#######################################################################################################################</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DmacToMedusaNode::initializeSubscribers()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Subscribers<sp/>for<sp/>DmacToMedusaNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---&gt;<sp/>add<sp/>subscribers<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>state_sub<sp/>=<sp/>nh_.subscribe(&quot;State&quot;,<sp/>10,<sp/>&amp;DmacToMedusaNode::updateCallback,this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>usbl_fix_dmac_sub_<sp/>=<sp/>nh_.subscribe(p_usbl_fix_dmac_topic_,<sp/>10,<sp/>&amp;DmacToMedusaNode::fixCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>state_sub_<sp/>=<sp/>nh_.subscribe(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/state&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/nav/filter/state&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>&amp;DmacToMedusaNode::stateCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="64"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>@.@<sp/>Member<sp/>helper<sp/>function<sp/>to<sp/>set<sp/>up<sp/>publishers;</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>#######################################################################################################################</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DmacToMedusaNode::initializePublishers()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Publishers<sp/>for<sp/>DmacToMedusaNode&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>---&gt;<sp/>add<sp/>publishers<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Example:<sp/>uref_pub<sp/>=<sp/>nh_.advertise&lt;std_medusa_usbl_fix_msgs::Float64&gt;(&quot;URef&quot;,<sp/>10);<sp/>//Surge<sp/>Reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>usbl_fix_medusa_pub_<sp/>=<sp/>nh_.advertise&lt;medusa_msgs::mUSBLFix&gt;(p_usbl_fix_medusa_topic_,<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>@.@<sp/>Member<sp/>helper<sp/>function<sp/>to<sp/>set<sp/>up<sp/>the<sp/>timer;<sp/>This<sp/>is<sp/>a<sp/>more<sp/>flexible<sp/>and<sp/>useful<sp/>form<sp/>of<sp/>the<sp/>ros::Rate</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>#######################################################################################################################</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>@.@<sp/>Load<sp/>the<sp/>parameters</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>#######################################################################################################################</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DmacToMedusaNode::loadParams()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Load<sp/>the<sp/>DmacToMedusaNode<sp/>parameters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---&gt;<sp/>params<sp/>here,<sp/>always<sp/>p_paramName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Frame<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//p_destination_frame_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/>&quot;destination_frame&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Topic<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>p_usbl_fix_dmac_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/dmac_fix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Topic<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>p_usbl_fix_medusa_topic_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/medusa_fix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>p_real_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;bool&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>p_fix_type_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;bool&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;fix_type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>p_installation_matrix_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::vector&lt;double&gt;&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;installation_matrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="109"><highlight class="comment">@.@<sp/>Helper<sp/>method<sp/>for<sp/>rotating<sp/>message<sp/>from<sp/>sensor<sp/>frame<sp/>to<sp/>base_link(emo)<sp/>or<sp/>base_pose(real)<sp/>frames</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/>Note:<sp/>messages<sp/>passed<sp/>by<sp/>reference</highlight></codeline>
<codeline lineno="111"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DmacToMedusaNode::buildUSBLRotationMatrix(){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_fix_type_<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>usbl_rot_matrix_<sp/>&lt;&lt;<sp/>std::sin(p_installation_matrix_[0]),<sp/>std::cos(p_installation_matrix_[0]),<sp/>0,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cos(p_installation_matrix_[0]),<sp/>-std::sin(p_installation_matrix_[0]),<sp/>0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>std::cos(p_installation_matrix_[2]);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>usbl_rot_matrix_<sp/>&lt;&lt;<sp/>std::sin(p_installation_matrix_[0]),<sp/>-std::cos(p_installation_matrix_[0]),<sp/>0,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cos(p_installation_matrix_[0]),<sp/>std::sin(p_installation_matrix_[0]),<sp/>0,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>std::cos(p_installation_matrix_[2]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="127"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="128"><highlight class="comment">@.@<sp/>Callbacks<sp/>Section<sp/>/<sp/>Methods</highlight></codeline>
<codeline lineno="129"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="134"><highlight class="comment">@.@<sp/>Callback<sp/>fix<sp/>usbl<sp/>dmac<sp/>-&gt;<sp/>convert<sp/>usbl<sp/>fix<sp/>dmac<sp/>message<sp/>into<sp/>usbl<sp/>fix<sp/>medusa<sp/>dmac<sp/>message</highlight></codeline>
<codeline lineno="135"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="136"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DmacToMedusaNode::fixCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dmac::mUSBLFix<sp/>&amp;dmac_usbl_fix_msg)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Start<sp/>building<sp/>the<sp/>medusa<sp/>usbl<sp/>fix<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_msgs::mUSBLFix<sp/>medusa_usbl_fix_msg;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.header<sp/>=<sp/>dmac_usbl_fix_msg.header;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.type<sp/>=<sp/>dmac_usbl_fix_msg.type;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.source_id<sp/>=<sp/>dmac_usbl_fix_msg.source_id;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.source_name<sp/>=<sp/>dmac_usbl_fix_msg.source_name;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.source_frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;vehicle&quot;</highlight><highlight class="normal"><sp/>+<sp/>dmac_usbl_fix_msg.source_name;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.bearing_raw<sp/>=<sp/>dmac_usbl_fix_msg.bearing_raw;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.elevation_raw<sp/>=<sp/>dmac_usbl_fix_msg.elevation_raw;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>If<sp/>message<sp/>is<sp/>range<sp/>only<sp/>or<sp/>full<sp/>fix<sp/>grab<sp/>the<sp/>range<sp/>value<sp/>from<sp/>dmac<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(medusa_usbl_fix_msg.type<sp/>==<sp/>medusa_usbl_fix_msg.RANGE_ONLY<sp/>||<sp/>medusa_usbl_fix_msg.type<sp/>==<sp/>medusa_usbl_fix_msg.FULL_FIX)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.range<sp/>=<sp/>dmac_usbl_fix_msg.range;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>message<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(medusa_usbl_fix_msg.type<sp/>==<sp/>medusa_usbl_fix_msg.AZIMUTH_ONLY<sp/>||<sp/>medusa_usbl_fix_msg.type<sp/>==<sp/>medusa_usbl_fix_msg.FULL_FIX)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_real_){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Here&quot;<sp/>&lt;&lt;<sp/>&quot;\n&quot;;<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_rel,<sp/>y_rel,<sp/>z_rel,<sp/>range_r=10.0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_rel<sp/>=<sp/>cos(dmac_usbl_fix_msg.bearing_raw)*range_r*cos(dmac_usbl_fix_msg.elevation_raw);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_rel<sp/>=<sp/>sin(dmac_usbl_fix_msg.bearing_raw)*range_r*cos(dmac_usbl_fix_msg.elevation_raw);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_rel<sp/>=<sp/>range_r*sin(dmac_usbl_fix_msg.elevation_raw);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>Vector<sp/>to<sp/>body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>point(3,1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point<sp/>&lt;&lt;<sp/>x_rel,<sp/>y_rel,<sp/>z_rel;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>pt_rot;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_rot<sp/>=<sp/>usbl_rot_matrix_*point;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>Vector<sp/>to<sp/>interial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_rot_matrix_<sp/>&lt;&lt;<sp/>cos(yaw_state_),<sp/>-sin(yaw_state_),<sp/>0,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin(yaw_state_),<sp/>cos(yaw_state_),<sp/>0,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,0,1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_rot<sp/>=<sp/>body_rot_matrix_<sp/>*<sp/>pt_rot;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cartesian<sp/>to<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.bearing<sp/><sp/>=<sp/>std::atan2(pt_rot(1),pt_rot(0));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.elevation<sp/>=<sp/>std::atan2(pt_rot(2),std::sqrt(std::pow(pt_rot(0),2)<sp/>+<sp/>std::pow(pt_rot(1),2)));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.bearing<sp/>=<sp/>dmac_usbl_fix_msg.bearing_raw;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>medusa_usbl_fix_msg.elevation<sp/>=<sp/>dmac_usbl_fix_msg.elevation_raw;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Publishing<sp/>the<sp/>new<sp/>message<sp/>medusa<sp/>usbl<sp/>fix<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>usbl_fix_medusa_pub_.publish(medusa_usbl_fix_msg);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DmacToMedusaNode::stateCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>auv_msgs::NavigationStatus<sp/>&amp;msg){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>yaw_state_<sp/>=<sp/>(msg.orientation.z/180)<sp/>*<sp/>MedusaGimmicks::PI;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="204"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>@.@<sp/>Main</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>#######################################################################################################################</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>ROS<sp/>set-ups:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;acoustic_converters_node&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//node<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>create<sp/>a<sp/>node<sp/>handle;<sp/>need<sp/>to<sp/>pass<sp/>this<sp/>to<sp/>the<sp/>class<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh,<sp/>nh_p(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;main:<sp/>instantiating<sp/>an<sp/>object<sp/>of<sp/>type<sp/>DmacToMedusaNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>instantiate<sp/>an<sp/>DmacToMedusaNode<sp/>class<sp/>object<sp/>and<sp/>pass<sp/>in<sp/>pointer<sp/>to<sp/>nodehandle<sp/>for<sp/>constructor<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDmacToMedusaNode" kindref="compound">DmacToMedusaNode</ref><sp/>DmacToMedusa(&amp;nh,<sp/>&amp;nh_p);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Added<sp/>to<sp/>work<sp/>with<sp/>timer<sp/>-&gt;<sp/>going<sp/>into<sp/>spin;<sp/>let<sp/>the<sp/>callbacks<sp/>do<sp/>all<sp/>the<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/DmacToMedusaNode.cpp"/>
  </compounddef>
</doxygen>
