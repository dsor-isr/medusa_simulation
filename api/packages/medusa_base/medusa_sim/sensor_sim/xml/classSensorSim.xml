<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classSensorSim" kind="class" language="C++" prot="public">
    <compoundname>SensorSim</compoundname>
    <innerclass refid="structSensorSim_1_1Sensor" prot="private">SensorSim::Sensor</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classSensorSim_1a0c1935c15ab9227da7a0b132de3d775d" prot="private" static="no">
        <type>struct SensorSim::Sensor</type>
        <definition>typedef struct SensorSim::Sensor SensorSim::Sensor</definition>
        <argsstring></argsstring>
        <name>Sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="72" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classSensorSim_1a3e9e9aea4553bbc2972c3db2f457e0ef" prot="private" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle SensorSim::nh_</definition>
        <argsstring></argsstring>
        <name>nh_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="90" column="17" bodyfile="include/SensorSim.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a60b2b5233ac7b0ba736876a6c47d3bf8" prot="private" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle SensorSim::nh_private_</definition>
        <argsstring></argsstring>
        <name>nh_private_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="90" column="21" bodyfile="include/SensorSim.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a5c8afe10e302218c618bd3349e48145e" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::sub_odometry</definition>
        <argsstring></argsstring>
        <name>sub_odometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="95" column="17" bodyfile="include/SensorSim.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a8e89072f3b240b54561d92e0ab7c6ad7" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::sub_reset</definition>
        <argsstring></argsstring>
        <name>sub_reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="95" column="30" bodyfile="include/SensorSim.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a8079457d48093e4a7e3c324b00dc5272" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::sub_thruster</definition>
        <argsstring></argsstring>
        <name>sub_thruster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="95" column="40" bodyfile="include/SensorSim.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a618da567f09dc9816784ae09ed1ac1fa" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::HSB_T</definition>
        <argsstring></argsstring>
        <name>HSB_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="97" column="17" bodyfile="include/SensorSim.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a7e213cdabc9d18135e21ecb4d21d41c1" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::HPS_T</definition>
        <argsstring></argsstring>
        <name>HPS_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="97" column="23" bodyfile="include/SensorSim.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a2a33b264d095de655559c8e512017316" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::VSB_T</definition>
        <argsstring></argsstring>
        <name>VSB_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="97" column="29" bodyfile="include/SensorSim.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a9fb059c7a1d8f8abaaca6e3a54da84c8" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber SensorSim::VPS_T</definition>
        <argsstring></argsstring>
        <name>VPS_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="97" column="35" bodyfile="include/SensorSim.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a1d2be53f19c1c478fd4e8fe77dc09c94" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::HSB</definition>
        <argsstring></argsstring>
        <name>HSB</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="98" column="8" bodyfile="include/SensorSim.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a7f97eab64bc40c3260f0f7fe7b8d942b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::HPS</definition>
        <argsstring></argsstring>
        <name>HPS</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="98" column="11" bodyfile="include/SensorSim.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1accb8510ff183d7aa8376c487b137cc07" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::VSB</definition>
        <argsstring></argsstring>
        <name>VSB</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="98" column="14" bodyfile="include/SensorSim.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1afd0bb95bb37f0368a1109d895a16836d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::VPS</definition>
        <argsstring></argsstring>
        <name>VPS</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="98" column="17" bodyfile="include/SensorSim.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a2728aeb16ec8bcb6ecabef1ef36d0a5e" prot="private" static="no" mutable="no">
        <type>ros::Time</type>
        <definition>ros::Time SensorSim::last_thrust_ref</definition>
        <argsstring></argsstring>
        <name>last_thrust_ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="99" column="11" bodyfile="include/SensorSim.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a388701137b5522dc213e33ba4e42b89b" prot="private" static="no" mutable="no">
        <type>ros::Timer</type>
        <definition>ros::Timer SensorSim::timer_thrust2</definition>
        <argsstring></argsstring>
        <name>timer_thrust2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="104" column="16" bodyfile="include/SensorSim.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a2b877aab048863dcd2d5e0bba5f70428" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SensorSim::enable_dvl_</definition>
        <argsstring></argsstring>
        <name>enable_dvl_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="106" column="10" bodyfile="include/SensorSim.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a7bd3aff851a9fb315774c5c4ea244233" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SensorSim::enable_altimeter_</definition>
        <argsstring></argsstring>
        <name>enable_altimeter_</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="107" column="10" bodyfile="include/SensorSim.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1ac4a4e8519908a615acf18e115b560cf0" prot="private" static="no" mutable="no">
        <type>ros::ServiceServer</type>
        <definition>ros::ServiceServer SensorSim::enable_dvl_srv_</definition>
        <argsstring></argsstring>
        <name>enable_dvl_srv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="108" column="24" bodyfile="include/SensorSim.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a4084e1e5eb2c1d87c74d5dbab2c5b384" prot="private" static="no" mutable="no">
        <type>ros::ServiceServer</type>
        <definition>ros::ServiceServer SensorSim::enable_altimeter_srv_</definition>
        <argsstring></argsstring>
        <name>enable_altimeter_srv_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="109" column="24" bodyfile="include/SensorSim.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a4853955c4b490fe5e373a6fe029ca1c7" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_position</definition>
        <argsstring></argsstring>
        <name>pub_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="114" column="16" bodyfile="include/SensorSim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1ab9eb0f6f7476c5f7d93872258254c2e1" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_velocity</definition>
        <argsstring></argsstring>
        <name>pub_velocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="114" column="29" bodyfile="include/SensorSim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1adb4b8c6d259e58c0406a7f35a185a0e7" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_orientation</definition>
        <argsstring></argsstring>
        <name>pub_orientation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="114" column="42" bodyfile="include/SensorSim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a0c00191530e4b4221a70fc60e1cf99e5" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_range</definition>
        <argsstring></argsstring>
        <name>pub_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="114" column="58" bodyfile="include/SensorSim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a0768206c26e3f06992daf270ace5a245" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_model</definition>
        <argsstring></argsstring>
        <name>pub_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="114" column="68" bodyfile="include/SensorSim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1acad7da003dde9cbfb5ea147a5d94aa5c" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_gnss</definition>
        <argsstring></argsstring>
        <name>pub_gnss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="114" column="78" bodyfile="include/SensorSim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a8b6d4ae353535356701a939ef11ca2b2" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_thrusters</definition>
        <argsstring></argsstring>
        <name>pub_thrusters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="115" column="16" bodyfile="include/SensorSim.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a28103f751bdc4c145a8f98bbc2eb743d" prot="private" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher SensorSim::pub_thrustStatus</definition>
        <argsstring></argsstring>
        <name>pub_thrustStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="115" column="30" bodyfile="include/SensorSim.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a0dbc075a49e1b22ab3323888a48d9eb3" prot="private" static="no" mutable="no">
        <type>ros::Timer</type>
        <definition>ros::Timer SensorSim::timer_sensor</definition>
        <argsstring></argsstring>
        <name>timer_sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="120" column="16" bodyfile="include/SensorSim.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a7b526b227587ae49a2fc05f1b64103fe" prot="private" static="no" mutable="no">
        <type>ros::Timer</type>
        <definition>ros::Timer SensorSim::timer_thrust</definition>
        <argsstring></argsstring>
        <name>timer_thrust</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="121" column="16" bodyfile="include/SensorSim.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a01c621d038f0bb201ba671bbf34deb34" prot="private" static="no" mutable="no">
        <type>tf2_ros::Buffer</type>
        <definition>tf2_ros::Buffer SensorSim::tfBuffer</definition>
        <argsstring></argsstring>
        <name>tfBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="123" column="17" bodyfile="include/SensorSim.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1ab6984693dc0478c6067b42f0e5643f47" prot="private" static="no" mutable="no">
        <type>tf2_ros::TransformListener *</type>
        <definition>tf2_ros::TransformListener* SensorSim::tfListener</definition>
        <argsstring></argsstring>
        <name>tfListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="124" column="32" bodyfile="include/SensorSim.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a79b2bfde2ca9dfe012fd891829112183" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::p_water_column_length</definition>
        <argsstring></argsstring>
        <name>p_water_column_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="132" column="8" bodyfile="include/SensorSim.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1ac578448329555ef8fccb3814161a1011" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SensorSim::world_frame_id</definition>
        <argsstring></argsstring>
        <name>world_frame_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="133" column="13" bodyfile="include/SensorSim.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1aa950d3b22b2e7fde4a36c9dec3ea138d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SensorSim::base_link_frame_id</definition>
        <argsstring></argsstring>
        <name>base_link_frame_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="134" column="13" bodyfile="include/SensorSim.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a1faaf1c239f78ccbbdc5b075c7f3ffda" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SensorSim::flag_reset</definition>
        <argsstring></argsstring>
        <name>flag_reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="137" column="6" bodyfile="include/SensorSim.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a1c06c26821643b53a50ea02334e81167" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SensorSim::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="137" column="17" bodyfile="include/SensorSim.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a46c50051ca2623f41575857f5a75fb83" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SensorSim::SENSOR_COUNT</definition>
        <argsstring></argsstring>
        <name>SENSOR_COUNT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="138" column="5" bodyfile="include/SensorSim.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1ad6d677b01820c4bec2f660fc39e223f7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::origin_north</definition>
        <argsstring></argsstring>
        <name>origin_north</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="139" column="8" bodyfile="include/SensorSim.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a62fc6510911644e47d29b3c4e55c6d4d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SensorSim::origin_east</definition>
        <argsstring></argsstring>
        <name>origin_east</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="139" column="21" bodyfile="include/SensorSim.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1aecb72a316c06cd7343f4a665f2cca070" prot="private" static="no" mutable="no">
        <type>ros::Time</type>
        <definition>ros::Time SensorSim::t_latest</definition>
        <argsstring></argsstring>
        <name>t_latest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="140" column="11" bodyfile="include/SensorSim.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1af6c7601d8f890688be2d6c995d3116a7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Sensor &gt;</type>
        <definition>std::vector&lt;Sensor&gt; SensorSim::sensors</definition>
        <argsstring></argsstring>
        <name>sensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="144" column="17" bodyfile="include/SensorSim.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classSensorSim_1a1b1417868aca21ca22d5b68855422136" prot="private" static="no" mutable="no">
        <type>auv_msgs::NavigationStatus</type>
        <definition>auv_msgs::NavigationStatus SensorSim::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="145" column="28" bodyfile="include/SensorSim.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSensorSim_1a9c54c188d74e88e189e40712551fa808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SensorSim::SensorSim</definition>
        <argsstring>(ros::NodeHandle *nh, ros::NodeHandle *nh_private)</argsstring>
        <name>SensorSim</name>
        <param>
          <type>ros::NodeHandle *</type>
          <declname>nh</declname>
        </param>
        <param>
          <type>ros::NodeHandle *</type>
          <declname>nh_private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="77" column="1" bodyfile="src/SensorSim.cpp" bodystart="13" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1acf5acdf6f32b70407ef7a457e4aac88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SensorSim::~SensorSim</definition>
        <argsstring>()</argsstring>
        <name>~SensorSim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="82" column="1" bodyfile="src/SensorSim.cpp" bodystart="27" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a04256904a90cce2d7ca8356d56b90146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SensorSim::nodeFrequency</definition>
        <argsstring>()</argsstring>
        <name>nodeFrequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="87" column="8" bodyfile="src/SensorSim.cpp" bodystart="98" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classSensorSim_1af845070c455d264aca462860f4406148" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::HSB_Callback</definition>
        <argsstring>(const std_msgs::Int8 &amp;ptr)</argsstring>
        <name>HSB_Callback</name>
        <param>
          <type>const std_msgs::Int8 &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="100" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a10ae4e5da12cc2f94144d1c477c9dfb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::HPS_Callback</definition>
        <argsstring>(const std_msgs::Int8 &amp;ptr)</argsstring>
        <name>HPS_Callback</name>
        <param>
          <type>const std_msgs::Int8 &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="101" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1aa3cdad8593bc090fc521e1daf4e22b32" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::VSB_Callback</definition>
        <argsstring>(const std_msgs::Int8 &amp;ptr)</argsstring>
        <name>VSB_Callback</name>
        <param>
          <type>const std_msgs::Int8 &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="102" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1abc279f9d8921db06109c93ad1c6e484d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::VPS_Callback</definition>
        <argsstring>(const std_msgs::Int8 &amp;ptr)</argsstring>
        <name>VPS_Callback</name>
        <param>
          <type>const std_msgs::Int8 &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="103" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a2b42dac2f92bc162294ba88956b2dcf8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::initializeSubscribers</definition>
        <argsstring>()</argsstring>
        <name>initializeSubscribers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="150" column="6" bodyfile="src/SensorSim.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a781ca547a7276dc514854985305d5a7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::initializePublishers</definition>
        <argsstring>()</argsstring>
        <name>initializePublishers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="151" column="6" bodyfile="src/SensorSim.cpp" bodystart="65" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1aacb6bc558b7b1d5a697a911e56e0ea4d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::initializeServices</definition>
        <argsstring>()</argsstring>
        <name>initializeServices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="152" column="8" bodyfile="src/SensorSim.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a0c94f410457d33997198dc859dd8c1f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::initializeTimer</definition>
        <argsstring>()</argsstring>
        <name>initializeTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="153" column="6" bodyfile="src/SensorSim.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a48d1b5cbeb2427e4318a8b2fc5d5a4f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::loadParams</definition>
        <argsstring>()</argsstring>
        <name>loadParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="154" column="6" bodyfile="src/SensorSim.cpp" bodystart="111" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1ade703252ad62252da2a3a7a3e6d55175" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::sensorTimerCallback</definition>
        <argsstring>(const ros::TimerEvent &amp;event)</argsstring>
        <name>sensorTimerCallback</name>
        <param>
          <type>const ros::TimerEvent &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="159" column="6" bodyfile="src/SensorSim.cpp" bodystart="152" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a6afee802845a629ad3f998c01861e5a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::thrustTimerCallback</definition>
        <argsstring>(const ros::TimerEvent &amp;event)</argsstring>
        <name>thrustTimerCallback</name>
        <param>
          <type>const ros::TimerEvent &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="160" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a7f14bd414ed95916fc036fa4cdb3e99e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::thrust2TimerCallback</definition>
        <argsstring>(const ros::TimerEvent &amp;event)</argsstring>
        <name>thrust2TimerCallback</name>
        <param>
          <type>const ros::TimerEvent &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="161" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1ac7b493f32f12e269f0ff7f8dfe8fc375" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::stateCallback</definition>
        <argsstring>(const nav_msgs::Odometry &amp;msg)</argsstring>
        <name>stateCallback</name>
        <param>
          <type>const nav_msgs::Odometry &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="162" column="6" bodyfile="src/SensorSim.cpp" bodystart="202" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1af89b32896ca9e2947c9eb116fe94dc75" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::resetCallback</definition>
        <argsstring>(const std_msgs::Empty &amp;msg)</argsstring>
        <name>resetCallback</name>
        <param>
          <type>const std_msgs::Empty &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="163" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a4a2133e38557d0041f65610b60b6b007" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::thrustCallback</definition>
        <argsstring>(const dsor_msgs::Thruster &amp;msg)</argsstring>
        <name>thrustCallback</name>
        <param>
          <type>const dsor_msgs::Thruster &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="164" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1ae03ef2cfa40a8d7b3e970d540a1201f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::thrustStatusCallback</definition>
        <argsstring>(dsor_msgs::Thruster data)</argsstring>
        <name>thrustStatusCallback</name>
        <param>
          <type>dsor_msgs::Thruster</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="165" column="6" bodyfile="src/SensorSim.cpp" bodystart="246" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a4d21ca96680b0a164108d287d5c82025" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SensorSim::enableDVLService</definition>
        <argsstring>(std_srvs::SetBool::Request &amp;req, std_srvs::SetBool::Response &amp;res)</argsstring>
        <name>enableDVLService</name>
        <param>
          <type>std_srvs::SetBool::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>std_srvs::SetBool::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="166" column="10" bodyfile="src/SensorSim.cpp" bodystart="257" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a6b45cf663e25af0d9181bd50dc0268b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SensorSim::enableAltimeterService</definition>
        <argsstring>(std_srvs::SetBool::Request &amp;req, std_srvs::SetBool::Response &amp;res)</argsstring>
        <name>enableAltimeterService</name>
        <param>
          <type>std_srvs::SetBool::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>std_srvs::SetBool::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="167" column="10" bodyfile="src/SensorSim.cpp" bodystart="273" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1aec8cc80e53de153bc9c18382dd83c019" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SensorSim::addNoise</definition>
        <argsstring>(const auv_msgs::NavigationStatus &amp;state, const Sensor &amp;sensor, dsor_msgs::Measurement &amp;m)</argsstring>
        <name>addNoise</name>
        <param>
          <type>const auv_msgs::NavigationStatus &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const Sensor &amp;</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>dsor_msgs::Measurement &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="173" column="6" bodyfile="src/SensorSim.cpp" bodystart="315" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a5d631b2839d7c07d038abbdb27dab5f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SensorSim::addNoise</definition>
        <argsstring>(const auv_msgs::NavigationStatus &amp;state, const Sensor &amp;sensor, sensor_msgs::NavSatFix &amp;m)</argsstring>
        <name>addNoise</name>
        <param>
          <type>const auv_msgs::NavigationStatus &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const Sensor &amp;</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>sensor_msgs::NavSatFix &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="174" column="6" bodyfile="src/SensorSim.cpp" bodystart="364" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a6c61becb8267d4ba34dcb36170a34d64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::addNoise</definition>
        <argsstring>(const auv_msgs::NavigationStatus &amp;state, const Sensor &amp;sensor, medusa_msgs::mUSBLFix &amp;m)</argsstring>
        <name>addNoise</name>
        <param>
          <type>const auv_msgs::NavigationStatus &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const Sensor &amp;</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>medusa_msgs::mUSBLFix &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="175" column="6" bodyfile="src/SensorSim.cpp" bodystart="384" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a70136da9933667ae019081ab810cbf01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SensorSim::randn</definition>
        <argsstring>(double mu, double sigma)</argsstring>
        <name>randn</name>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="176" column="8" bodyfile="src/SensorSim.cpp" bodystart="394" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1ab09af1d265ed3bdb9182b1ce92bf5992" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; Sensor &gt;</type>
        <definition>std::vector&lt; SensorSim::Sensor &gt; SensorSim::extractSensors</definition>
        <argsstring>(XmlRpc::XmlRpcValue valueXml)</argsstring>
        <name>extractSensors</name>
        <param>
          <type>XmlRpc::XmlRpcValue</type>
          <declname>valueXml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="178" column="13" bodyfile="src/SensorSim.cpp" bodystart="289" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1aaeb0ef782db45a688f1877f657307b43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SensorSim::extractArrayDouble</definition>
        <argsstring>(double *array, XmlRpc::XmlRpcValue &amp;double_array)</argsstring>
        <name>extractArrayDouble</name>
        <param>
          <type>double *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>XmlRpc::XmlRpcValue &amp;</type>
          <declname>double_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="180" column="6" bodyfile="src/SensorSim.cpp" bodystart="417" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classSensorSim_1a52c33bab9ce1b4600b5c1a5ba72bc304" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SensorSim::readXML</definition>
        <argsstring>(T &amp;var, XmlRpc::XmlRpcValue &amp;valueXml, T val)</argsstring>
        <name>readXML</name>
        <param>
          <type>T &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>XmlRpc::XmlRpcValue &amp;</type>
          <declname>valueXml</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/SensorSim.h" line="182" column="6" bodyfile="include/SensorSim.h" bodystart="182" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/SensorSim.h" line="34" column="1" bodyfile="include/SensorSim.h" bodystart="33" bodyend="190"/>
    <listofallmembers>
      <member refid="classSensorSim_1aec8cc80e53de153bc9c18382dd83c019" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>addNoise</name></member>
      <member refid="classSensorSim_1a5d631b2839d7c07d038abbdb27dab5f9" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>addNoise</name></member>
      <member refid="classSensorSim_1a6c61becb8267d4ba34dcb36170a34d64" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>addNoise</name></member>
      <member refid="classSensorSim_1aa950d3b22b2e7fde4a36c9dec3ea138d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>base_link_frame_id</name></member>
      <member refid="classSensorSim_1a7bd3aff851a9fb315774c5c4ea244233" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>enable_altimeter_</name></member>
      <member refid="classSensorSim_1a4084e1e5eb2c1d87c74d5dbab2c5b384" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>enable_altimeter_srv_</name></member>
      <member refid="classSensorSim_1a2b877aab048863dcd2d5e0bba5f70428" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>enable_dvl_</name></member>
      <member refid="classSensorSim_1ac4a4e8519908a615acf18e115b560cf0" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>enable_dvl_srv_</name></member>
      <member refid="classSensorSim_1a6b45cf663e25af0d9181bd50dc0268b3" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>enableAltimeterService</name></member>
      <member refid="classSensorSim_1a4d21ca96680b0a164108d287d5c82025" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>enableDVLService</name></member>
      <member refid="classSensorSim_1aaeb0ef782db45a688f1877f657307b43" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>extractArrayDouble</name></member>
      <member refid="classSensorSim_1ab09af1d265ed3bdb9182b1ce92bf5992" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>extractSensors</name></member>
      <member refid="classSensorSim_1a1faaf1c239f78ccbbdc5b075c7f3ffda" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>flag_reset</name></member>
      <member refid="classSensorSim_1a7f97eab64bc40c3260f0f7fe7b8d942b" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>HPS</name></member>
      <member refid="classSensorSim_1a10ae4e5da12cc2f94144d1c477c9dfb7" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>HPS_Callback</name></member>
      <member refid="classSensorSim_1a7e213cdabc9d18135e21ecb4d21d41c1" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>HPS_T</name></member>
      <member refid="classSensorSim_1a1d2be53f19c1c478fd4e8fe77dc09c94" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>HSB</name></member>
      <member refid="classSensorSim_1af845070c455d264aca462860f4406148" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>HSB_Callback</name></member>
      <member refid="classSensorSim_1a618da567f09dc9816784ae09ed1ac1fa" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>HSB_T</name></member>
      <member refid="classSensorSim_1a1c06c26821643b53a50ea02334e81167" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>initialized</name></member>
      <member refid="classSensorSim_1a781ca547a7276dc514854985305d5a7f" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>initializePublishers</name></member>
      <member refid="classSensorSim_1aacb6bc558b7b1d5a697a911e56e0ea4d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>initializeServices</name></member>
      <member refid="classSensorSim_1a2b42dac2f92bc162294ba88956b2dcf8" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>initializeSubscribers</name></member>
      <member refid="classSensorSim_1a0c94f410457d33997198dc859dd8c1f3" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>initializeTimer</name></member>
      <member refid="classSensorSim_1a2728aeb16ec8bcb6ecabef1ef36d0a5e" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>last_thrust_ref</name></member>
      <member refid="classSensorSim_1a48d1b5cbeb2427e4318a8b2fc5d5a4f6" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>loadParams</name></member>
      <member refid="classSensorSim_1a3e9e9aea4553bbc2972c3db2f457e0ef" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>nh_</name></member>
      <member refid="classSensorSim_1a60b2b5233ac7b0ba736876a6c47d3bf8" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>nh_private_</name></member>
      <member refid="classSensorSim_1a04256904a90cce2d7ca8356d56b90146" prot="public" virt="non-virtual"><scope>SensorSim</scope><name>nodeFrequency</name></member>
      <member refid="classSensorSim_1a62fc6510911644e47d29b3c4e55c6d4d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>origin_east</name></member>
      <member refid="classSensorSim_1ad6d677b01820c4bec2f660fc39e223f7" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>origin_north</name></member>
      <member refid="classSensorSim_1a79b2bfde2ca9dfe012fd891829112183" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>p_water_column_length</name></member>
      <member refid="classSensorSim_1acad7da003dde9cbfb5ea147a5d94aa5c" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_gnss</name></member>
      <member refid="classSensorSim_1a0768206c26e3f06992daf270ace5a245" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_model</name></member>
      <member refid="classSensorSim_1adb4b8c6d259e58c0406a7f35a185a0e7" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_orientation</name></member>
      <member refid="classSensorSim_1a4853955c4b490fe5e373a6fe029ca1c7" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_position</name></member>
      <member refid="classSensorSim_1a0c00191530e4b4221a70fc60e1cf99e5" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_range</name></member>
      <member refid="classSensorSim_1a8b6d4ae353535356701a939ef11ca2b2" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_thrusters</name></member>
      <member refid="classSensorSim_1a28103f751bdc4c145a8f98bbc2eb743d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_thrustStatus</name></member>
      <member refid="classSensorSim_1ab9eb0f6f7476c5f7d93872258254c2e1" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>pub_velocity</name></member>
      <member refid="classSensorSim_1a70136da9933667ae019081ab810cbf01" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>randn</name></member>
      <member refid="classSensorSim_1a52c33bab9ce1b4600b5c1a5ba72bc304" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>readXML</name></member>
      <member refid="classSensorSim_1af89b32896ca9e2947c9eb116fe94dc75" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>resetCallback</name></member>
      <member refid="classSensorSim_1a0c1935c15ab9227da7a0b132de3d775d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>Sensor</name></member>
      <member refid="classSensorSim_1a46c50051ca2623f41575857f5a75fb83" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>SENSOR_COUNT</name></member>
      <member refid="classSensorSim_1af6c7601d8f890688be2d6c995d3116a7" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>sensors</name></member>
      <member refid="classSensorSim_1a9c54c188d74e88e189e40712551fa808" prot="public" virt="non-virtual"><scope>SensorSim</scope><name>SensorSim</name></member>
      <member refid="classSensorSim_1ade703252ad62252da2a3a7a3e6d55175" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>sensorTimerCallback</name></member>
      <member refid="classSensorSim_1a1b1417868aca21ca22d5b68855422136" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>state</name></member>
      <member refid="classSensorSim_1ac7b493f32f12e269f0ff7f8dfe8fc375" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>stateCallback</name></member>
      <member refid="classSensorSim_1a5c8afe10e302218c618bd3349e48145e" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>sub_odometry</name></member>
      <member refid="classSensorSim_1a8e89072f3b240b54561d92e0ab7c6ad7" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>sub_reset</name></member>
      <member refid="classSensorSim_1a8079457d48093e4a7e3c324b00dc5272" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>sub_thruster</name></member>
      <member refid="classSensorSim_1aecb72a316c06cd7343f4a665f2cca070" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>t_latest</name></member>
      <member refid="classSensorSim_1a01c621d038f0bb201ba671bbf34deb34" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>tfBuffer</name></member>
      <member refid="classSensorSim_1ab6984693dc0478c6067b42f0e5643f47" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>tfListener</name></member>
      <member refid="classSensorSim_1a7f14bd414ed95916fc036fa4cdb3e99e" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>thrust2TimerCallback</name></member>
      <member refid="classSensorSim_1a4a2133e38557d0041f65610b60b6b007" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>thrustCallback</name></member>
      <member refid="classSensorSim_1ae03ef2cfa40a8d7b3e970d540a1201f5" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>thrustStatusCallback</name></member>
      <member refid="classSensorSim_1a6afee802845a629ad3f998c01861e5a8" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>thrustTimerCallback</name></member>
      <member refid="classSensorSim_1a0dbc075a49e1b22ab3323888a48d9eb3" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>timer_sensor</name></member>
      <member refid="classSensorSim_1a7b526b227587ae49a2fc05f1b64103fe" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>timer_thrust</name></member>
      <member refid="classSensorSim_1a388701137b5522dc213e33ba4e42b89b" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>timer_thrust2</name></member>
      <member refid="classSensorSim_1afd0bb95bb37f0368a1109d895a16836d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>VPS</name></member>
      <member refid="classSensorSim_1abc279f9d8921db06109c93ad1c6e484d" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>VPS_Callback</name></member>
      <member refid="classSensorSim_1a9fb059c7a1d8f8abaaca6e3a54da84c8" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>VPS_T</name></member>
      <member refid="classSensorSim_1accb8510ff183d7aa8376c487b137cc07" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>VSB</name></member>
      <member refid="classSensorSim_1aa3cdad8593bc090fc521e1daf4e22b32" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>VSB_Callback</name></member>
      <member refid="classSensorSim_1a2a33b264d095de655559c8e512017316" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>VSB_T</name></member>
      <member refid="classSensorSim_1ac578448329555ef8fccb3814161a1011" prot="private" virt="non-virtual"><scope>SensorSim</scope><name>world_frame_id</name></member>
      <member refid="classSensorSim_1acf5acdf6f32b70407ef7a457e4aac88b" prot="public" virt="non-virtual"><scope>SensorSim</scope><name>~SensorSim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
