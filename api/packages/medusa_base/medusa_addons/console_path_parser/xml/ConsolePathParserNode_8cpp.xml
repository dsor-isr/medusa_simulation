<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ConsolePathParserNode_8cpp" kind="file" language="C++">
    <compoundname>ConsolePathParserNode.cpp</compoundname>
    <includes refid="ConsolePathParserNode_8h" local="yes">ConsolePathParserNode.h</includes>
    <incdepgraph>
      <node id="8">
        <label>list</label>
      </node>
      <node id="23">
        <label>medusa_msgs/Formation.h</label>
      </node>
      <node id="21">
        <label>geometry_msgs/PointStamped.h</label>
      </node>
      <node id="5">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="2">
        <label>ConsolePathParserNode.h</label>
        <link refid="ConsolePathParserNode_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>medusa_gimmicks_library/MedusaGimmicks.h</label>
      </node>
      <node id="26">
        <label>std_msgs/Bool.h</label>
      </node>
      <node id="1">
        <label>src/ros/ConsolePathParserNode.cpp</label>
        <link refid="ConsolePathParserNode_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dsor_paths/ResetPath.h</label>
      </node>
      <node id="25">
        <label>medusa_msgs/Section.h</label>
      </node>
      <node id="15">
        <label>dsor_paths/SpawnLine.h</label>
      </node>
      <node id="24">
        <label>medusa_msgs/MultiSection.h</label>
      </node>
      <node id="4">
        <label>Eigen/Core</label>
      </node>
      <node id="19">
        <label>auv_msgs/NavigationStatus.h</label>
      </node>
      <node id="20">
        <label>geometry_msgs/Point.h</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="28">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="12">
        <label>Formation.h</label>
        <link refid="Formation_8h_source"/>
      </node>
      <node id="16">
        <label>dsor_paths/SetConstSpeed.h</label>
      </node>
      <node id="22">
        <label>geometry_msgs/Vector3Stamped.h</label>
      </node>
      <node id="9">
        <label>ros/ros.h</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="30">
        <label>std_msgs/String.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>path_following/StartPF.h</label>
      </node>
      <node id="27">
        <label>std_msgs/Float32.h</label>
      </node>
      <node id="18">
        <label>path_following/StopPF.h</label>
      </node>
      <node id="29">
        <label>std_msgs/Int8.h</label>
      </node>
      <node id="14">
        <label>dsor_paths/SpawnArc2D.h</label>
      </node>
      <node id="11">
        <label>Section.h</label>
        <link refid="Section_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ConsolePathParserNode_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>The main function. The entry point to the program. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>An array with arguments</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An int with success or failure status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ros/ConsolePathParserNode.cpp" line="856" column="5" bodyfile="src/ros/ConsolePathParserNode.cpp" bodystart="856" bodyend="873"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Developers:<sp/>DSOR<sp/>Team<sp/>-&gt;<sp/>@isr.ist.pt<sp/>Instituto<sp/>Superior<sp/>Tecnico</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Description:<sp/>Please<sp/>check<sp/>the<sp/>documentation<sp/>of<sp/>this<sp/>package<sp/>for<sp/>more<sp/>info.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Don&apos;t<sp/>you<sp/>miss<sp/>the<sp/>danger<sp/>...</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ConsolePathParserNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="classConsolePathParserNode_1abec4ab1debed931123f1a83b126a64a3" kindref="member">ConsolePathParserNode::ConsolePathParserNode</ref>(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>*nodehandle,<sp/>ros::NodeHandle<sp/>*nodehandle_private)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>:<sp/>nh_(*nodehandle),<sp/>nh_private_(*nodehandle_private)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;in<sp/>class<sp/>constructor<sp/>of<sp/>ConsolePathParserNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>loadParams();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>initializeSubscribers();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>initializePublishers();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>initializeServices();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>initializeTimer();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="classConsolePathParserNode_1ae65df49ec11817b2c963730ede4cb9db" kindref="member">ConsolePathParserNode::~ConsolePathParserNode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>shutdown<sp/>publishers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>fullpath_pub_.shutdown();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>section_pub_.shutdown();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>wpref_pub_.shutdown();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>formation_pub_.shutdown();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>biased_formation_pub_.shutdown();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>altitude_pub_.shutdown();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>depth_pub_.shutdown();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>shutdown<sp/>subscribers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>missionstring_sub_.shutdown();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>state_sub_.shutdown();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>flag_sub_.shutdown();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shutdown<sp/>all<sp/>the<sp/>service<sp/>clients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>reset_path_client_.shutdown();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>spawn_arc_client_.shutdown();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>spawn_line_client_.shutdown();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>start_pf_client_.shutdown();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>stop_pf_client_.shutdown();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>set_path_speed_client_.shutdown();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>shutdown<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>nh_.shutdown();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>nh_private_.shutdown();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::initializeSubscribers()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Subscribers<sp/>for<sp/>ConsolePathParserNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>missionstring_sub_<sp/>=<sp/>nh_.subscribe(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/Mission_String&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/Mission_String&quot;</highlight><highlight class="normal">),<sp/>10,<sp/>&amp;ConsolePathParserNode::missionStringCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>state_sub_<sp/>=<sp/>nh_.subscribe(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/state&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/State&quot;</highlight><highlight class="normal">),<sp/>10,<sp/>&amp;ConsolePathParserNode::updateCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>flag_sub_<sp/><sp/>=<sp/>nh_.subscribe(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/flag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/Flag&quot;</highlight><highlight class="normal">),<sp/>10,<sp/>&amp;ConsolePathParserNode::flagCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::initializePublishers()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>Publishers<sp/>for<sp/>ConsolePathParserNode&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>section_pub_<sp/><sp/><sp/><sp/>=<sp/>nh_.advertise&lt;medusa_msgs::Section&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/Path_Section&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/Path_Section&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>formation_pub_<sp/><sp/>=<sp/>nh_.advertise&lt;medusa_msgs::Formation&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/Formation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/Formation&quot;</highlight><highlight class="normal">),<sp/>10,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>biased_formation_pub_<sp/>=<sp/>nh_.advertise&lt;medusa_msgs::Formation&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/biased_formation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/biased_formation&quot;</highlight><highlight class="normal">),<sp/>10,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>wpref_pub_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>nh_.advertise&lt;geometry_msgs::PointStamped&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/WPRef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/WPRef&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>altitude_pub_<sp/><sp/><sp/>=<sp/>nh_.advertise&lt;std_msgs::Float64&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/DepthRef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/ref/depth&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>depth_pub_<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>nh_.advertise&lt;std_msgs::Float64&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/AltRef&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/ref/altitude&quot;</highlight><highlight class="normal">),<sp/>10);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>fullpath_pub_<sp/><sp/><sp/>=<sp/>nh_.advertise&lt;medusa_msgs::MultiSection&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/publishers/FullMission&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/FullMission&quot;</highlight><highlight class="normal">),<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>flag_pub_<sp/><sp/>=<sp/>nh_.advertise&lt;std_msgs::Int8&gt;(MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/subscribers/flag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/Flag&quot;</highlight><highlight class="normal">),<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::initializeServices()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>the<sp/>service<sp/>names<sp/>from<sp/>the<sp/>configuration<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::string<sp/>reset_path_name<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/reset_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::string<sp/>arc_section_name<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/arc2d_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>std::string<sp/>line_section_name<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/line_path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::string<sp/>pf_start_name<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/pf_start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::string<sp/>pf_stop_name<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/pf_stop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::string<sp/>speed_name<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;topics/services/set_speed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initiate<sp/>all<sp/>the<sp/>service<sp/>clients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>reset_path_client_<sp/>=<sp/>nh_.serviceClient&lt;dsor_paths::ResetPath&gt;(reset_path_name);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>spawn_arc_client_<sp/>=<sp/>nh_.serviceClient&lt;dsor_paths::SpawnArc2D&gt;(arc_section_name);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>spawn_line_client_<sp/>=<sp/>nh_.serviceClient&lt;dsor_paths::SpawnLine&gt;(line_section_name);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>start_pf_client_<sp/>=<sp/>nh_.serviceClient&lt;path_following::StartPF&gt;(pf_start_name);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>stop_pf_client_<sp/>=<sp/>nh_.serviceClient&lt;path_following::StopPF&gt;(pf_stop_name);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>set_path_speed_client_<sp/>=<sp/>nh_.serviceClient&lt;dsor_paths::SetConstSpeed&gt;(speed_name);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::loadParams()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>path_folder<sp/>=<sp/>MedusaGimmicks::getParameters&lt;std::string&gt;(nh_private_,<sp/></highlight><highlight class="stringliteral">&quot;path_folder&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;~/paths_from_console&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>probably<sp/>not<sp/>being<sp/>used,<sp/>legacy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>own_id<sp/>=<sp/>MedusaGimmicks::getParameters&lt;int&gt;(nh_private_,</highlight><highlight class="stringliteral">&quot;vehicle_id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>p_console_new_<sp/>=<sp/>MedusaGimmicks::getParameters&lt;bool&gt;(nh_private_,</highlight><highlight class="stringliteral">&quot;console_new&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::initializeTimer()<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>timer_<sp/>=<sp/>nh_.createTimer(ros::Duration(1.0<sp/>/<sp/><ref refid="classConsolePathParserNode_1a0edc2156d23e7cb359bcfe5cdd240471" kindref="member">ConsolePathParserNode::nodeFrequency</ref>()),<sp/>&amp;ConsolePathParserNode::depthCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classConsolePathParserNode_1a0edc2156d23e7cb359bcfe5cdd240471" kindref="member">ConsolePathParserNode::nodeFrequency</ref>()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>node_frequency;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>nh_private_.param(</highlight><highlight class="stringliteral">&quot;node_frequency&quot;</highlight><highlight class="normal">,<sp/>node_frequency,<sp/>5.0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Node<sp/>will<sp/>run<sp/>at<sp/>:<sp/>%lf<sp/>[hz]&quot;</highlight><highlight class="normal">,<sp/>node_frequency);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node_frequency;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Mission<sp/>String<sp/>Callback.<sp/>Accepts<sp/>string<sp/>and<sp/>tries<sp/>to<sp/>parse<sp/>mission<sp/>from<sp/>it</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@param<sp/>msg<sp/><sp/>A<sp/>reference<sp/>to<sp/>a<sp/>string<sp/>message<sp/>that<sp/>contains<sp/>a<sp/>mission</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::missionStringCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::String<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;New<sp/>Mission<sp/>String&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>is(msg.data);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>parseMission(is);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>method<sp/>to<sp/>request<sp/>the<sp/>service<sp/>to<sp/>generate<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>requestPath();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>pretty<sp/>name<sp/>for<sp/>the<sp/>mission<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*timeinfo;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[BUF_SIZE_TIME];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>time(&amp;rawtime);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>timeinfo<sp/>=<sp/>localtime(&amp;rawtime);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>strftime(buffer,<sp/>BUF_SIZE_TIME,<sp/></highlight><highlight class="stringliteral">&quot;/%Y-%m-%d_%I-%M-%S.txt&quot;</highlight><highlight class="normal">,<sp/>timeinfo);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>ROS_INFO_STREAM(</highlight><highlight class="stringliteral">&quot;PATH:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>path_folder);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>std::string<sp/>str(path_folder<sp/>+<sp/>buffer);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Saving<sp/>mission<sp/>in:<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>str.c_str());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>out(str.c_str());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg.data;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>out.close();</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::requestPath()<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>std::list&lt;Section&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Auxiliary<sp/>variable<sp/>to<sp/>check<sp/>wether<sp/>there<sp/>was<sp/>at<sp/>least<sp/>1<sp/>valid<sp/>section<sp/>to<sp/>follow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>service<sp/>to<sp/>reset<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>dsor_paths::ResetPath<sp/>srv;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>srv.request.reset_path<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>reset_path_client_.call(srv);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_console_new_){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>xrefpoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>yrefpoint<sp/>=0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interate<sp/>over<sp/>the<sp/>entire<sp/>mission<sp/>that<sp/>was<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>mission.begin();<sp/>it<sp/>!=<sp/>mission.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>which<sp/>type<sp/>of<sp/>mission<sp/>we<sp/>have:<sp/>2=Line,<sp/>3=Arc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;type<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>the<sp/>line<sp/>received<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(it-&gt;xi<sp/>==<sp/>it-&gt;xe<sp/>&amp;&amp;<sp/>it-&gt;yi<sp/>==<sp/>it-&gt;ye))<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>service<sp/>to<sp/>spawn<sp/>a<sp/>line<sp/>in<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsor_paths::SpawnLine<sp/>srv;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.start_point[1]<sp/>=<sp/>xrefpoint<sp/>+<sp/>it-&gt;xi;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.start_point[0]<sp/>=<sp/>yrefpoint<sp/>+<sp/>it-&gt;yi;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.start_point[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.end_point[1]<sp/>=<sp/>xrefpoint<sp/>+<sp/>it-&gt;xe;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.end_point[0]<sp/>=<sp/>yrefpoint<sp/>+<sp/>it-&gt;ye;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.end_point[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.ref_point<sp/>=<sp/>{0.0,<sp/>0.0,<sp/>0.0};<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn_line_client_.call(srv);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>service<sp/>to<sp/>specify<sp/>the<sp/>section<sp/>desired<sp/>speed<sp/>for<sp/>this<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsor_paths::SetConstSpeed<sp/>speed_srv;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed_srv.request.speed<sp/>=<sp/>it-&gt;velocity;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed_srv.request.default_speed<sp/>=<sp/>it-&gt;velocity;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_path_speed_client_.call(speed_srv);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>sent<sp/>sections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;type<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>the<sp/>arc<sp/>received<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!((it-&gt;xi<sp/>==<sp/>it-&gt;xe<sp/>&amp;&amp;<sp/>it-&gt;yi<sp/>==<sp/>it-&gt;ye)<sp/>||<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;xi<sp/>==<sp/>it-&gt;xc<sp/>&amp;&amp;<sp/>it-&gt;yi<sp/>==<sp/>it-&gt;yc)<sp/>||</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-&gt;xc<sp/>==<sp/>it-&gt;xe<sp/>&amp;&amp;<sp/>it-&gt;yc<sp/>==<sp/>it-&gt;ye)))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>service<sp/>to<sp/>spawn<sp/>an<sp/>arc<sp/>in<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsor_paths::SpawnArc2D<sp/>srv;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.start_point[1]<sp/>=<sp/>xrefpoint<sp/>+<sp/>it-&gt;xi;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.start_point[0]<sp/>=<sp/>yrefpoint<sp/>+<sp/>it-&gt;yi;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.end_point[1]<sp/>=<sp/>xrefpoint<sp/>+<sp/>it-&gt;xe;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.end_point[0]<sp/>=<sp/>yrefpoint<sp/>+<sp/>it-&gt;ye;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.center_point[1]<sp/>=<sp/>xrefpoint<sp/>+<sp/>it-&gt;xc;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.center_point[0]<sp/>=<sp/>yrefpoint<sp/>+<sp/>it-&gt;yc;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.direction<sp/>=<sp/>it-&gt;adirection;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srv.request.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn_arc_client_.call(srv);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>service<sp/>to<sp/>specify<sp/>the<sp/>section<sp/>desired<sp/>speed<sp/>for<sp/>this<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsor_paths::SetConstSpeed<sp/>speed_srv;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed_srv.request.speed<sp/>=<sp/>it-&gt;velocity;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed_srv.request.default_speed<sp/>=<sp/>it-&gt;velocity;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_path_speed_client_.call(speed_srv);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>sent<sp/>sections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run++;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>was<sp/>at<sp/>least<sp/>one<sp/>valid<sp/>section<sp/>to<sp/>follow,<sp/>invoke<sp/>the<sp/>path<sp/>following<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(run<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>path<sp/>following<sp/>service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path_following::StartPF<sp/>srv;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_pf_client_.call(srv);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Function<sp/>used<sp/>in<sp/>MissionString_Callback.<sp/>The<sp/>goal<sp/>is<sp/>to<sp/>parse<sp/>the<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>string<sp/>mission<sp/>to<sp/>the<sp/>vehicle<sp/>format<sp/>of<sp/>sections</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@param<sp/>is<sp/><sp/>A<sp/>reference<sp/>to<sp/>a<sp/>stringstream</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::parseMission(std::istream<sp/>&amp;is)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Gamma0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+.<sp/>Which<sp/>vehicles<sp/>will<sp/>cooperate<sp/>-&gt;<sp/>LEGACY<sp/>probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>std::list&lt;int&gt;<sp/>IDs_present;<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Initialize<sp/>formation<sp/>mode<sp/>to<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>formation_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>biased_formation_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>medusa_msgs::MultiSection<sp/>FullSection;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Delete<sp/>the<sp/>previous<sp/>mission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>mission.clear();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Delete<sp/>the<sp/>previous<sp/>formation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>formation.clear();<sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Read<sp/>all<sp/>the<sp/>lines<sp/>from<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(is,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;parseMission<sp/>new<sp/>line:<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>line.c_str());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSection" kindref="compound">Section</ref><sp/>newSection;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>comments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>lines++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>useful<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lines<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;version);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Mission<sp/>version<sp/>[%d]<sp/>not<sp/>supported.<sp/>Supported<sp/>versions:<sp/>3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Reference<sp/>Points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lines<sp/>==<sp/>2)<sp/>{<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;%lf<sp/>%lf<sp/>%*s&quot;</highlight><highlight class="normal">,<sp/>&amp;xrefpoint,<sp/>&amp;yrefpoint);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_console_new_){</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FullSection.RefPoint.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FullSection.RefPoint.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FullSection.RefPoint.x<sp/>=<sp/>xrefpoint;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FullSection.RefPoint.y<sp/>=<sp/>yrefpoint;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Formation<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>9,<sp/></highlight><highlight class="stringliteral">&quot;FORMATION&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>formation_str;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::split(formation_str,<sp/>line,<sp/>boost::is_any_of(</highlight><highlight class="stringliteral">&quot;\t<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::iterator<sp/>fstrs;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classFormation" kindref="compound">Formation</ref><sp/>aux;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fstrs<sp/>=<sp/>formation_str.begin()<sp/>+<sp/>1;<sp/>fstrs<sp/>!=<sp/>formation_str.end();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fstrs<sp/>=<sp/>fstrs<sp/>+<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen((*fstrs).c_str())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Build<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classFormation_1a74b7af08d38b4ff1bb196bfe7309ca78" kindref="member">id</ref><sp/>=<sp/>atoi((*fstrs).c_str());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classFormation_1aec1bfc92a54fa5ff860d668225b95e29" kindref="member">x</ref><sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>1)).c_str());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classFormation_1a50355d11d5cb0fb15100a3b25a59b2a6" kindref="member">y</ref><sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>2)).c_str());</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formation.push_back(aux);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>new<sp/>vehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>For<sp/>changing<sp/>the<sp/>path<sp/>and<sp/>see<sp/>if<sp/>this<sp/>vehicle<sp/>will<sp/>act<sp/>in<sp/>this<sp/>mission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi((*fstrs).c_str())<sp/>==<sp/>own_id)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formation_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_forma<sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>1)).c_str());</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_forma<sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>2)).c_str());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;FORMATION<sp/>x=%lf<sp/>y=%lf&quot;</highlight><highlight class="normal">,<sp/>x_forma,<sp/>y_forma);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!formation_mode)<sp/>{<sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;This<sp/>mission<sp/>is<sp/>not<sp/>for<sp/>this<sp/>vehicle,<sp/>no<sp/>id=%d<sp/>in<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FORMATION<sp/>line&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>own_id);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Don&apos;t<sp/>add<sp/>anything<sp/>to<sp/>the<sp/>mission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;BIAS&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>formation_str;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::split(formation_str,<sp/>line,<sp/>boost::is_any_of(</highlight><highlight class="stringliteral">&quot;\t<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::iterator<sp/>fstrs;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classFormation" kindref="compound">Formation</ref><sp/>aux;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fstrs<sp/>=<sp/>formation_str.begin()<sp/>+<sp/>1;<sp/>fstrs<sp/>!=<sp/>formation_str.end();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fstrs<sp/>=<sp/>fstrs<sp/>+<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen((*fstrs).c_str())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Build<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classFormation_1a74b7af08d38b4ff1bb196bfe7309ca78" kindref="member">id</ref><sp/>=<sp/>atoi((*fstrs).c_str());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classFormation_1aec1bfc92a54fa5ff860d668225b95e29" kindref="member">x</ref><sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>1)).c_str());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux.<ref refid="classFormation_1a50355d11d5cb0fb15100a3b25a59b2a6" kindref="member">y</ref><sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>2)).c_str());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formation.push_back(aux);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>new<sp/>vehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>For<sp/>changing<sp/>the<sp/>path<sp/>and<sp/>see<sp/>if<sp/>this<sp/>vehicle<sp/>will<sp/>act<sp/>in<sp/>this<sp/>mission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi((*fstrs).c_str())<sp/>==<sp/>own_id)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biased_formation_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_forma<sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>1)).c_str());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_forma<sp/>=<sp/>atof((*(fstrs<sp/>+<sp/>2)).c_str());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;BIASED<sp/>FORMATION<sp/>x=%lf<sp/>y=%lf&quot;</highlight><highlight class="normal">,<sp/>x_forma,<sp/>y_forma);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!biased_formation_mode)<sp/>{<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;This<sp/>mission<sp/>is<sp/>not<sp/>for<sp/>this<sp/>vehicle,<sp/>no<sp/>id=%d<sp/>in<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FORMATION<sp/>line&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>own_id);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>add<sp/>anything<sp/>to<sp/>the<sp/>mission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;POINT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;POINT<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>line.c_str());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66c245c5d792ebd8ab650c2264c44379" kindref="member">type</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>sscanf(line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;POINT<sp/>%lf<sp/>%lf<sp/>%f<sp/>%f<sp/>%f<sp/>%f<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1a837e94fbef6731e6fe354c0f8b07c357" kindref="member">xe</ref>,<sp/>&amp;newSection.<ref refid="classSection_1addb85ef123821858f62937a693e58d67" kindref="member">ye</ref>,<sp/>&amp;newSection.<ref refid="classSection_1ab747ac37984161ecab8ec7630bf5e2fe" kindref="member">radius</ref>,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1afbe2a2c29aacf67683646809cfc0267d" kindref="member">velocity</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a4bab719ad10f0396598e704bc916cecf" kindref="member">heading</ref>,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1ad2bda88f94afa8924b0a47f9452d5849" kindref="member">time</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref>))<sp/>==</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gamma0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66eab18117d9204b316c9d2e88fede20" kindref="member">gamma_s</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&gt;=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gamma0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66eab18117d9204b316c9d2e88fede20" kindref="member">gamma_s</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;LINE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66c245c5d792ebd8ab650c2264c44379" kindref="member">type</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>sscanf(line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;LINE<sp/>%lf<sp/>%lf<sp/>%lf<sp/>%lf<sp/>%f<sp/>%d<sp/>%lf&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1a8e9b0e3ebd4bc028a91b626845f99bf7" kindref="member">xi</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a4b788beab8f058f67b97c402acc4eb07" kindref="member">yi</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a837e94fbef6731e6fe354c0f8b07c357" kindref="member">xe</ref>,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1addb85ef123821858f62937a693e58d67" kindref="member">ye</ref>,<sp/>&amp;newSection.<ref refid="classSection_1afbe2a2c29aacf67683646809cfc0267d" kindref="member">velocity</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref>,<sp/>&amp;newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref>))<sp/>==<sp/>5)<sp/>{<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&gt;=<sp/>5<sp/>&amp;&amp;<sp/>res<sp/>&lt;=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gamma0<sp/>=<sp/>(*--mission.end()).gamma_e;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66eab18117d9204b316c9d2e88fede20" kindref="member">gamma_s</ref><sp/>=<sp/>Gamma0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref><sp/>=<sp/>Gamma0<sp/>+<sp/>sqrt(pow(newSection.<ref refid="classSection_1a837e94fbef6731e6fe354c0f8b07c357" kindref="member">xe</ref><sp/>-<sp/>newSection.<ref refid="classSection_1a8e9b0e3ebd4bc028a91b626845f99bf7" kindref="member">xi</ref>,<sp/>2)<sp/>+<sp/>pow(newSection.<ref refid="classSection_1addb85ef123821858f62937a693e58d67" kindref="member">ye</ref><sp/>-<sp/>newSection.<ref refid="classSection_1a4b788beab8f058f67b97c402acc4eb07" kindref="member">yi</ref>,<sp/>2));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Arc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;ARC&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66c245c5d792ebd8ab650c2264c44379" kindref="member">type</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>sscanf(</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;ARC<sp/>%lf<sp/>%lf<sp/>%lf<sp/>%lf<sp/>%lf<sp/>%lf<sp/>%f<sp/>%d<sp/>%f<sp/>%d<sp/>%lf&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1a8e9b0e3ebd4bc028a91b626845f99bf7" kindref="member">xi</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a4b788beab8f058f67b97c402acc4eb07" kindref="member">yi</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a35c5756892a8380c05b732150a30f5ea" kindref="member">xc</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a6394415440348c1d9da89f0463c120fb" kindref="member">yc</ref>,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1a837e94fbef6731e6fe354c0f8b07c357" kindref="member">xe</ref>,<sp/>&amp;newSection.<ref refid="classSection_1addb85ef123821858f62937a693e58d67" kindref="member">ye</ref>,<sp/>&amp;newSection.<ref refid="classSection_1afbe2a2c29aacf67683646809cfc0267d" kindref="member">velocity</ref>,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1a91cdf7332802c2e1a04b044ac7caa005" kindref="member">adirection</ref>,<sp/>&amp;newSection.<ref refid="classSection_1ab747ac37984161ecab8ec7630bf5e2fe" kindref="member">radius</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref>,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref>))<sp/>==<sp/>9)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&gt;=<sp/>9<sp/>&amp;&amp;<sp/>res<sp/>&lt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gamma0<sp/>=<sp/>(*--mission.end()).gamma_e;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psis<sp/>=<sp/>atan2(newSection.<ref refid="classSection_1a4b788beab8f058f67b97c402acc4eb07" kindref="member">yi</ref><sp/>-<sp/>newSection.<ref refid="classSection_1a6394415440348c1d9da89f0463c120fb" kindref="member">yc</ref>,<sp/>newSection.<ref refid="classSection_1a8e9b0e3ebd4bc028a91b626845f99bf7" kindref="member">xi</ref><sp/>-<sp/>newSection.<ref refid="classSection_1a35c5756892a8380c05b732150a30f5ea" kindref="member">xc</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psie<sp/>=<sp/>atan2(newSection.<ref refid="classSection_1addb85ef123821858f62937a693e58d67" kindref="member">ye</ref><sp/>-<sp/>newSection.<ref refid="classSection_1a6394415440348c1d9da89f0463c120fb" kindref="member">yc</ref>,<sp/>newSection.<ref refid="classSection_1a837e94fbef6731e6fe354c0f8b07c357" kindref="member">xe</ref><sp/>-<sp/>newSection.<ref refid="classSection_1a35c5756892a8380c05b732150a30f5ea" kindref="member">xc</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66eab18117d9204b316c9d2e88fede20" kindref="member">gamma_s</ref><sp/>=<sp/>Gamma0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/><sp/>Check<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSection.<ref refid="classSection_1a91cdf7332802c2e1a04b044ac7caa005" kindref="member">adirection</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref><sp/>=<sp/>Gamma0<sp/>+<sp/>ANG_P(psis<sp/>-<sp/>psie)<sp/>*<sp/>newSection.<ref refid="classSection_1ab747ac37984161ecab8ec7630bf5e2fe" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Counter<sp/>clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref><sp/>=<sp/>Gamma0<sp/>+<sp/>(2<sp/>*<sp/>PI<sp/>-<sp/>ANG_P(psis<sp/>-<sp/>psie))<sp/>*<sp/>newSection.<ref refid="classSection_1ab747ac37984161ecab8ec7630bf5e2fe" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;DEPTH&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>sscanf(line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;DEPTH<sp/>%f<sp/>%f<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;newSection.<ref refid="classSection_1aa58f7cc10b85ce6d6d5b14441ff5f420" kindref="member">depth</ref>,<sp/>&amp;newSection.<ref refid="classSection_1ad2bda88f94afa8924b0a47f9452d5849" kindref="member">time</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref>))<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66c245c5d792ebd8ab650c2264c44379" kindref="member">type</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Erroneous<sp/>construction<sp/>of<sp/>DEPTH<sp/>Primitive.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Alt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.compare(0,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;ALT&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>sscanf(line.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;ALT<sp/>%f<sp/>%f<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;newSection.<ref refid="classSection_1aa58f7cc10b85ce6d6d5b14441ff5f420" kindref="member">depth</ref>,<sp/>&amp;newSection.<ref refid="classSection_1ad2bda88f94afa8924b0a47f9452d5849" kindref="member">time</ref>,<sp/>&amp;newSection.<ref refid="classSection_1a608cbf1d2ee06190ee42bea34c1128cf" kindref="member">nVehicle</ref>))<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSection.<ref refid="classSection_1a66c245c5d792ebd8ab650c2264c44379" kindref="member">type</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Erroneous<sp/>construction<sp/>of<sp/>Altitude<sp/>Primitive.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Create<sp/>variables<sp/>for<sp/>RViz<sp/>Visualization<sp/>-&gt;<sp/>LEGACY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Point<sp/>StartPoint;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Point<sp/>CenterPoint;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Point<sp/>EndPoint;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>StartPoint.x<sp/>=<sp/>newSection.<ref refid="classSection_1a8e9b0e3ebd4bc028a91b626845f99bf7" kindref="member">xi</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>StartPoint.y<sp/>=<sp/>newSection.<ref refid="classSection_1a4b788beab8f058f67b97c402acc4eb07" kindref="member">yi</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>StartPoint.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>CenterPoint.x<sp/>=<sp/>newSection.<ref refid="classSection_1a35c5756892a8380c05b732150a30f5ea" kindref="member">xc</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>CenterPoint.y<sp/>=<sp/>newSection.<ref refid="classSection_1a6394415440348c1d9da89f0463c120fb" kindref="member">yc</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>CenterPoint.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPoint.x<sp/>=<sp/>newSection.<ref refid="classSection_1a837e94fbef6731e6fe354c0f8b07c357" kindref="member">xe</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPoint.y<sp/>=<sp/>newSection.<ref refid="classSection_1addb85ef123821858f62937a693e58d67" kindref="member">ye</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>EndPoint.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.type.push_back(newSection.<ref refid="classSection_1a66c245c5d792ebd8ab650c2264c44379" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.adirection.push_back(newSection.<ref refid="classSection_1a91cdf7332802c2e1a04b044ac7caa005" kindref="member">adirection</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.StartPoint.push_back(StartPoint);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.CenterPoint.push_back(CenterPoint);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.EndPoint.push_back(EndPoint);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.Gamma_s.push_back(newSection.<ref refid="classSection_1a66eab18117d9204b316c9d2e88fede20" kindref="member">gamma_s</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>FullSection.Gamma_e.push_back(newSection.<ref refid="classSection_1aedca6024e8ff158d512323ad2d9632c3" kindref="member">gamma_e</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>mission.push_back(newSection);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>FullSection.header.stamp<sp/>=<sp/>ros::Time::now();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>fullpath_pub_.publish(FullSection);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>medusa_msgs::Formation<sp/>Form_Topic;<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Send<sp/>the<sp/>formation<sp/>to<sp/>the<sp/>Cooperative_PF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>If<sp/>we<sp/>are<sp/>in<sp/>the<sp/>presence<sp/>of<sp/>a<sp/>Formation<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formation_mode<sp/>||<sp/>biased_formation_mode)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.ID.resize(formation.size());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.x.resize(formation.size());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.y.resize(formation.size());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;Formation&gt;::iterator<sp/>j;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>formation.begin();<sp/>j<sp/>!=<sp/>formation.end();<sp/>++j,<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.ID[i]<sp/>=<sp/>(*j).id;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.x[i]<sp/>=<sp/>(*j).x;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.y[i]<sp/>=<sp/>(*j).y;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formation_mode)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Change<sp/>the<sp/>mission<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>missionFormation();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>If<sp/>in<sp/>the<sp/>fille<sp/>there<sp/>is<sp/>only<sp/>gammas<sp/>and<sp/>specific<sp/>missions<sp/>for<sp/>each<sp/>vehicle<sp/>-<sp/>LEGACY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IDs_present.size()<sp/>&gt;<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.ID.resize(IDs_present.size());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.x.resize(IDs_present.size());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.y.resize(IDs_present.size());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;int&gt;::iterator<sp/>j;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>IDs_present.begin();<sp/>j<sp/>!=<sp/>IDs_present.end();<sp/>++j,<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.ID[i]<sp/>=<sp/>(*j);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.x[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.y[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Normal<sp/>Path-Following<sp/>without<sp/>Cooperation<sp/>(constant<sp/>speed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.ID.resize(1);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.x.resize(1);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.y.resize(1);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.ID[0]<sp/>=<sp/>own_id;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.x[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>Form_Topic.y[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Print<sp/>ref<sp/>point<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;---------------------------------------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Mission:<sp/>xrefpoint=%lf<sp/>yrefpoint=%lf\n\n&quot;</highlight><highlight class="normal">,<sp/>xrefpoint,<sp/>yrefpoint);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>std::list&lt;Section&gt;::iterator<sp/>i;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>mission.begin();<sp/>i<sp/>!=<sp/>mission.end();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Gammas<sp/>and<sp/>Section<sp/>Length<sp/>for<sp/>all<sp/>the<sp/>sections<sp/>of<sp/>this<sp/>vehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*i).type<sp/>==<sp/>2<sp/>||<sp/>(*i).type<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>((*i).nVehicle<sp/>==<sp/>-1<sp/>||<sp/>(*i).nVehicle<sp/>==<sp/>own_id))<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.Gamma_e.push_back((*i).gamma_e);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Start<sp/>point,<sp/>end<sp/>point,<sp/>center<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXf<sp/>ps(2),<sp/>pe(2),<sp/>pc(2);<sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ps[0]<sp/>=<sp/>(*i).xi;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ps[1]<sp/>=<sp/>(*i).yi;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pe[0]<sp/>=<sp/>(*i).xe;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pe[1]<sp/>=<sp/>(*i).ye;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pc[0]<sp/>=<sp/>(*i).xc;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pc[1]<sp/>=<sp/>(*i).yc;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).type<sp/>==<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.Length.push_back((pe<sp/>-<sp/>ps).norm());</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Arcs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).type<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Initial<sp/>angle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi0<sp/>=<sp/>atan2(ps(1)<sp/>-<sp/>pc(1),<sp/>ps(0)<sp/>-<sp/>pc(0));<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Final<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phie<sp/>=<sp/>atan2(pe(1)<sp/>-<sp/>pc(1),<sp/>pe(0)<sp/>-<sp/>pc(0));<sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Arc<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>(pc<sp/>-<sp/>ps).norm();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arc_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+.<sp/>Check<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).adirection<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc_len<sp/>=<sp/>ANG_P(phi0<sp/>-<sp/>phie)<sp/>*<sp/>R;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Counter-clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc_len<sp/>=<sp/>(2<sp/>*<sp/>PI<sp/>-<sp/>ANG_P(phi0<sp/>-<sp/>phie))<sp/>*<sp/>R;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Form_Topic.Length.push_back(arc_len);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SECTION<sp/>type=%d<sp/>Xi=%lf<sp/>Yi=%lf<sp/>Xc=%lf<sp/>Yc=%lf<sp/>Xe=%lf<sp/>Ye=%lf<sp/>Vl=%f<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dir=%d<sp/>R0=%lf<sp/>NV=%d<sp/>Gs=%lf<sp/>Ge=%lf\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i).type,<sp/>(*i).xi,<sp/>(*i).yi,<sp/>(*i).xc,<sp/>(*i).yc,<sp/>(*i).xe,<sp/>(*i).ye,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i).velocity,<sp/>(*i).adirection,<sp/>(*i).radius,<sp/>(*i).nVehicle,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i).gamma_s,<sp/>(*i).gamma_e);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;---------------------------------------------------------\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Legacy<sp/>here,<sp/>need<sp/>to<sp/>review</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Send<sp/>formation<sp/>to<sp/>the<sp/>Cooperative_PF<sp/>but<sp/>it<sp/>is<sp/>only<sp/>activated<sp/>by<sp/>the<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(biased_formation_mode)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>biased_formation_pub_.publish(Form_Topic);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>formation_pub_.publish(Form_Topic);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Detected<sp/>Mission<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mission.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Initialize<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>act_section<sp/>=<sp/>mission.begin();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>ENABLE<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Start<sp/>the<sp/>Mission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>startNewSection();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@.@<sp/>Function<sp/>used<sp/>in<sp/>MissionString_Callback<sp/>-&gt;<sp/>for<sp/>cooperative<sp/>pf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::missionFormation()<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>std::list&lt;Section&gt;::iterator<sp/>i;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>mission.begin();<sp/>i<sp/>!=<sp/>mission.end();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Can<sp/>only<sp/>change<sp/>the<sp/>mission<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>have<sp/>any<sp/>vehicle<sp/>associatead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).nVehicle<sp/>!=<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Waypoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).type<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>WayPoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Straight<sp/>Line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).type<sp/>==<sp/>2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Straight<sp/>Line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psi<sp/>=<sp/>atan2((*i).ye<sp/>-<sp/>(*i).yi,<sp/>(*i).xe<sp/>-<sp/>(*i).xi);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).xi<sp/>=<sp/>(*i).xi<sp/>+<sp/>x_forma<sp/>*<sp/>cos(psi)<sp/>-<sp/>y_forma<sp/>*<sp/>sin(psi);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).yi<sp/>=<sp/>(*i).yi<sp/>+<sp/>x_forma<sp/>*<sp/>sin(psi)<sp/>+<sp/>y_forma<sp/>*<sp/>cos(psi);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).xe<sp/>=<sp/>(*i).xe<sp/>+<sp/>x_forma<sp/>*<sp/>cos(psi)<sp/>-<sp/>y_forma<sp/>*<sp/>sin(psi);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).ye<sp/>=<sp/>(*i).ye<sp/>+<sp/>x_forma<sp/>*<sp/>sin(psi)<sp/>+<sp/>y_forma<sp/>*<sp/>cos(psi);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Arc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*i).type<sp/>==<sp/>3)<sp/>{<sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psis<sp/>=<sp/>atan2((*i).yi<sp/>-<sp/>(*i).yc,<sp/>(*i).xi<sp/>-<sp/>(*i).xc)<sp/>+<sp/>(*i).adirection<sp/>*<sp/>PI<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>psie<sp/>=<sp/>atan2((*i).ye<sp/>-<sp/>(*i).yc,<sp/>(*i).xe<sp/>-<sp/>(*i).xc)<sp/>+<sp/>(*i).adirection<sp/>*<sp/>PI<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).xi<sp/>=<sp/>(*i).xi<sp/>+<sp/>x_forma<sp/>*<sp/>cos(psis)<sp/>-<sp/>y_forma<sp/>*<sp/>sin(psis);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).yi<sp/>=<sp/>(*i).yi<sp/>+<sp/>x_forma<sp/>*<sp/>sin(psis)<sp/>+<sp/>y_forma<sp/>*<sp/>cos(psis);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).xe<sp/>=<sp/>(*i).xe<sp/>+<sp/>x_forma<sp/>*<sp/>cos(psie)<sp/>-<sp/>y_forma<sp/>*<sp/>sin(psie);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*i).ye<sp/>=<sp/>(*i).ye<sp/>+<sp/>x_forma<sp/>*<sp/>sin(psie)<sp/>+<sp/>y_forma<sp/>*<sp/>cos(psie);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@.@<sp/>Function<sp/>to<sp/>manage<sp/>switch<sp/>between<sp/>sections<sp/>of<sp/>the<sp/>path<sp/>from<sp/>console,<sp/>and<sp/>what<sp/>to<sp/>do<sp/>in<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::startNewSection()<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Verifify<sp/>if<sp/>the<sp/>section<sp/>is<sp/>for<sp/>this<sp/>vehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(act_section<sp/>!=<sp/>mission.end()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!((*act_section).nVehicle<sp/>==<sp/>-1<sp/>||<sp/>(*act_section).nVehicle<sp/>==<sp/>own_id))<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;This<sp/>section<sp/>is<sp/>not<sp/>for<sp/>this<sp/>vehicle<sp/>[ID=%d]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).nVehicle);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;SECTION<sp/>T=%d<sp/>Xi=%lf<sp/>Yi=%lf<sp/>Xc=%lf<sp/>Yc=%lf<sp/>Xe=%lf<sp/>Ye=%lf<sp/>Vl=%f<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dir=%d<sp/>R0=%lf<sp/>NV=%d<sp/>Gs=%lf<sp/>Ge=%lf&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).type,<sp/>(*act_section).xi,<sp/>(*act_section).yi,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).xc,<sp/>(*act_section).yc,<sp/>(*act_section).xe,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).ye,<sp/>(*act_section).velocity,<sp/>(*act_section).adirection,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).radius,<sp/>(*act_section).nVehicle,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).gamma_s,<sp/>(*act_section).gamma_e);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>++act_section;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Mission<sp/>End</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(act_section<sp/>==<sp/>mission.end())<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Mission<sp/>Finished&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PointStamped<sp/>aux;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.point.<ref refid="classFormation_1aec1bfc92a54fa5ff860d668225b95e29" kindref="member">x</ref><sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.point.y<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/><sp/>Hold<sp/>Position<sp/>in<sp/>the<sp/>same<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>wpref_pub_.publish(aux);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Publish,<sp/>during<sp/>2<sp/>sec,<sp/>0<sp/>depth<sp/>and<sp/>kill<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>DesiredDepth<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>ENABLE<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;SECTION<sp/>T=%d<sp/>Xi=%lf<sp/>Yi=%lf<sp/>Xc=%lf<sp/>Yc=%lf<sp/>Xe=%lf<sp/>Ye=%lf<sp/>Vl=%f<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dir=%d<sp/>R0=%lf<sp/>NV=%d<sp/>Gs=%lf<sp/>Ge=%lf&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).type,<sp/>(*act_section).xi,<sp/>(*act_section).yi,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).xc,<sp/>(*act_section).yc,<sp/>(*act_section).xe,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).ye,<sp/>(*act_section).velocity,<sp/>(*act_section).adirection,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).radius,<sp/>(*act_section).nVehicle,<sp/>(*act_section).gamma_s,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*act_section).gamma_e);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_console_new_){</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xrefpoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yrefpoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Waypoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).type<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Starting<sp/>a<sp/>Waypoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::PointStamped<sp/>aux;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Controller<sp/>needs<sp/>the<sp/>Global<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.point.x<sp/>=<sp/>(*act_section).xe<sp/>+<sp/>xrefpoint;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.point.y<sp/>=<sp/>(*act_section).ye<sp/>+<sp/>yrefpoint;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>As<sp/>long<sp/>as<sp/>a<sp/>waypoint<sp/>is<sp/>required<sp/>even<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>mission<sp/>gamma<sp/>starts<sp/>counting<sp/>from<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_e<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>wpref_pub_.publish(aux);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Line<sp/>or<sp/>Arc<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).type<sp/>==<sp/>2<sp/>||<sp/>(*act_section).type<sp/>==<sp/>3)<sp/>{<sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Starting<sp/>a<sp/>Path<sp/>Following<sp/>Mission&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>medusa_msgs::Section<sp/>aux;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.xrefpoint<sp/>=<sp/>xrefpoint;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.yrefpoint<sp/>=<sp/>yrefpoint;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.direction<sp/>=<sp/>(*act_section).adirection;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.xs<sp/>=<sp/>(*act_section).xi;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.ys<sp/>=<sp/>(*act_section).yi;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.xc<sp/>=<sp/>(*act_section).xc;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.yc<sp/>=<sp/>(*act_section).yc;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.xe<sp/>=<sp/>(*act_section).xe;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.ye<sp/>=<sp/>(*act_section).ye;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.Vl<sp/>=<sp/>(*act_section).velocity;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.direction<sp/>=<sp/>(*act_section).adirection;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.R0<sp/>=<sp/>(*act_section).radius;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.Gamma_s<sp/>=<sp/>(*act_section).gamma_s;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>aux.Gamma_e<sp/>=<sp/>(*act_section).gamma_e;<sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>section_pub_.publish(aux);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>New<sp/>gamma<sp/>is<sp/>the<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_s<sp/>=<sp/>gamma_e;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Updated<sp/>gamma<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma_e<sp/>=<sp/>(*act_section).gamma_e;<sp/></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_WARN(</highlight><highlight class="stringliteral">&quot;Gamma:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>gamma_e);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Depth<sp/>and<sp/>Altitude<sp/>References</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).type<sp/>==<sp/>4<sp/>||<sp/>(*act_section).type<sp/>==<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;STARTING<sp/>DEPTH<sp/>PUBLISHING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).type<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DesiredDepth<sp/>=<sp/>-(*act_section).depth;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DesiredDepth<sp/>=<sp/>(*act_section).depth;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Activate<sp/>the<sp/>end<sp/>of<sp/>references<sp/>for<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).time<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>depth_end<sp/>=<sp/>ros::Time::now()<sp/>+<sp/>ros::Duration((*act_section).time);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma_s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma_e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++act_section;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startNewSection();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>depth_end<sp/>=<sp/>ros::Time(0);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.start();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="759"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>@.@<sp/>Callbacks<sp/>Section<sp/>/<sp/>Methods</highlight></codeline>
<codeline lineno="761"><highlight class="comment">#######################################################################################################################</highlight></codeline>
<codeline lineno="762"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>@.@<sp/>Depth<sp/>Callback<sp/>-&gt;<sp/>Iteration<sp/>via<sp/>timer<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::depthCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::TimerEvent<sp/>&amp;event)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Depth<sp/>with<sp/>schedule<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth_end<sp/>!=<sp/>ros::Time(0))<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((depth_end<sp/>-<sp/>ros::Time::now()).toSec()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DesiredDepth<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma_s<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma_e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++act_section;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startNewSection();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>std_msgs::Float64<sp/>depth;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Depth<sp/>Reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DesiredDepth<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>depth.data<sp/>=<sp/>DesiredDepth;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>depth_pub_.publish(depth);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO_THROTTLE(10.0,<sp/></highlight><highlight class="stringliteral">&quot;Desired<sp/>Depth:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>depth.data);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>depth.data<sp/>=<sp/>-DesiredDepth;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>altitude_pub_.publish(depth);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO_THROTTLE(10.0,<sp/></highlight><highlight class="stringliteral">&quot;Desired<sp/>Altitude:<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>depth.data);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@.@<sp/>Flag<sp/>Callback<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::flagCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::Int8<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Check<sp/>the<sp/>Flag<sp/>if<sp/>there<sp/>is<sp/>a<sp/>mission<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ENABLE)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Abort<sp/>everything<sp/>if<sp/>received<sp/>flag<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.data<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>IDLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>ENABLE<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Path-Following<sp/>Mission<sp/>-<sp/>Flag<sp/>should<sp/>be<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).type<sp/>==<sp/>2<sp/>||<sp/>(*act_section).type<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.data<sp/>!=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ENABLE<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_.stop();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Mission<sp/>Ended<sp/>due<sp/>to<sp/>changes<sp/>in<sp/>the<sp/>Flag.<sp/>Got<sp/>%d<sp/>instead<sp/>of<sp/>6&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.data);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@.@<sp/>Callback<sp/>for<sp/>updating<sp/>2D<sp/>position<sp/>(X,Y)<sp/>values<sp/>in<sp/>the<sp/>State<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::updateCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>auv_msgs::NavigationStatus<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>waypoint<sp/>works<sp/>in<sp/>ENU<sp/>but<sp/>state<sp/>from<sp/>filter<sp/>is<sp/>in<sp/>NED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>x_act<sp/>=<sp/>msg.position.east;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>y_act<sp/>=<sp/>msg.position.north;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_console_new_){</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>xrefpoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>yrefpoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ENABLE<sp/>&amp;&amp;<sp/>(*act_section).type<sp/>==<sp/>1)<sp/>{<sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Position<sp/>and<sp/>end<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXf<sp/>Pos(2),<sp/>pe(2);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>pe[0]<sp/>=<sp/>(*act_section).xe;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>pe[1]<sp/>=<sp/>(*act_section).ye;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>Pos[0]<sp/>=<sp/>x_act<sp/>-<sp/>xrefpoint;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>Pos[1]<sp/>=<sp/>y_act<sp/>-<sp/>yrefpoint;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Pos<sp/>-<sp/>pe).norm()<sp/>&lt;<sp/>(*act_section).radius<sp/>*<sp/>1.2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*act_section).time<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::Duration((*act_section).time).sleep();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++act_section;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Start<sp/>Next<sp/>Section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startNewSection();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@.@<sp/>Callback<sp/>for<sp/>comparing<sp/>the<sp/>calculated<sp/>gamma<sp/>from<sp/>a<sp/>pf<sp/>algorithm<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsolePathParserNode::missionCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::String<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Mission<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>msg.data.c_str());</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>ROS<sp/>set-ups:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;console_path_parser_node&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>node<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>create<sp/>a<sp/>node<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>nh,<sp/>nh_p(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;main:<sp/>instantiating<sp/>an<sp/>object<sp/>of<sp/>type<sp/>ConsolePathParserNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>instantiate<sp/>an<sp/>ConsolePathParserNode<sp/>class<sp/>object<sp/>and<sp/>pass<sp/>in<sp/>pointers<sp/>to<sp/>nodehandlers<sp/>for<sp/>constructor<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><ref refid="classConsolePathParserNode" kindref="compound">ConsolePathParserNode</ref><sp/>consolePathParser(&amp;nh,<sp/>&amp;nh_p);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+.+<sp/>Working<sp/>with<sp/>timer<sp/>-&gt;<sp/>going<sp/>into<sp/>spin;<sp/>let<sp/>the<sp/>callbacks<sp/>do<sp/>all<sp/>the<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ros/ConsolePathParserNode.cpp"/>
  </compounddef>
</doxygen>
