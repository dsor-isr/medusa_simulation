<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="PoseGTROSPlugin_8cc" kind="file" language="C++">
    <compoundname>PoseGTROSPlugin.cc</compoundname>
    <includes refid="PoseGTROSPlugin_8hh" local="no">uuv_sensor_ros_plugins/PoseGTROSPlugin.hh</includes>
    <includes local="no">dsor_utils/frames.hpp</includes>
    <includes local="no">Eigen/Dense</includes>
    <incdepgraph>
      <node id="1">
        <label>src/PoseGTROSPlugin.cc</label>
        <link refid="PoseGTROSPlugin_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>gazebo/common/Plugin.hh</label>
      </node>
      <node id="13">
        <label>gazebo/common/common.hh</label>
      </node>
      <node id="26">
        <label>functional</label>
      </node>
      <node id="9">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="29">
        <label>tf/transform_listener.h</label>
      </node>
      <node id="30">
        <label>tf/transform_broadcaster.h</label>
      </node>
      <node id="17">
        <label>std_msgs/Bool.h</label>
      </node>
      <node id="12">
        <label>uuv_sensor_ros_plugins/ROSBasePlugin.hh</label>
        <link refid="ROSBasePlugin_8hh_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nav_msgs/Odometry.h</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="31">
        <label>dsor_utils/frames.hpp</label>
      </node>
      <node id="25">
        <label>map</label>
      </node>
      <node id="22">
        <label>tf/tf.h</label>
      </node>
      <node id="3">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="24">
        <label>random</label>
      </node>
      <node id="16">
        <label>Eigen/Dense</label>
      </node>
      <node id="7">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="28">
        <label>tf/transform_datatypes.h</label>
      </node>
      <node id="19">
        <label>gazebo/sensors/Noise.hh</label>
      </node>
      <node id="18">
        <label>uuv_sensor_ros_plugins_msgs/ChangeSensorState.h</label>
      </node>
      <node id="10">
        <label>uuv_sensor_ros_plugins/ROSBaseModelPlugin.hh</label>
        <link refid="ROSBaseModelPlugin_8hh_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ros/ros.h</label>
      </node>
      <node id="14">
        <label>uuv_sensor_ros_plugins/Common.hh</label>
        <link refid="Common_8hh_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>boost/bind.hpp</label>
      </node>
      <node id="8">
        <label>tf2_ros/transform_listener.h</label>
      </node>
      <node id="23">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>gazebo/physics/physics.hh</label>
      </node>
      <node id="21">
        <label>tf/tfMessage.h</label>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
      <node id="2">
        <label>uuv_sensor_ros_plugins/PoseGTROSPlugin.hh</label>
        <link refid="PoseGTROSPlugin_8hh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>source<sp/>code<sp/>is<sp/>derived<sp/>from<sp/>gazebo_ros_pkgs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>(https://github.com/ros-simulation/gazebo_ros_pkgs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Copyright<sp/>2012<sp/>Open<sp/>Source<sp/>Robotics<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>licensed<sp/>under<sp/>the<sp/>Apache-2.0<sp/>license,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cf.<sp/>3rd-party-licenses.txt<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>original<sp/>code<sp/>was<sp/>modified<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>be<sp/>more<sp/>consistent<sp/>with<sp/>other<sp/>sensor<sp/>plugins<sp/>within<sp/>uuv_simulator,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>adhere<sp/>to<sp/>Gazebo&apos;s<sp/>coding<sp/>standards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uuv_sensor_ros_plugins/PoseGTROSPlugin.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dsor_utils/frames.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegazebo" kindref="compound">gazebo</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classgazebo_1_1PoseGTROSPlugin_1a7abaecb1897e10ef38f5c5263950a730" kindref="member">PoseGTROSPlugin::PoseGTROSPlugin</ref>()<sp/>:<sp/>ROSBaseModelPlugin()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>this-&gt;offset.Pos()<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>this-&gt;offset.Rot()<sp/>=<sp/>ignition::math::Quaterniond(ignition::math::Vector3d(0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>reference&apos;s<sp/>velocity<sp/>and<sp/>acceleration<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>this-&gt;refLinAcc<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>this-&gt;refAngAcc<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform<sp/>=<sp/>ignition::math::Pose3d::Zero;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>this-&gt;nedTransformIsInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classgazebo_1_1PoseGTROSPlugin_1a448aa8217a27d318a9a79a7e7a917e5e" kindref="member">PoseGTROSPlugin::~PoseGTROSPlugin</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1PoseGTROSPlugin_1a4c7e55e320c5619ea3d0b09d9760e2e1" kindref="member">PoseGTROSPlugin::Load</ref>(physics::ModelPtr<sp/>_model,<sp/>sdf::ElementPtr<sp/>_sdf)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classgazebo_1_1ROSBaseModelPlugin_1a9201b96ddee1a64ce43e59f3cf1ff2e9" kindref="member">ROSBaseModelPlugin::Load</ref>(_model,<sp/>_sdf);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>vec;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>GetSDFParam&lt;ignition::math::Vector3d&gt;(_sdf,<sp/></highlight><highlight class="stringliteral">&quot;position_offset&quot;</highlight><highlight class="normal">,<sp/>vec,<sp/>ignition::math::Vector3d::Zero);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1PoseGTROSPlugin_1ad4c38844932e1e6a64007d3748cff494" kindref="member">offset</ref>.Pos()<sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>GetSDFParam&lt;ignition::math::Vector3d&gt;(_sdf,<sp/></highlight><highlight class="stringliteral">&quot;orientation_offset&quot;</highlight><highlight class="normal">,<sp/>vec,<sp/>ignition::math::Vector3d::Zero);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1PoseGTROSPlugin_1ad4c38844932e1e6a64007d3748cff494" kindref="member">offset</ref>.Rot()<sp/>=<sp/>ignition::math::Quaterniond(vec);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>GetSDFParam&lt;bool&gt;(_sdf,<sp/></highlight><highlight class="stringliteral">&quot;publish_ned_odom&quot;</highlight><highlight class="normal">,<sp/>this-&gt;publishNEDOdom,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>reference&apos;s<sp/>velocity<sp/>and<sp/>acceleration<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lastRefLinVel<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lastRefAngVel<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lastRefLinVel<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>-&gt;WorldLinearVel();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lastRefAngVel<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>-&gt;WorldAngularVel();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>this-&gt;tfListener.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>tf2_ros::TransformListener(this-&gt;tfBuffer));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1aff7eafda5f899aa2304a870d1418a300" kindref="member">rosSensorOutputPub</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6b907bcd7669d3907f3c78e654fcca88" kindref="member">rosNode</ref>-&gt;advertise&lt;nav_msgs::Odometry&gt;(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a818f107bc9e165a3cc8016fd6859f86a" kindref="member">sensorOutputTopic</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1PoseGTROSPlugin_1a9b34da677b1f4b34d07fd02c4c44a8d2" kindref="member">PoseGTROSPlugin::OnUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>common::UpdateInfo&amp;<sp/>_info)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1af12a92a0ddf7c3c07163d32d6d95c655" kindref="member">EnableMeasurement</ref>(_info))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>current<sp/>simulation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>common::Time<sp/>curTime<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a24f910550057c819c246f5c3f74dae5a" kindref="member">world</ref>-&gt;SimTime();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>curTime.Double()<sp/>-<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ac3798d56f9ea70175d99ab80106b4319" kindref="member">lastMeasurementTime</ref>.Double();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dt<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>ignition::math::Pose3d<sp/>linkPose,<sp/>refLinkPose;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>refLinVel,<sp/>refAngVel;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>ignition::math::Vector3d<sp/>linkLinVel,<sp/>linkAngVel;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>this-&gt;UpdateNEDTransform();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>sensor<sp/>link&apos;s<sp/>current<sp/>pose<sp/>and<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>linkLinVel<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBaseModelPlugin_1ac405387fd2fcf90b48b368104031367d" kindref="member">link</ref>-&gt;WorldLinearVel();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>linkAngVel<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBaseModelPlugin_1ac405387fd2fcf90b48b368104031367d" kindref="member">link</ref>-&gt;WorldAngularVel();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>linkPose<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBaseModelPlugin_1ac405387fd2fcf90b48b368104031367d" kindref="member">link</ref>-&gt;WorldPose();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a768035af5fb258d9c07c4d7fd5049700" kindref="member">UpdateReferenceFramePose</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>reference<sp/>frame<sp/>in<sp/>case<sp/>it<sp/>is<sp/>given<sp/>as<sp/>a<sp/>Gazebo<sp/>link<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>reference<sp/>link&apos;s<sp/>linear<sp/>and<sp/>angular<sp/>velocity<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>refLinVel<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>-&gt;WorldLinearVel();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>refAngVel<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>-&gt;WorldAngularVel();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1aa788862de11b763facdf51ac105c535d" kindref="member">referenceFrame</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a34ff72f4617839866a593d0c1a00f375" kindref="member">referenceLink</ref>-&gt;WorldPose();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>Gazebo<sp/>link<sp/>is<sp/>given<sp/>as<sp/>a<sp/>reference,<sp/>the<sp/>linear<sp/>and<sp/>angular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>velocity<sp/>vectors<sp/>are<sp/>set<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>refLinVel<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>refAngVel<sp/>=<sp/>ignition::math::Vector3d::Zero;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>pose<sp/>and<sp/>velocity<sp/>vectors<sp/>to<sp/>be<sp/>represented<sp/>wrt<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>link<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>linkLinVel<sp/>-=<sp/>refLinVel;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>linkAngVel<sp/>-=<sp/>refAngVel;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>noise<sp/>to<sp/>the<sp/>link&apos;s<sp/>linear<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>linkLinVel<sp/>+=<sp/>ignition::math::Vector3d(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ae1fd5e5059943e83865efa837e52e3a7" kindref="member">GetGaussianNoise</ref>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6a7695e4dc91f9504a3ee88d5da94102" kindref="member">noiseAmp</ref>),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ae1fd5e5059943e83865efa837e52e3a7" kindref="member">GetGaussianNoise</ref>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6a7695e4dc91f9504a3ee88d5da94102" kindref="member">noiseAmp</ref>),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ae1fd5e5059943e83865efa837e52e3a7" kindref="member">GetGaussianNoise</ref>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6a7695e4dc91f9504a3ee88d5da94102" kindref="member">noiseAmp</ref>));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>noise<sp/>to<sp/>the<sp/>link&apos;s<sp/>angular<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>linkAngVel<sp/>+=<sp/>ignition::math::Vector3d(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ae1fd5e5059943e83865efa837e52e3a7" kindref="member">GetGaussianNoise</ref>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6a7695e4dc91f9504a3ee88d5da94102" kindref="member">noiseAmp</ref>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ae1fd5e5059943e83865efa837e52e3a7" kindref="member">GetGaussianNoise</ref>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6a7695e4dc91f9504a3ee88d5da94102" kindref="member">noiseAmp</ref>),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ae1fd5e5059943e83865efa837e52e3a7" kindref="member">GetGaussianNoise</ref>(this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1a6a7695e4dc91f9504a3ee88d5da94102" kindref="member">noiseAmp</ref>));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>the<sp/>odometry<sp/>message<sp/>of<sp/>the<sp/>base_link<sp/>wrt<sp/>Gazebo&apos;s<sp/>ENU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>inertial<sp/>reference<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>this-&gt;PublishOdomMessage(curTime,<sp/>linkPose,<sp/>linkLinVel,<sp/>linkAngVel);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>time<sp/>stamp<sp/>for<sp/>this<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1ac3798d56f9ea70175d99ab80106b4319" kindref="member">lastMeasurementTime</ref><sp/>=<sp/>curTime;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PoseGTROSPlugin::PublishOdomMessage(common::Time<sp/>_time,<sp/>ignition::math::Pose3d<sp/>_pose,<sp/>ignition::math::Vector3d<sp/>_linVel,<sp/>ignition::math::Vector3d<sp/>_angVel)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generates<sp/>an<sp/>Odometry<sp/>message<sp/>with<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>nav_msgs::Odometry<sp/>odomMsg;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>header<sp/>of<sp/>the<sp/>odometry<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>odomMsg.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;world&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>time<sp/>from<sp/>ros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>ros::Time<sp/>currentTime<sp/>=<sp/>ros::Time().now();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>odomMsg.header.stamp.sec<sp/>=<sp/>currentTime.sec;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>odomMsg.header.stamp.nsec<sp/>=<sp/>currentTime.nsec;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>odomMsg.child_frame_id<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBaseModelPlugin_1ac405387fd2fcf90b48b368104031367d" kindref="member">link</ref>-&gt;GetName();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>pose<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>_pose<sp/>+=<sp/>this-&gt;<ref refid="classgazebo_1_1PoseGTROSPlugin_1ad4c38844932e1e6a64007d3748cff494" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>position<sp/>in<sp/>ENU<sp/>(inertial<sp/>frame)<sp/>and<sp/>convert<sp/>to<sp/>NED<sp/>(inertial<sp/>frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>position_enu(_pose.Pos().X(),<sp/>_pose.Pos().Y(),<sp/>_pose.Pos().Z());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>position_ned;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>position_ned<sp/>=<sp/>DSOR::transform_vect_inertial_enu_ned(position_enu);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>orientation<sp/>in<sp/>ENU<sp/>and<sp/>convert<sp/>to<sp/>NED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>Eigen::Quaterniond<sp/>orientation_enu;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>orientation_enu.x()<sp/>=<sp/>_pose.Rot().X();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>orientation_enu.y()<sp/>=<sp/>_pose.Rot().Y();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>orientation_enu.z()<sp/>=<sp/>_pose.Rot().Z();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>orientation_enu.w()<sp/>=<sp/>_pose.Rot().W();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>Eigen::Quaterniond<sp/>orientation_ned;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>orientation_ned<sp/>=<sp/>DSOR::rot_body_to_inertial(orientation_enu);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>velocity<sp/>from<sp/>vehicle_ENU<sp/>(aka<sp/>body<sp/>ENU)<sp/>to<sp/>vehicle_NED<sp/>(aka<sp/>body<sp/>NED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>velocity_vehicle_enu(_linVel.X(),<sp/>_linVel.Y(),<sp/>_linVel.Z());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>velocity_vehicle_ned;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>velocity_vehicle_ned<sp/>=<sp/>DSOR::transform_vect_body_enu_ned(velocity_vehicle_enu);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>body<sp/>angular<sp/>velocity<sp/>in<sp/>(body<sp/>NED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>angular_velocity_enu(_angVel.X(),<sp/>_angVel.Y(),<sp/>_angVel.Z());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>angular_velocity_ned;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>angular_velocity_ned<sp/>=<sp/>DSOR::transform_vect_body_enu_ned(angular_velocity_enu);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>out<sp/>the<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.position.x<sp/>=<sp/>position_ned.x();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.position.y<sp/>=<sp/>position_ned.y();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.position.z<sp/>=<sp/>position_ned.z();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.orientation.x<sp/>=<sp/>orientation_ned.x();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.orientation.y<sp/>=<sp/>orientation_ned.y();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.orientation.z<sp/>=<sp/>orientation_ned.z();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>odomMsg.pose.pose.orientation.w<sp/>=<sp/>orientation_ned.w();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>odomMsg.twist.twist.linear.x<sp/>=<sp/>velocity_vehicle_ned.x();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>odomMsg.twist.twist.linear.y<sp/>=<sp/>velocity_vehicle_ned.y();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>odomMsg.twist.twist.linear.z<sp/>=<sp/>velocity_vehicle_ned.z();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>odomMsg.twist.twist.angular.x<sp/>=<sp/>angular_velocity_ned.x();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>odomMsg.twist.twist.angular.y<sp/>=<sp/>angular_velocity_ned.y();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>odomMsg.twist.twist.angular.z<sp/>=<sp/>angular_velocity_ned.z();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>in<sp/>the<sp/>covariance<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gn2<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1aef76766a171b7b9c0c236ff5987800f9" kindref="member">noiseSigma</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1aef76766a171b7b9c0c236ff5987800f9" kindref="member">noiseSigma</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>odomMsg.pose.covariance[0]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>odomMsg.pose.covariance[7]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>odomMsg.pose.covariance[14]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>odomMsg.pose.covariance[21]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>odomMsg.pose.covariance[28]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>odomMsg.pose.covariance[35]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>odomMsg.twist.covariance[0]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>odomMsg.twist.covariance[7]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>odomMsg.twist.covariance[14]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>odomMsg.twist.covariance[21]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>odomMsg.twist.covariance[28]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>odomMsg.twist.covariance[35]<sp/>=<sp/>gn2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ROSBasePlugin_1aff7eafda5f899aa2304a870d1418a300" kindref="member">rosSensorOutputPub</ref>.publish(odomMsg);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PoseGTROSPlugin::UpdateNEDTransform()<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;publishNEDOdom)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;nedTransformIsInit)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>geometry_msgs::TransformStamped<sp/>childTransform;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>std::string<sp/>targetFrame<sp/>=<sp/>this-&gt;nedFrameID;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>std::string<sp/>sourceFrame<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ROSBaseModelPlugin_1ac405387fd2fcf90b48b368104031367d" kindref="member">link</ref>-&gt;GetName();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform<sp/>=<sp/>this-&gt;tfBuffer.lookupTransform(targetFrame,<sp/>sourceFrame,<sp/>ros::Time(0));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(tf2::TransformException<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Transform<sp/>between<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>targetFrame<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sourceFrame<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/>ex.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.Pos()<sp/>=<sp/>ignition::math::Vector3d(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.translation.x,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.translation.y,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.translation.z);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>this-&gt;nedTransform.Rot()<sp/>=<sp/>ignition::math::Quaterniond(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.rotation.w,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.rotation.x,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.rotation.y,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>childTransform.transform.rotation.z);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>this-&gt;nedTransformIsInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(PoseGTROSPlugin)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/PoseGTROSPlugin.cc"/>
  </compounddef>
</doxygen>
