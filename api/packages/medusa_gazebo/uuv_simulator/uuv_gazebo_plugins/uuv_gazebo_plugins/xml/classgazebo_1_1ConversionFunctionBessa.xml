<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgazebo_1_1ConversionFunctionBessa" kind="class" language="C++" prot="public">
    <compoundname>gazebo::ConversionFunctionBessa</compoundname>
    <basecompoundref refid="classgazebo_1_1ConversionFunction" prot="public" virt="non-virtual">gazebo::ConversionFunction</basecompoundref>
    <includes refid="ThrusterConversionFcn_8hh" local="no">ThrusterConversionFcn.hh</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classgazebo_1_1ConversionFunctionBessa_1a30a2c7f70f224a46ea3a2931a65d635f" prot="private" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string gazebo::ConversionFunctionBessa::IDENTIFIER</definition>
        <argsstring></argsstring>
        <name>IDENTIFIER</name>
        <initializer>= &quot;Bessa&quot;</initializer>
        <briefdescription>
<para>The unique identifier of this conversion function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="134" column="37" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgazebo_1_1ConversionFunctionBessa_1a88fc66f186604e3016e50581adec26d5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double gazebo::ConversionFunctionBessa::rotorConstantL</definition>
        <argsstring></argsstring>
        <name>rotorConstantL</name>
        <briefdescription>
<para>Rotor constant for omega &lt; 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="140" column="19" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgazebo_1_1ConversionFunctionBessa_1a80c0ace3fdaca319830453dd3aa3621d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double gazebo::ConversionFunctionBessa::rotorConstantR</definition>
        <argsstring></argsstring>
        <name>rotorConstantR</name>
        <briefdescription>
<para>Rotor constant for omega &gt; 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="143" column="19" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgazebo_1_1ConversionFunctionBessa_1a0184a1d1f19c054a8da00be558984e1e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double gazebo::ConversionFunctionBessa::deltaL</definition>
        <argsstring></argsstring>
        <name>deltaL</name>
        <briefdescription>
<para>Dead-zone for omega &lt; 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="146" column="19" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgazebo_1_1ConversionFunctionBessa_1aa619db40514f2084f775b2d22cfca3c4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double gazebo::ConversionFunctionBessa::deltaR</definition>
        <argsstring></argsstring>
        <name>deltaR</name>
        <briefdescription>
<para>Dead-zone for omega &gt; 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="149" column="19" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgazebo_1_1ConversionFunctionBessa_1a235b07e281fabbb6724fb6712e72775d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgazebo_1_1ConversionFunction" kindref="compound">ConversionFunction</ref> *</type>
        <definition>ConversionFunction * gazebo::ConversionFunctionBessa::create</definition>
        <argsstring>(sdf::ElementPtr _sdf)</argsstring>
        <name>create</name>
        <param>
          <type>sdf::ElementPtr</type>
          <declname>_sdf</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classgazebo_1_1ConversionFunction" kindref="compound">ConversionFunction</ref> object according to its sdf Description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="119" column="37" bodyfile="src/ThrusterConversionFcn.cc" bodystart="99" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgazebo_1_1ConversionFunctionBessa_1a31637f978fdc895689920238998b7926" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string gazebo::ConversionFunctionBessa::GetType</definition>
        <argsstring>()</argsstring>
        <name>GetType</name>
        <reimplements refid="classgazebo_1_1ConversionFunction_1ac0d2640de379ea86c087491c70bc6189">GetType</reimplements>
        <briefdescription>
<para>Return (derived) type of conversion function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="122" column="31" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classgazebo_1_1ConversionFunctionBessa_1ad47b4e53609b493924d3f0e76626f133" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gazebo::ConversionFunctionBessa::GetParam</definition>
        <argsstring>(std::string _tag, double &amp;_output)</argsstring>
        <name>GetParam</name>
        <reimplements refid="classgazebo_1_1ConversionFunction_1a18c78fd782a8603afa893adc2a26f1a4">GetParam</reimplements>
        <param>
          <type>std::string</type>
          <declname>_tag</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>_output</declname>
        </param>
        <briefdescription>
<para>Return paramater in scalar form for the given tag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="125" column="24" bodyfile="src/ThrusterConversionFcn.cc" bodystart="159" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classgazebo_1_1ConversionFunctionBessa_1a2e863ecdfdeb289ada6d9045783d17a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double gazebo::ConversionFunctionBessa::convert</definition>
        <argsstring>(double _cmd)</argsstring>
        <name>convert</name>
        <reimplements refid="classgazebo_1_1ConversionFunction_1ac71ae91ae6e91ae177b8255477a2b950">convert</reimplements>
        <param>
          <type>double</type>
          <declname>_cmd</declname>
        </param>
        <briefdescription>
<para>Convert thruster state (e.g. angular velocity) to thrust force. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="128" column="26" bodyfile="src/ThrusterConversionFcn.cc" bodystart="127" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgazebo_1_1ConversionFunctionBessa_1a3609d2addedd4e4105f7632ca4634c8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gazebo::ConversionFunctionBessa::REGISTER_CONVERSIONFUNCTION</definition>
        <argsstring>(ConversionFunctionBessa)</argsstring>
        <name>REGISTER_CONVERSIONFUNCTION</name>
        <param>
          <type><ref refid="classgazebo_1_1ConversionFunctionBessa" kindref="compound">ConversionFunctionBessa</ref></type>
        </param>
        <briefdescription>
<para>Register this conversion function with the factory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="131" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classgazebo_1_1ConversionFunctionBessa_1afab84998dbf8c6bc4db702321f50019f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gazebo::ConversionFunctionBessa::ConversionFunctionBessa</definition>
        <argsstring>(double _rotorConstantL, double _rotorConstantR, double _deltaL, double _deltaR)</argsstring>
        <name>ConversionFunctionBessa</name>
        <param>
          <type>double</type>
          <declname>_rotorConstantL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_rotorConstantR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_deltaL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_deltaR</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="137" column="12" bodyfile="src/ThrusterConversionFcn.cc" bodystart="140" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Asymmetric conversion function with dead-zone nonlinearity. This corresponds to what is called Model 2 in Bessa et al.: Dynamic Positioning of Underwater Robotic Vehicles with Thruster <ref refid="classgazebo_1_1Dynamics" kindref="compound">Dynamics</ref> Compensation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>gazebo::ConversionFunction</label>
        <link refid="classgazebo_1_1ConversionFunction"/>
      </node>
      <node id="1">
        <label>gazebo::ConversionFunctionBessa</label>
        <link refid="classgazebo_1_1ConversionFunctionBessa"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>gazebo::ConversionFunction</label>
        <link refid="classgazebo_1_1ConversionFunction"/>
      </node>
      <node id="1">
        <label>gazebo::ConversionFunctionBessa</label>
        <link refid="classgazebo_1_1ConversionFunctionBessa"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" line="116" column="56" bodyfile="include/uuv_gazebo_plugins/ThrusterConversionFcn.hh" bodystart="116" bodyend="150"/>
    <listofallmembers>
      <member refid="classgazebo_1_1ConversionFunction_1a70689912f6f1f316a84f2dea2e10050d" prot="protected" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>ConversionFunction</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1afab84998dbf8c6bc4db702321f50019f" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>ConversionFunctionBessa</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a2e863ecdfdeb289ada6d9045783d17a0" prot="public" virt="virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>convert</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a235b07e281fabbb6724fb6712e72775d" prot="public" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>create</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a0184a1d1f19c054a8da00be558984e1e" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>deltaL</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1aa619db40514f2084f775b2d22cfca3c4" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>deltaR</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1ad47b4e53609b493924d3f0e76626f133" prot="public" virt="virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>GetParam</name></member>
      <member refid="classgazebo_1_1ConversionFunction_1a9e0c3b99751eeaf95f96dd49ed0351a2" prot="public" virt="virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>GetTable</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a31637f978fdc895689920238998b7926" prot="public" virt="virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>GetType</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a30a2c7f70f224a46ea3a2931a65d635f" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>IDENTIFIER</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a3609d2addedd4e4105f7632ca4634c8f" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>REGISTER_CONVERSIONFUNCTION</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a88fc66f186604e3016e50581adec26d5" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>rotorConstantL</name></member>
      <member refid="classgazebo_1_1ConversionFunctionBessa_1a80c0ace3fdaca319830453dd3aa3621d" prot="private" virt="non-virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>rotorConstantR</name></member>
      <member refid="classgazebo_1_1ConversionFunction_1afc13b3997ac95f70425ec5fc830d927c" prot="public" virt="virtual"><scope>gazebo::ConversionFunctionBessa</scope><name>~ConversionFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
