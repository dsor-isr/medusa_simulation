<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="UmbilicalPlugin_8cc" kind="file" language="C++">
    <compoundname>UmbilicalPlugin.cc</compoundname>
    <includes refid="UmbilicalPlugin_8hh" local="no">uuv_gazebo_plugins/UmbilicalPlugin.hh</includes>
    <incdepgraph>
      <node id="7">
        <label>gazebo/common/Plugin.hh</label>
      </node>
      <node id="10">
        <label>uuv_gazebo_plugins/UmbilicalModel.hh</label>
        <link refid="UmbilicalModel_8hh"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="1">
        <label>src/UmbilicalPlugin.cc</label>
        <link refid="UmbilicalPlugin_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>uuv_gazebo_plugins/UmbilicalPlugin.hh</label>
        <link refid="UmbilicalPlugin_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="6">
        <label>gazebo/common/UpdateInfo.hh</label>
      </node>
      <node id="14">
        <label>sdf/sdf.hh</label>
      </node>
      <node id="9">
        <label>gazebo/transport/TransportTypes.hh</label>
      </node>
      <node id="13">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="12">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="8">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="UmbilicalPlugin_8cc_1aa0457d29fbe099affb59c08843bb121a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gazebo::GZ_REGISTER_MODEL_PLUGIN</definition>
        <argsstring>(UmbilicalPlugin)</argsstring>
        <name>GZ_REGISTER_MODEL_PLUGIN</name>
        <param>
          <type>UmbilicalPlugin</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/UmbilicalPlugin.cc" line="69" column="1" declfile="src/UmbilicalPlugin.cc" declline="69" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="UmbilicalPlugin_8hh" kindref="compound">uuv_gazebo_plugins/UmbilicalPlugin.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gazebo<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="classgazebo_1_1UmbilicalPlugin_1a057f26aba6131c97efcfad72864c1c96" kindref="member">UmbilicalPlugin::UmbilicalPlugin</ref>()<sp/>:<sp/>ModelPlugin()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__PRETTY_FUNCTION__<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="classgazebo_1_1UmbilicalPlugin_1afd11fddc7265c89ce53a665688ea4baa" kindref="member">UmbilicalPlugin::~UmbilicalPlugin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a23741aa2b2775fb58db688c19b338c7f" kindref="member">updateConnection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a23741aa2b2775fb58db688c19b338c7f" kindref="member">updateConnection</ref>.reset();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1UmbilicalPlugin_1af44b8802650eb0c0d9842558db614914" kindref="member">UmbilicalPlugin::Load</ref>(physics::ModelPtr<sp/>_model,<sp/>sdf::ElementPtr<sp/>_sdf)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1aa495d0dd46d56e18550dfa30ec6a5ccf" kindref="member">model</ref><sp/>=<sp/>_model;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a9299893f7d97eb66ee07fb725ca165d4" kindref="member">world</ref><sp/>=<sp/>_model-&gt;GetWorld();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;umbilical_model&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>umbilical_model.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a02c19fdf4ddac48e3a46b5e72522c938" kindref="member">umbilical</ref>.reset(<ref refid="classgazebo_1_1UmbilicalModelFactory_1aa6505cb366b7415a287c968307288c4d" kindref="member">UmbilicalModelFactory::GetInstance</ref>().CreateUmbilicalModel(_sdf-&gt;GetElement(</highlight><highlight class="stringliteral">&quot;umbilical_model&quot;</highlight><highlight class="normal">),<sp/>_model));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a02c19fdf4ddac48e3a46b5e72522c938" kindref="member">umbilical</ref>-&gt;Init();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>transport<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a552cee3d43b51eb33048ad88120bf879" kindref="member">node</ref><sp/>=<sp/>transport::NodePtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>transport::Node());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::string<sp/>worldName;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>worldName<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a9299893f7d97eb66ee07fb725ca165d4" kindref="member">world</ref>-&gt;Name();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a552cee3d43b51eb33048ad88120bf879" kindref="member">node</ref>-&gt;Init(worldName);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>fluid<sp/>topic<sp/>is<sp/>available,<sp/>subscribe<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;flow_velocity_topic&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Umbilical<sp/>model<sp/>requires<sp/>flow<sp/>velocity<sp/>topic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>std::string<sp/>flowTopic<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;flow_velocity_topic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>GZ_ASSERT(!flowTopic.empty(),<sp/></highlight><highlight class="stringliteral">&quot;Fluid<sp/>velocity<sp/>topic<sp/>tag<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a5f7d8aee1c7f91bcfdc680484a60b4db" kindref="member">flowSubscriber</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a552cee3d43b51eb33048ad88120bf879" kindref="member">node</ref>-&gt;Subscribe(flowTopic,<sp/>&amp;<ref refid="classgazebo_1_1UmbilicalPlugin_1aafce9f28f1b7438e2585c9d5fe5d434c" kindref="member">UmbilicalPlugin::UpdateFlowVelocity</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Listen<sp/>to<sp/>the<sp/>update<sp/>event.<sp/>This<sp/>event<sp/>is<sp/>broadcast<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>simulation<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a23741aa2b2775fb58db688c19b338c7f" kindref="member">updateConnection</ref><sp/>=<sp/>event::Events::ConnectWorldUpdateBegin(boost::bind(&amp;<ref refid="classgazebo_1_1UmbilicalPlugin_1a27b0bf9ff8f9face03db37b7882e9195" kindref="member">UmbilicalPlugin::OnUpdate</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1UmbilicalPlugin_1aafce9f28f1b7438e2585c9d5fe5d434c" kindref="member">UmbilicalPlugin::UpdateFlowVelocity</ref>(ConstVector3dPtr<sp/>&amp;_msg)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a6b65710780f67008b0b167840d19d781" kindref="member">flowVelocity</ref>.X()<sp/>=<sp/>_msg-&gt;x();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a6b65710780f67008b0b167840d19d781" kindref="member">flowVelocity</ref>.Y()<sp/>=<sp/>_msg-&gt;y();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a6b65710780f67008b0b167840d19d781" kindref="member">flowVelocity</ref>.Z()<sp/>=<sp/>_msg-&gt;z();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1UmbilicalPlugin_1a27b0bf9ff8f9face03db37b7882e9195" kindref="member">UmbilicalPlugin::OnUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>common::UpdateInfo<sp/>&amp;_info)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a02c19fdf4ddac48e3a46b5e72522c938" kindref="member">umbilical</ref>-&gt;OnUpdate(_info,<sp/>this-&gt;<ref refid="classgazebo_1_1UmbilicalPlugin_1a6b65710780f67008b0b167840d19d781" kindref="member">flowVelocity</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(UmbilicalPlugin);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/UmbilicalPlugin.cc"/>
  </compounddef>
</doxygen>
