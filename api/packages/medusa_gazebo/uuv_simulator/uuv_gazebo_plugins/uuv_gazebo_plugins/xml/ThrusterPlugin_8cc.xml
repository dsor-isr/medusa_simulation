<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ThrusterPlugin_8cc" kind="file" language="C++">
    <compoundname>ThrusterPlugin.cc</compoundname>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includes local="no">limits</includes>
    <includes local="no">gazebo/gazebo.hh</includes>
    <includes local="no">gazebo/msgs/msgs.hh</includes>
    <includes local="no">gazebo/physics/Link.hh</includes>
    <includes local="no">gazebo/physics/Model.hh</includes>
    <includes local="no">gazebo/physics/PhysicsEngine.hh</includes>
    <includes local="no">gazebo/physics/World.hh</includes>
    <includes local="no">gazebo/transport/TransportTypes.hh</includes>
    <includes local="no">sdf/sdf.hh</includes>
    <includes local="no">math.h</includes>
    <includes refid="ThrusterPlugin_8hh" local="no">uuv_gazebo_plugins/ThrusterPlugin.hh</includes>
    <includes refid="Def_8hh" local="no">uuv_gazebo_plugins/Def.hh</includes>
    <incdepgraph>
      <node id="2">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="4">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="20">
        <label>uuv_gazebo_plugins/ThrusterConversionFcn.hh</label>
        <link refid="ThrusterConversionFcn_8hh"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>uuv_gazebo_plugins/Def.hh</label>
        <link refid="Def_8hh"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>uuv_gazebo_plugins/Dynamics.hh</label>
        <link refid="Dynamics_8hh"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="7">
        <label>gazebo/msgs/msgs.hh</label>
      </node>
      <node id="17">
        <label>map</label>
      </node>
      <node id="10">
        <label>gazebo/physics/PhysicsEngine.hh</label>
      </node>
      <node id="6">
        <label>gazebo/gazebo.hh</label>
      </node>
      <node id="13">
        <label>sdf/sdf.hh</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="23">
        <label>Double.pb.h</label>
      </node>
      <node id="1">
        <label>src/ThrusterPlugin.cc</label>
        <link refid="ThrusterPlugin_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>gazebo/transport/TransportTypes.hh</label>
      </node>
      <node id="14">
        <label>math.h</label>
      </node>
      <node id="16">
        <label>boost/scoped_ptr.hpp</label>
      </node>
      <node id="9">
        <label>gazebo/physics/Model.hh</label>
      </node>
      <node id="3">
        <label>boost/bind.hpp</label>
      </node>
      <node id="25">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="8">
        <label>gazebo/physics/Link.hh</label>
      </node>
      <node id="15">
        <label>uuv_gazebo_plugins/ThrusterPlugin.hh</label>
        <link refid="ThrusterPlugin_8hh"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>eigen3/Eigen/Geometry</label>
      </node>
      <node id="19">
        <label>memory</label>
      </node>
      <node id="11">
        <label>gazebo/physics/World.hh</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegazebo">gazebo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>The<sp/>UUV<sp/>Simulator<sp/>Authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/gazebo.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/msgs/msgs.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Link.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/Model.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/PhysicsEngine.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/physics/World.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo/transport/TransportTypes.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sdf/sdf.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ThrusterPlugin_8hh" kindref="compound">uuv_gazebo_plugins/ThrusterPlugin.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Def_8hh" kindref="compound">uuv_gazebo_plugins/Def.hh</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">GZ_REGISTER_MODEL_PLUGIN(<ref refid="classgazebo_1_1ThrusterPlugin" kindref="compound">gazebo::ThrusterPlugin</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gazebo</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classgazebo_1_1ThrusterPlugin_1a6b5841ff33686cc450313e03cf294d9c" kindref="member">ThrusterPlugin::ThrusterPlugin</ref>()<sp/>:<sp/>thrustForce(0),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputCommand(0),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clampMin(std::numeric_limits&lt;double&gt;::lowest()),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clampMax(std::numeric_limits&lt;double&gt;::max()),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrustMin(std::numeric_limits&lt;double&gt;::lowest()),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrustMax(std::numeric_limits&lt;double&gt;::max()),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain(1.0),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOn(true),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrustEfficiency(1.0),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propellerEfficiency(1.0),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrusterID(-1)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classgazebo_1_1ThrusterPlugin_1a06d1a5a37d484a2ce88329fd2fed8f59" kindref="member">ThrusterPlugin::~ThrusterPlugin</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a23c4d67fd108db7dabc2727244934a30" kindref="member">updateConnection</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a23c4d67fd108db7dabc2727244934a30" kindref="member">updateConnection</ref>.reset();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThrusterPlugin::Load(physics::ModelPtr<sp/>_model,<sp/>sdf::ElementPtr<sp/>_sdf)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(_model<sp/>!=<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>model<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializing<sp/>the<sp/>transport<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1afedb1c79f0a9c060cd4bc6c1ef541b68" kindref="member">node</ref><sp/>=<sp/>transport::NodePtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>transport::Node());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1afedb1c79f0a9c060cd4bc6c1ef541b68" kindref="member">node</ref>-&gt;Init(_model-&gt;GetWorld()-&gt;Name());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>link<sp/>name<sp/>on<sp/>which<sp/>the<sp/>thrust<sp/>will<sp/>be<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;linkName&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>linkName.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>linkName<sp/>=<sp/>_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;linkName&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a141de7a7aedb56861b9046ee7897399f" kindref="member">thrusterLink</ref><sp/>=<sp/>_model-&gt;GetLink(linkName);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(this-&gt;thrusterLink,<sp/></highlight><highlight class="stringliteral">&quot;thruster<sp/>link<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reading<sp/>thruster<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;thrusterID&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Thruster<sp/>ID<sp/>was<sp/>not<sp/>provided&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a2e6fb5eaaa297788fabb51bd8dc578e3" kindref="member">thrusterID</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;thrusterID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thruster<sp/>dynamics<sp/>configuration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;dynamics&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>dynamics.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a2a5bdae0148178c1688362257e59dbfa" kindref="member">thrusterDynamics</ref>.reset(<ref refid="classgazebo_1_1DynamicsFactory_1a6396cc1d091dc0907c825ec37c2ef4e3" kindref="member">DynamicsFactory::GetInstance</ref>().CreateDynamics(_sdf-&gt;GetElement(</highlight><highlight class="stringliteral">&quot;dynamics&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thrust<sp/>conversion<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;conversion&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>dynamics&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1aab369c9f214021b0e3372dd61907c257" kindref="member">conversionFunction</ref>.reset(<ref refid="classgazebo_1_1ConversionFunctionFactory_1acc7a6d4d975acadff293bf2af2748282" kindref="member">ConversionFunctionFactory::GetInstance</ref>().CreateConversionFunction(_sdf-&gt;GetElement(</highlight><highlight class="stringliteral">&quot;conversion&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>paramters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotor<sp/>joint,<sp/>used<sp/>for<sp/>visualization<sp/>if<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;jointName&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a5df1a3ae7ee6363498bf3221d7c70f93" kindref="member">joint</ref><sp/>=<sp/>_model-&gt;GetJoint(_sdf-&gt;Get&lt;std::string&gt;(</highlight><highlight class="stringliteral">&quot;jointName&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clamping<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;clampMin&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1ab2e98f8b4a89488d0455d7d57b84ec52" kindref="member">clampMin</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;clampMin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;clampMax&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a58ee9e27895d9921cc40cd0c64aa086d" kindref="member">clampMax</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;clampMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1ab2e98f8b4a89488d0455d7d57b84ec52" kindref="member">clampMin</ref><sp/>&gt;=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a58ee9e27895d9921cc40cd0c64aa086d" kindref="member">clampMax</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;clampMax<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>clampMin,<sp/>returning<sp/>to<sp/>default<sp/>values...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1ab2e98f8b4a89488d0455d7d57b84ec52" kindref="member">clampMin</ref><sp/>=<sp/>std::numeric_limits&lt;double&gt;::lowest();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a58ee9e27895d9921cc40cd0c64aa086d" kindref="member">clampMax</ref><sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Thrust<sp/>force<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;thrustMin&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1aad3011318655f542756926e0633de05e" kindref="member">thrustMin</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;thrustMin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;thrustMax&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a7730c8c0b69432591ab15e42f4deef35" kindref="member">thrustMax</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;thrustMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1aad3011318655f542756926e0633de05e" kindref="member">thrustMin</ref><sp/>&gt;=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a7730c8c0b69432591ab15e42f4deef35" kindref="member">thrustMax</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;thrustMax<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>thrustMin,<sp/>returning<sp/>to<sp/>default<sp/>values...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1aad3011318655f542756926e0633de05e" kindref="member">thrustMin</ref><sp/>=<sp/>std::numeric_limits&lt;double&gt;::lowest();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a7730c8c0b69432591ab15e42f4deef35" kindref="member">thrustMax</ref><sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gain<sp/>(1.0<sp/>by<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;gain&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a76067d3ea096103f7d6f3f43106e0e23" kindref="member">gain</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;gain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;thrust_efficiency&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a36d3369e6481b21d8450c012b21ea7a7" kindref="member">thrustEfficiency</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;thrust_efficiency&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;thrustEfficiency<sp/>&lt;<sp/>0.0<sp/>||<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a36d3369e6481b21d8450c012b21ea7a7" kindref="member">thrustEfficiency</ref><sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>thrust<sp/>efficiency<sp/>factor,<sp/>setting<sp/>it<sp/>to<sp/>100%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a36d3369e6481b21d8450c012b21ea7a7" kindref="member">thrustEfficiency</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_sdf-&gt;HasElement(</highlight><highlight class="stringliteral">&quot;propeller_efficiency&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a0e8f044924d12715aba76aa95555641d" kindref="member">propellerEfficiency</ref><sp/>=<sp/>_sdf-&gt;Get&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;propeller_efficiency&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;propellerEfficiency<sp/>&lt;<sp/>0.0<sp/>||<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a0e8f044924d12715aba76aa95555641d" kindref="member">propellerEfficiency</ref><sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzmsg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>propeller<sp/>dynamics<sp/>efficiency<sp/>factor,<sp/>setting<sp/>it<sp/>to<sp/>100%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a0e8f044924d12715aba76aa95555641d" kindref="member">propellerEfficiency</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root<sp/>string<sp/>for<sp/>topics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>strs;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>strs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_model-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/thrusters/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a2e6fb5eaaa297788fabb51bd8dc578e3" kindref="member">thrusterID</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1acde9d0318e86dfbc9e6e2af723ea9c3b" kindref="member">topicPrefix</ref><sp/>=<sp/>strs.str();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advertise<sp/>the<sp/>thrust<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a8ad82769e76b0844a87763446f03a267" kindref="member">thrustTopicPublisher</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1afedb1c79f0a9c060cd4bc6c1ef541b68" kindref="member">node</ref>-&gt;Advertise&lt;msgs::Vector3d&gt;(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1acde9d0318e86dfbc9e6e2af723ea9c3b" kindref="member">topicPrefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;thrust&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscribe<sp/>to<sp/>the<sp/>input<sp/>signal<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1ae4054a7444082b7f0195b3cf72bfad6f" kindref="member">commandSubscriber</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1afedb1c79f0a9c060cd4bc6c1ef541b68" kindref="member">node</ref>-&gt;Subscribe(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1acde9d0318e86dfbc9e6e2af723ea9c3b" kindref="member">topicPrefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classgazebo_1_1ThrusterPlugin_1a8ede5b7013c52fd890a429f55a0d0c74" kindref="member">ThrusterPlugin::UpdateInput</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>the<sp/>update<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a23c4d67fd108db7dabc2727244934a30" kindref="member">updateConnection</ref><sp/>=<sp/>event::Events::ConnectWorldUpdateBegin(boost::bind(&amp;<ref refid="classgazebo_1_1ThrusterPlugin_1a4cd1505e012721530e09cc346500ff12" kindref="member">ThrusterPlugin::Update</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a961eff0b01402bf7a56117a35e064b06" kindref="member">thrusterAxis</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a5df1a3ae7ee6363498bf3221d7c70f93" kindref="member">joint</ref>-&gt;WorldPose().Rot().RotateVectorReverse(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a5df1a3ae7ee6363498bf3221d7c70f93" kindref="member">joint</ref>-&gt;GlobalAxis(0));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThrusterPlugin::Init()<sp/>{}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1ThrusterPlugin_1a3a445ef9af6ff415eb3d2e319c232841" kindref="member">ThrusterPlugin::Reset</ref>()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a2a5bdae0148178c1688362257e59dbfa" kindref="member">thrusterDynamics</ref>-&gt;Reset();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1ThrusterPlugin_1a4cd1505e012721530e09cc346500ff12" kindref="member">ThrusterPlugin::Update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>common::UpdateInfo<sp/>&amp;_info)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(!std::isnan(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a617d0e909a0d82397d95954c8c103035" kindref="member">inputCommand</ref>),<sp/></highlight><highlight class="stringliteral">&quot;nan<sp/>in<sp/>this-&gt;inputCommand&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dynamicsInput;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dynamicState;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>the<sp/>thruster<sp/>has<sp/>been<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a86031b28be7600d3eedaecf3d11a9ea5" kindref="member">isOn</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clamped<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a617d0e909a0d82397d95954c8c103035" kindref="member">inputCommand</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clamped<sp/>=<sp/>std::min(clamped,<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a58ee9e27895d9921cc40cd0c64aa086d" kindref="member">clampMax</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clamped<sp/>=<sp/>std::max(clamped,<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1ab2e98f8b4a89488d0455d7d57b84ec52" kindref="member">clampMin</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dynamicsInput<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a76067d3ea096103f7d6f3f43106e0e23" kindref="member">gain</ref><sp/>*<sp/>clamped;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>the<sp/>thruster<sp/>is<sp/>turned<sp/>off<sp/>in<sp/>runtime,<sp/>the<sp/>dynamic<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>converge<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dynamicsInput<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>dynamicState<sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a0e8f044924d12715aba76aa95555641d" kindref="member">propellerEfficiency</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a2a5bdae0148178c1688362257e59dbfa" kindref="member">thrusterDynamics</ref>-&gt;update(dynamicsInput,<sp/>_info.simTime.Double());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(!std::isnan(dynamicState),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>dynamic<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiply<sp/>the<sp/>output<sp/>force<sp/>magnitude<sp/>with<sp/>the<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref><sp/>=<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a36d3369e6481b21d8450c012b21ea7a7" kindref="member">thrustEfficiency</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1aab369c9f214021b0e3372dd61907c257" kindref="member">conversionFunction</ref>-&gt;convert(dynamicState);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>GZ_ASSERT(!std::isnan(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref>),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>thrust<sp/>force&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>thrust<sp/>force<sp/>limits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref><sp/>=<sp/>std::max(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref>,<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1aad3011318655f542756926e0633de05e" kindref="member">thrustMin</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref><sp/>=<sp/>std::min(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref>,<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a7730c8c0b69432591ab15e42f4deef35" kindref="member">thrustMax</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1afc2f42b3a4d4dfe1d59bdb06a15bf8e7" kindref="member">thrustForceStamp</ref><sp/>=<sp/>_info.simTime;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ignition::math::Vector3d<sp/>force(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref><sp/>*<sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a961eff0b01402bf7a56117a35e064b06" kindref="member">thrusterAxis</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;thrusterLink-&gt;AddRelativeForce(force);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a5df1a3ae7ee6363498bf3221d7c70f93" kindref="member">joint</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>joint<sp/>rotate<sp/>with<sp/>correct<sp/>angular<sp/>velocity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a5df1a3ae7ee6363498bf3221d7c70f93" kindref="member">joint</ref>-&gt;SetVelocity(0,<sp/>dynamicState);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Publish<sp/>thrust:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>msgs::Vector3d<sp/>thrustMsg;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>msgs::Set(&amp;thrustMsg,<sp/>ignition::math::Vector3d(this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a3dd6123930d825ae14ca56b253b9c8a2" kindref="member">thrustForce</ref>,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a8ad82769e76b0844a87763446f03a267" kindref="member">thrustTopicPublisher</ref>-&gt;Publish(thrustMsg);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgazebo_1_1ThrusterPlugin_1a8ede5b7013c52fd890a429f55a0d0c74" kindref="member">ThrusterPlugin::UpdateInput</ref>(ConstDoublePtr<sp/>&amp;_msg)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classgazebo_1_1ThrusterPlugin_1a617d0e909a0d82397d95954c8c103035" kindref="member">inputCommand</ref><sp/>=<sp/>_msg-&gt;value();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/ThrusterPlugin.cc"/>
  </compounddef>
</doxygen>
