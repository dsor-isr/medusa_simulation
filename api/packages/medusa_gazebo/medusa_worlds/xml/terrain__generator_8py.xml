<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="terrain__generator_8py" kind="file" language="Python">
    <compoundname>terrain_generator.py</compoundname>
    <innernamespace refid="namespaceterrain__generator">terrain_generator</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceterrain__generator_1a0b9fb1fe63f31694f7bd6b6db9a15cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def terrain_generator.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/terrain_generator.py" line="21" column="1" bodyfile="scripts/terrain_generator.py" bodystart="21" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceterrain__generator" refkind="compound"><highlight class="comment">#!/usr/bin/python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">Convert<sp/>.mat<sp/>files<sp/>with<sp/>that<sp/>into<sp/>the<sp/>corresponding<sp/>.npy<sp/>and<sp/>.stl<sp/>files</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">@author:<sp/>Marcelo<sp/>Fialho<sp/>Jacinto</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">@email:<sp/>marcelo.jacinto@tecnico.ulisboa.pt</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">@date:<sp/>06/03/2021</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.tri<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>mtri</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>mpl_toolkits.mplot3d<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Axes3D</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>opensimplex<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OpenSimplex</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>stl<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mesh,<sp/>Mode</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>loadmat</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">main():</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>the<sp/>map<sp/>into<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map<sp/>=<sp/>loadmat(sys.argv[1])</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_mesh<sp/>=<sp/>map[</highlight><highlight class="stringliteral">&apos;X&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_mesh<sp/>=<sp/>map[</highlight><highlight class="stringliteral">&apos;Y&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_mesh<sp/>=<sp/>map[</highlight><highlight class="stringliteral">&apos;Z&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ðŸ¥´The<sp/>file<sp/>passed<sp/>as<sp/>argument<sp/>does<sp/>not<sp/>contain<sp/>matrices<sp/>with<sp/>names<sp/>&apos;X&apos;,<sp/>&apos;Y&apos;<sp/>or<sp/>&apos;Z&apos;.\n<sp/>Be<sp/>carefull<sp/>and<sp/>use<sp/>upper-case<sp/>letters!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Name<sp/>of<sp/>the<sp/>output<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>numpy_file_name<sp/>=<sp/>sys.argv[1].replace(</highlight><highlight class="stringliteral">&apos;.mat&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;.npy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>stl_file_name<sp/>=<sp/>sys.argv[1].replace(</highlight><highlight class="stringliteral">&apos;.mat&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;.stl&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>the<sp/>corresponding<sp/>numpy<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>np.save(numpy_file_name,<sp/>(x_mesh,<sp/>y_mesh,<sp/>z_mesh))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ðŸº<sp/>Generated<sp/>numpy<sp/>file<sp/>successfully!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>data<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>np.zeros(shape=(x_mesh.size,<sp/>3))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[:,<sp/>0]<sp/>=<sp/>x_mesh.flatten()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[:,<sp/>1]<sp/>=<sp/>y_mesh.flatten()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[:,<sp/>2]<sp/>=<sp/>z_mesh.flatten()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Triangulation<sp/>of<sp/>the<sp/>interpolated<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tri<sp/>=<sp/>mtri.Triangulation(output[:,<sp/>0],<sp/>output[:,<sp/>1])</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ðŸº<sp/>Generated<sp/>triangulation<sp/>of<sp/>the<sp/>data!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.imshow(z_mesh)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.colorbar()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>mesh<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seabed_mesh<sp/>=<sp/>mesh.Mesh(np.zeros(tri.triangles.shape[0],<sp/>dtype=mesh.Mesh.dtype))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ðŸº<sp/>Generated<sp/>a<sp/>3D<sp/>mesh!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(tri.triangles):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(3):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seabed_mesh.vectors[i][j]<sp/>=<sp/>output[f[j]]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>seabed<sp/>as<sp/>a<sp/>STL<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seabed_mesh.save(stl_file_name)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ðŸº<sp/>Generated<sp/>the<sp/>stl<sp/>file!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;âŒ&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(e)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Validate<sp/>the<sp/>arguments<sp/>of<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sys.argv)<sp/>!=<sp/>2<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sys.argv[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;-h&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sys.argv[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;-help&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sys.argv[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;h&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>sys.argv[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;help&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Execution<sp/>mode:<sp/>python<sp/>&lt;program_name&gt;<sp/>&lt;file.mat&gt;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;The<sp/>file<sp/>&lt;file.mat&gt;<sp/>should<sp/>contain<sp/>3<sp/>matrices<sp/>of<sp/>the<sp/>same<sp/>size<sp/>named<sp/>&apos;X&apos;,<sp/>&apos;Y&apos;<sp/>and<sp/>&apos;Z&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;NOTE:<sp/>Use<sp/>upper<sp/>case<sp/>letters<sp/>in<sp/>the<sp/>name<sp/>of<sp/>the<sp/>variables!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>main()</highlight></codeline>
    </programlisting>
    <location file="scripts/terrain_generator.py"/>
  </compounddef>
</doxygen>
